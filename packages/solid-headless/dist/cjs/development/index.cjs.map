{
  "version": 3,
  "sources": ["../../../src/index.ts", "../../../src/headless/disclosure/HeadlessDisclosureChild.ts", "../../../src/headless/disclosure/HeadlessDisclosureContext.ts", "../../../src/headless/disclosure/HeadlessDisclosureRoot.ts", "../../../src/headless/disclosure/useHeadlessDisclosure.ts", "../../../src/headless/select/HeadlessSelectChild.ts", "../../../src/headless/select/useHeadlessSelectProperties.ts", "../../../src/headless/select/HeadlessSelectOption.ts", "../../../src/headless/select/useHeadlessSelectOption.ts", "../../../src/headless/select/HeadlessSelectRoot.ts", "../../../src/headless/select/useHeadlessSelectMultiple.ts", "../../../src/headless/select/useHeadlessSelectSingle.ts", "../../../src/headless/select/useHeadlessSelect.ts", "../../../src/headless/toggle/HeadlessToggleChild.ts", "../../../src/headless/toggle/HeadlessToggleContext.ts", "../../../src/headless/toggle/HeadlessToggleRoot.ts", "../../../src/headless/toggle/useHeadlessToggle.ts", "../../../src/headless/input/HeadlessInputChild.ts", "../../../src/headless/input/HeadlessInputContext.ts", "../../../src/headless/input/HeadlessInputRoot.ts", "../../../src/headless/input/useHeadlessInput.ts", "../../../src/headless/autocomplete/HeadlessAutocompleteChild.ts", "../../../src/headless/autocomplete/useHeadlessAutocompleteProperties.ts", "../../../src/headless/autocomplete/HeadlessAutocompleteOption.ts", "../../../src/headless/autocomplete/useHeadlessAutocompleteOption.ts", "../../../src/headless/autocomplete/HeadlessAutocompleteRoot.ts", "../../../src/headless/autocomplete/useHeadlessAutocomplete.ts", "../../../src/components/accordion/Accordion.ts", "../../../src/components/accordion/AccordionMultipleControlled.ts", "../../../src/utils/create-dynamic.ts", "../../../src/utils/dynamic-prop.ts", "../../../src/utils/state-props.ts", "../../../src/components/accordion/AccordionContext.ts", "../../../src/utils/focus-query.ts", "../../../src/utils/focus-navigation.ts", "../../../src/utils/namespace.ts", "../../../src/utils/focus-navigator.ts", "../../../src/components/accordion/tags.ts", "../../../src/components/accordion/AccordionMultipleUncontrolled.ts", "../../../src/components/accordion/AccordionSingleControlled.ts", "../../../src/components/accordion/AccordionSingleUncontrolled.ts", "../../../src/components/accordion/AccordionItem.ts", "../../../src/components/accordion/AccordionItemContext.ts", "../../../src/components/accordion/AccordionHeader.ts", "../../../src/components/accordion/AccordionButton.ts", "../../../src/components/button/index.ts", "../../../src/components/accordion/AccordionPanel.ts", "../../../src/utils/Unmountable.ts", "../../../src/components/alert/index.ts", "../../../src/components/alert-dialog/AlertDialog.ts", "../../../src/components/alert-dialog/AlertDialogControlled.ts", "../../../src/utils/use-focus-start-point.ts", "../../../src/utils/focus-start-point.ts", "../../../src/components/alert-dialog/AlertDialogContext.ts", "../../../src/components/alert-dialog/tags.ts", "../../../src/components/alert-dialog/AlertDialogUncontrolled.ts", "../../../src/components/alert-dialog/AlertDialogDescription.ts", "../../../src/components/alert-dialog/AlertDialogOverlay.ts", "../../../src/components/alert-dialog/AlertDialogPanel.ts", "../../../src/components/alert-dialog/AlertDialogTitle.ts", "../../../src/components/checkbox/Checkbox.ts", "../../../src/components/checkbox/CheckboxControlled.ts", "../../../src/utils/Fragment.ts", "../../../src/components/checkbox/CheckboxContext.ts", "../../../src/components/checkbox/tags.ts", "../../../src/components/checkbox/CheckboxUncontrolled.ts", "../../../src/components/checkbox/CheckboxDescription.ts", "../../../src/components/checkbox/CheckboxIndicator.ts", "../../../src/components/checkbox/CheckboxLabel.ts", "../../../src/components/color-scheme/index.ts", "../../../src/components/command-bar/CommandBar.ts", "../../../src/components/command-bar/CommandBarControlled.ts", "../../../src/components/command-bar/CommandBarContext.ts", "../../../src/components/command-bar/CommandBarEvents.ts", "../../../src/components/command-bar/tags.ts", "../../../src/components/command-bar/CommandBarUncontrolled.ts", "../../../src/components/command-bar/CommandBarDescription.ts", "../../../src/components/command-bar/CommandBarOverlay.ts", "../../../src/components/command-bar/CommandBarPanel.ts", "../../../src/components/command-bar/CommandBarTitle.ts", "../../../src/components/context-menu/ContextMenu.ts", "../../../src/components/context-menu/ContextMenuControlled.ts", "../../../src/components/context-menu/ContextMenuContext.ts", "../../../src/components/context-menu/tags.ts", "../../../src/components/context-menu/ContextMenuUncontrolled.ts", "../../../src/components/context-menu/ContextMenuBoundary.ts", "../../../src/components/context-menu/ContextMenuOverlay.ts", "../../../src/components/context-menu/ContextMenuPanel.ts", "../../../src/components/dialog/Dialog.ts", "../../../src/components/dialog/DialogControlled.ts", "../../../src/components/dialog/DialogContext.ts", "../../../src/components/dialog/tags.ts", "../../../src/components/dialog/DialogUncontrolled.ts", "../../../src/components/dialog/DialogDescription.ts", "../../../src/components/dialog/DialogOverlay.ts", "../../../src/components/dialog/DialogPanel.ts", "../../../src/components/dialog/DialogTitle.ts", "../../../src/components/disclosure/Disclosure.ts", "../../../src/components/disclosure/DisclosureControlled.ts", "../../../src/components/disclosure/DisclosureContext.ts", "../../../src/components/disclosure/tags.ts", "../../../src/components/disclosure/DisclosureUncontrolled.ts", "../../../src/components/disclosure/DisclosureButton.ts", "../../../src/components/disclosure/DisclosurePanel.ts", "../../../src/components/feed/Feed.ts", "../../../src/components/feed/FeedContext.ts", "../../../src/components/feed/tags.ts", "../../../src/components/feed/FeedArticle.ts", "../../../src/components/feed/FeedArticleContext.ts", "../../../src/components/feed/FeedContentContext.ts", "../../../src/components/feed/FeedArticleDescription.ts", "../../../src/components/feed/FeedArticleLabel.ts", "../../../src/components/feed/FeedContent.ts", "../../../src/components/feed/FeedLabel.ts", "../../../src/components/listbox/Listbox.ts", "../../../src/components/listbox/ListboxMCSCD.ts", "../../../src/components/listbox/ListboxContext.ts", "../../../src/components/listbox/tags.ts", "../../../src/components/listbox/ListboxMCSUD.ts", "../../../src/components/listbox/ListboxMUSCD.ts", "../../../src/components/listbox/ListboxMUSUD.ts", "../../../src/components/listbox/ListboxSCSCD.ts", "../../../src/components/listbox/ListboxSCSUD.ts", "../../../src/components/listbox/ListboxSUSCD.ts", "../../../src/components/listbox/ListboxSUSUD.ts", "../../../src/components/listbox/ListboxButton.ts", "../../../src/components/listbox/ListboxLabel.ts", "../../../src/components/listbox/ListboxOption.ts", "../../../src/components/listbox/ListboxOptionsContext.ts", "../../../src/components/listbox/ListboxOptions.ts", "../../../src/components/menu/Menu.ts", "../../../src/components/menu/MenuContext.ts", "../../../src/components/menu/tags.ts", "../../../src/components/menu/MenuItem.ts", "../../../src/components/menu/MenuChild.ts", "../../../src/components/popover/Popover.ts", "../../../src/components/popover/PopoverControlled.ts", "../../../src/components/popover/PopoverContext.ts", "../../../src/components/popover/tags.ts", "../../../src/components/popover/PopoverUncontrolled.ts", "../../../src/components/popover/PopoverButton.ts", "../../../src/components/popover/PopoverOverlay.tsx", "../../../src/components/popover/PopoverPanel.ts", "../../../src/components/radio-group/RadioGroup.ts", "../../../src/components/radio-group/RadioGroupControlled.ts", "../../../src/components/radio-group/RadioGroupContext.ts", "../../../src/components/radio-group/RadioGroupRootContext.ts", "../../../src/components/radio-group/tags.ts", "../../../src/components/radio-group/RadioGroupUncontrolled.ts", "../../../src/components/radio-group/RadioGroupDescription.ts", "../../../src/components/radio-group/RadioGroupLabel.ts", "../../../src/components/radio-group/RadioGroupOption.ts", "../../../src/components/select/Select.ts", "../../../src/components/select/SelectMultipleControlled.ts", "../../../src/components/select/SelectContext.ts", "../../../src/components/select/tags.ts", "../../../src/components/select/SelectMultipleUncontrolled.ts", "../../../src/components/select/SelectSingleControlled.ts", "../../../src/components/select/SelectSingleUncontrolled.ts", "../../../src/components/select/SelectOption.ts", "../../../src/components/tabs/Tab.ts", "../../../src/components/tabs/TabGroupContext.ts", "../../../src/components/tabs/TabListContext.ts", "../../../src/components/tabs/tags.ts", "../../../src/components/tabs/TabGroup.ts", "../../../src/components/tabs/TabGroupControlled.ts", "../../../src/components/tabs/TabGroupUncontrolled.ts", "../../../src/components/tabs/TabList.ts", "../../../src/components/tabs/TabPanel.ts", "../../../src/components/toast/Toast.ts", "../../../src/components/toast/tags.ts", "../../../src/components/toast/ToastContext.ts", "../../../src/components/toast/Toaster.ts", "../../../src/components/toast/ToasterStore.ts", "../../../src/components/toast/useToaster.ts", "../../../src/components/toggle/index.ts", "../../../src/components/toggle/ToggleControlled.ts", "../../../src/components/toggle/tags.ts", "../../../src/components/toggle/ToggleUncontrolled.ts", "../../../src/components/toolbar/index.ts", "../../../src/components/transition/index.ts"],
  "sourcesContent": ["export * from './headless/disclosure';\nexport * from './headless/select';\nexport * from './headless/toggle';\nexport * from './headless/input';\nexport * from './headless/autocomplete';\n\nexport * from './components/accordion';\nexport * from './components/alert';\nexport * from './components/alert-dialog';\nexport * from './components/button';\nexport * from './components/checkbox';\nexport * from './components/color-scheme';\nexport * from './components/command-bar';\nexport * from './components/context-menu';\nexport * from './components/dialog';\nexport * from './components/disclosure';\nexport * from './components/feed';\nexport * from './components/listbox';\nexport * from './components/menu';\nexport * from './components/popover';\nexport * from './components/radio-group';\nexport * from './components/select';\nexport * from './components/tabs';\nexport * from './components/toast';\nexport * from './components/toggle';\nexport * from './components/toolbar';\nexport * from './components/transition';\n", "import {\n  createComponent,\n  createMemo,\n  JSX,\n} from 'solid-js';\nimport {\n  useHeadlessDisclosureProperties,\n} from './HeadlessDisclosureContext';\nimport {\n  HeadlessDisclosureProperties,\n} from './useHeadlessDisclosure';\n\nexport type HeadlessDisclosureChildRenderProp = (\n  (properties: HeadlessDisclosureProperties) => JSX.Element\n);\n\nfunction isHeadlessDisclosureChildRenderProp(\n  children: JSX.Element | HeadlessDisclosureChildRenderProp,\n): children is HeadlessDisclosureChildRenderProp {\n  return typeof children === 'function' && children.length > 0;\n}\n\nexport interface HeadlessDisclosureChildProps {\n  children?: JSX.Element | HeadlessDisclosureChildRenderProp;\n}\n\nexport function HeadlessDisclosureChild(props: HeadlessDisclosureChildProps): JSX.Element {\n  const properties = useHeadlessDisclosureProperties();\n  return createMemo(() => {\n    const body = props.children;\n    if (isHeadlessDisclosureChildRenderProp(body)) {\n      return body(properties);\n    }\n    return body;\n  });\n}\n\nexport function createHeadlessDisclosureChildProps(\n  props: HeadlessDisclosureChildProps,\n): HeadlessDisclosureChildProps {\n  return {\n    get children() {\n      return createComponent(HeadlessDisclosureChild, {\n        get children() {\n          return props.children;\n        },\n      });\n    },\n  };\n}\n", "import {\n  createContext,\n  useContext,\n} from 'solid-js';\nimport {\n  HeadlessDisclosureProperties,\n} from './useHeadlessDisclosure';\n\nexport const HeadlessDisclosureContext = createContext<HeadlessDisclosureProperties>();\n\nexport function useHeadlessDisclosureProperties(): HeadlessDisclosureProperties {\n  const properties = useContext(HeadlessDisclosureContext);\n  if (properties) {\n    return properties;\n  }\n  throw new Error('`useHeadlessDisclosureProperties` must be used within `<HeadlessDisclosureRoot>`.');\n}\n", "import {\n  createComponent,\n  createMemo,\n  JSX,\n} from 'solid-js';\nimport {\n  HeadlessDisclosureContext,\n} from './HeadlessDisclosureContext';\nimport {\n  HeadlessDisclosureOptions,\n  HeadlessDisclosureProperties,\n  useHeadlessDisclosure,\n} from './useHeadlessDisclosure';\n\nexport type HeadlessDisclosureRootRenderProp = (\n  (properties: HeadlessDisclosureProperties) => JSX.Element\n);\n\nfunction isHeadlessDisclosureRootRenderProp(\n  children: JSX.Element | HeadlessDisclosureRootRenderProp,\n): children is HeadlessDisclosureRootRenderProp {\n  return typeof children === 'function' && children.length > 0;\n}\n\nexport interface HeadlessDisclosureRootChildren {\n  children?: JSX.Element | HeadlessDisclosureRootRenderProp;\n}\n\nexport type HeadlessDisclosureRootProps =\n  HeadlessDisclosureOptions & HeadlessDisclosureRootChildren;\n\nexport function HeadlessDisclosureRoot(props: HeadlessDisclosureRootProps): JSX.Element {\n  const properties = useHeadlessDisclosure(props);\n  return createComponent(HeadlessDisclosureContext.Provider, {\n    value: properties,\n    get children() {\n      return createMemo(() => {\n        const body = props.children;\n        if (isHeadlessDisclosureRootRenderProp(body)) {\n          return body(properties);\n        }\n        return body;\n      });\n    },\n  });\n}\n", "import {\n  Accessor,\n  batch,\n  createSignal,\n} from 'solid-js';\n\nexport interface HeadlessDisclosureControlledOptions {\n  isOpen: boolean;\n  disabled?: boolean;\n  onChange?: (state: boolean) => void;\n}\nexport interface HeadlessDisclosureUncontrolledOptions {\n  defaultOpen: boolean;\n  disabled?: boolean;\n  onChange?: (state: boolean) => void;\n}\n\nexport type HeadlessDisclosureOptions =\n  | HeadlessDisclosureControlledOptions\n  | HeadlessDisclosureUncontrolledOptions;\n\nexport interface HeadlessDisclosureProperties {\n  isOpen(): boolean;\n  setState(newState: boolean): void;\n  disabled(): boolean;\n}\n\nexport function useHeadlessDisclosure(\n  options: HeadlessDisclosureOptions,\n): HeadlessDisclosureProperties {\n  let signal: Accessor<boolean>;\n  let setSignal: (value: boolean) => void;\n\n  if ('defaultOpen' in options) {\n    const [isOpen, setIsOpen] = createSignal(options.defaultOpen);\n    signal = isOpen;\n    setSignal = (value) => {\n      batch(() => {\n        setIsOpen(value);\n        options.onChange?.(value);\n      });\n    };\n  } else {\n    signal = () => options.isOpen;\n    setSignal = (value) => options.onChange?.(value);\n  }\n\n  return {\n    isOpen() {\n      return signal();\n    },\n    setState(value) {\n      if (!options.disabled) {\n        setSignal(value);\n      }\n    },\n    disabled() {\n      return !!options.disabled;\n    },\n  };\n}\n", "import {\n  createComponent,\n  createMemo,\n  JSX,\n} from 'solid-js';\nimport {\n  HeadlessSelectProperties,\n  useHeadlessSelectProperties,\n} from './useHeadlessSelectProperties';\n\nexport type HeadlessSelectChildRenderProp<T> = (\n  (properties: HeadlessSelectProperties<T>) => JSX.Element\n);\n\nfunction isHeadlessSelectChildRenderProp<T>(\n  children: JSX.Element | HeadlessSelectChildRenderProp<T>,\n): children is HeadlessSelectChildRenderProp<T> {\n  return typeof children === 'function' && children.length > 0;\n}\n\nexport interface HeadlessSelectChildProps<T> {\n  children?: JSX.Element | HeadlessSelectChildRenderProp<T>;\n}\n\nexport function HeadlessSelectChild<T>(props: HeadlessSelectChildProps<T>): JSX.Element {\n  const properties = useHeadlessSelectProperties<T>();\n  return createMemo(() => {\n    const body = props.children;\n    if (isHeadlessSelectChildRenderProp(body)) {\n      return body(properties);\n    }\n    return body;\n  });\n}\n\nexport function createHeadlessSelectChild<T>(\n  props: HeadlessSelectChildProps<T>,\n): { children: JSX.Element } {\n  return {\n    get children() {\n      return createComponent(HeadlessSelectChild, {\n        get children() {\n          return props.children;\n        },\n      });\n    },\n  };\n}\n", "import {\n  createContext, useContext,\n} from 'solid-js';\n\nexport interface HeadlessSelectProperties<T> {\n  isSelected(value: T): boolean;\n  select(value: T): void;\n  hasSelected(): boolean;\n  isActive(value: T): boolean;\n  hasActive(): boolean;\n  focus(value: T): void;\n  blur(): void;\n  disabled(): boolean;\n}\n\nexport const HeadlessSelectContext = createContext<HeadlessSelectProperties<any>>();\n\nexport function useHeadlessSelectProperties<T>(): HeadlessSelectProperties<T> {\n  const properties = useContext(HeadlessSelectContext);\n  if (properties) {\n    return properties;\n  }\n  throw new Error('`useHeadlessSelectProperties` must be used within HeadlessSelectRoot.');\n}\n", "import {\n  createComponent,\n  createMemo,\n  JSX,\n} from 'solid-js';\nimport {\n  HeadlessSelectOptionContext,\n  HeadlessSelectOptionProperties,\n  useHeadlessSelectOption,\n  useHeadlessSelectOptionProperties,\n} from './useHeadlessSelectOption';\n\nexport type HeadlessSelectOptionRenderProp = (\n  (properties: HeadlessSelectOptionProperties) => JSX.Element\n);\n\nfunction isHeadlessSelectOptionRenderProp(\n  children: JSX.Element | HeadlessSelectOptionRenderProp,\n): children is HeadlessSelectOptionRenderProp {\n  return typeof children === 'function' && children.length > 0;\n}\n\nexport interface HeadlessSelectOptionProps<T> {\n  value: T;\n  disabled?: boolean,\n  children?: JSX.Element | HeadlessSelectOptionRenderProp;\n}\n\nexport function HeadlessSelectOption<T>(\n  props: HeadlessSelectOptionProps<T>,\n): JSX.Element {\n  const properties = useHeadlessSelectOption(\n    () => props.value,\n    () => !!props.disabled,\n  );\n  return (\n    createComponent(HeadlessSelectOptionContext.Provider, {\n      value: properties,\n      get children() {\n        return createMemo(() => {\n          const body = props.children;\n          if (isHeadlessSelectOptionRenderProp(body)) {\n            return body(properties);\n          }\n          return body;\n        });\n      },\n    })\n  );\n}\n\nexport function createHeadlessSelectOptionProps<T>(\n  props: HeadlessSelectOptionProps<T>,\n): { children?: JSX.Element | HeadlessSelectOptionRenderProp } {\n  return {\n    get children() {\n      return createComponent(HeadlessSelectOption, {\n        get value() {\n          return props.value;\n        },\n        get disabled() {\n          return props.disabled;\n        },\n        get children() {\n          return props.children;\n        },\n      });\n    },\n  };\n}\n\nexport interface HeadlessSelectOptionChildProps {\n  children?: JSX.Element | HeadlessSelectOptionRenderProp;\n}\n\nexport function HeadlessSelectOptionChild(\n  props: HeadlessSelectOptionChildProps,\n): JSX.Element {\n  const properties = useHeadlessSelectOptionProperties();\n  return createMemo(() => {\n    const body = props.children;\n    if (isHeadlessSelectOptionRenderProp(body)) {\n      return body(properties);\n    }\n    return body;\n  });\n}\n\nexport function createHeadlessSelectOptionChildProps(\n  props: HeadlessSelectOptionChildProps,\n): HeadlessSelectOptionChildProps {\n  return {\n    get children() {\n      return createComponent(HeadlessSelectOptionChild, {\n        get children() {\n          return props.children;\n        },\n      });\n    },\n  };\n}\n", "import {\n  createContext,\n  useContext,\n} from 'solid-js';\nimport {\n  useHeadlessSelectProperties,\n} from './useHeadlessSelectProperties';\n\nexport interface HeadlessSelectOptionProperties {\n  isSelected(): boolean;\n  select(): void;\n  isActive(): boolean;\n  focus(): void;\n  blur(): void;\n  disabled(): boolean;\n}\n\nexport const HeadlessSelectOptionContext = createContext<HeadlessSelectOptionProperties>();\n\nexport function useHeadlessSelectOptionProperties(): HeadlessSelectOptionProperties {\n  const properties = useContext(HeadlessSelectOptionContext);\n  if (properties) {\n    return properties;\n  }\n  throw new Error('`useHeadlessSelectOptionProperties` must be used within HeadlessSelectOption');\n}\n\nexport function useHeadlessSelectOption<T>(\n  value: () => T,\n  disabled?: () => boolean,\n): HeadlessSelectOptionProperties {\n  const properties = useHeadlessSelectProperties<T>();\n  const isDisabled = () => {\n    const local = disabled?.();\n    const parent = properties.disabled();\n    return local || parent;\n  };\n  return {\n    isSelected() {\n      return properties.isSelected(value());\n    },\n    isActive() {\n      return properties.isActive(value());\n    },\n    select() {\n      if (!isDisabled()) {\n        properties.select(value());\n      }\n    },\n    focus() {\n      if (!isDisabled()) {\n        properties.focus(value());\n      }\n    },\n    blur() {\n      if (!isDisabled() && this.isActive()) {\n        properties.blur();\n      }\n    },\n    disabled: isDisabled,\n  };\n}\n", "import {\n  createComponent,\n  createMemo,\n  JSX,\n} from 'solid-js';\nimport {\n  HeadlessSelectContext,\n  HeadlessSelectProperties,\n} from './useHeadlessSelectProperties';\nimport {\n  useHeadlessSelect,\n  HeadlessSelectOptions,\n} from './useHeadlessSelect';\nimport {\n  HeadlessSelectMultipleControlledOptions,\n  HeadlessSelectMultipleUncontrolledOptions,\n} from './useHeadlessSelectMultiple';\nimport {\n  HeadlessSelectSingleControlledOptions,\n  HeadlessSelectSingleUncontrolledOptions,\n} from './useHeadlessSelectSingle';\n\nexport type HeadlessSelectRootRenderProp<T> = (\n  (properties: HeadlessSelectProperties<T>) => JSX.Element\n);\n\nfunction isHeadlessSelectRootRenderProp<T>(\n  children: JSX.Element | HeadlessSelectRootRenderProp<T>,\n): children is HeadlessSelectRootRenderProp<T> {\n  return typeof children === 'function' && children.length > 0;\n}\n\nexport interface HeadlessSelectRootChildren<T> {\n  children?: JSX.Element | HeadlessSelectRootRenderProp<T>;\n}\n\nexport type HeadlessSelectRootProps<T> = HeadlessSelectRootChildren<T> & HeadlessSelectOptions<T>;\n\nexport function HeadlessSelectRoot<T>(props: HeadlessSelectRootProps<T>): JSX.Element {\n  const properties = useHeadlessSelect(props);\n  return (\n    createComponent(HeadlessSelectContext.Provider, {\n      value: properties,\n      get children() {\n        return createMemo(() => {\n          const body = props.children;\n          if (isHeadlessSelectRootRenderProp(body)) {\n            return body(properties);\n          }\n          return body;\n        });\n      },\n    })\n  );\n}\n\nexport function createHeadlessSelectRootMultipleControlledProps<T>(\n  props: HeadlessSelectMultipleControlledOptions<T> & HeadlessSelectRootChildren<T>,\n): HeadlessSelectRootChildren<T> {\n  return {\n    get children() {\n      return createComponent(HeadlessSelectRoot, {\n        multiple: true,\n        onChange: props.onChange,\n        get value() {\n          return props.value;\n        },\n        get toggleable() {\n          return props.toggleable;\n        },\n        get disabled() {\n          return props.disabled;\n        },\n        get children() {\n          return props.children;\n        },\n      } as HeadlessSelectRootProps<T>);\n    },\n  };\n}\n\nexport function createHeadlessSelectRootMultipleUncontrolledProps<T>(\n  props: HeadlessSelectMultipleUncontrolledOptions<T> & HeadlessSelectRootChildren<T>,\n): HeadlessSelectRootChildren<T> {\n  return {\n    get children() {\n      return createComponent(HeadlessSelectRoot, {\n        multiple: true,\n        onChange: props.onChange,\n        get defaultValue() {\n          return props.defaultValue;\n        },\n        get toggleable() {\n          return props.toggleable;\n        },\n        get disabled() {\n          return props.disabled;\n        },\n        get children() {\n          return props.children;\n        },\n      } as HeadlessSelectRootProps<T>);\n    },\n  };\n}\n\nexport function createHeadlessSelectRootSingleControlledProps<T>(\n  props: HeadlessSelectSingleControlledOptions<T> & HeadlessSelectRootChildren<T>,\n): HeadlessSelectRootChildren<T> {\n  return {\n    get children() {\n      return createComponent(HeadlessSelectRoot, {\n        onChange: props.onChange,\n        get value() {\n          return props.value;\n        },\n        get toggleable() {\n          return props.toggleable;\n        },\n        get disabled() {\n          return props.disabled;\n        },\n        get children() {\n          return props.children;\n        },\n      } as HeadlessSelectRootProps<T>);\n    },\n  };\n}\n\nexport function createHeadlessSelectRootSingleUncontrolledProps<T>(\n  props: HeadlessSelectSingleUncontrolledOptions<T> & HeadlessSelectRootChildren<T>,\n): HeadlessSelectRootChildren<T> {\n  return {\n    get children() {\n      return createComponent(HeadlessSelectRoot, {\n        onChange: props.onChange,\n        get defaultValue() {\n          return props.defaultValue;\n        },\n        get toggleable() {\n          return props.toggleable;\n        },\n        get disabled() {\n          return props.disabled;\n        },\n        get children() {\n          return props.children;\n        },\n      } as HeadlessSelectRootProps<T>);\n    },\n  };\n}\n", "import {\n  Accessor,\n  batch,\n  createSignal,\n  untrack,\n} from 'solid-js';\nimport {\n  Ref,\n} from '../../utils/types';\nimport {\n  HeadlessSelectProperties,\n} from './useHeadlessSelectProperties';\n\nexport interface HeadlessSelectMultipleControlledOptions<T> {\n  multiple: true;\n  toggleable?: boolean;\n  value: T[];\n  onChange?: (value: T[]) => void;\n  disabled?: boolean;\n}\n\nexport interface HeadlessSelectMultipleUncontrolledOptions<T> {\n  multiple: true;\n  toggleable?: boolean;\n  defaultValue: T[];\n  onChange?: (value: T[]) => void;\n  disabled?: boolean;\n}\n\nexport type HeadlessSelectMultipleOptions<T> =\n  | HeadlessSelectMultipleControlledOptions<T>\n  | HeadlessSelectMultipleUncontrolledOptions<T>;\n\nexport function useHeadlessSelectMultiple<T>(\n  options: HeadlessSelectMultipleOptions<T>,\n): HeadlessSelectProperties<T> {\n  const [active, setActive] = createSignal<Ref<T>>();\n\n  let selectedValues: Accessor<T[]>;\n  let setSelectedValues: (value: T[]) => void;\n\n  if ('defaultValue' in options) {\n    const [selected, setSelected] = createSignal<T[]>(options.defaultValue);\n    selectedValues = selected;\n    setSelectedValues = (value) => {\n      batch(() => {\n        setSelected(() => value);\n        options.onChange?.(value);\n      });\n    };\n  } else {\n    selectedValues = () => options.value;\n    setSelectedValues = (value) => options.onChange?.(value);\n  }\n\n  return {\n    isSelected(value) {\n      return new Set(selectedValues()).has(value);\n    },\n    select(value) {\n      const set = new Set(untrack(selectedValues));\n      if (options.toggleable && set.has(value)) {\n        set.delete(value);\n      } else {\n        set.add(value);\n      }\n      setSelectedValues([\n        ...set,\n      ]);\n    },\n    hasSelected() {\n      return selectedValues().length > 0;\n    },\n    disabled() {\n      return !!options.disabled;\n    },\n    hasActive() {\n      return !!active();\n    },\n    isActive(value) {\n      const ref = active();\n      if (ref) {\n        return Object.is(value, ref.value);\n      }\n      return false;\n    },\n    focus(value) {\n      return setActive({\n        value,\n      });\n    },\n    blur() {\n      return setActive(undefined);\n    },\n  };\n}\n", "import {\n  createSignal,\n  Accessor,\n  untrack,\n  batch,\n} from 'solid-js';\nimport {\n  Ref,\n} from '../../utils/types';\nimport {\n  HeadlessSelectProperties,\n} from './useHeadlessSelectProperties';\n\nexport interface HeadlessSelectSingleControlledOptions<T> {\n  toggleable?: boolean;\n  value: T;\n  onChange?: (value?: T) => void;\n  disabled?: boolean;\n}\n\nexport interface HeadlessSelectSingleUncontrolledOptions<T> {\n  toggleable?: boolean;\n  defaultValue: T;\n  onChange?: (value?: T) => void;\n  disabled?: boolean;\n}\n\nexport type HeadlessSelectSingleOptions<T> =\n  | HeadlessSelectSingleControlledOptions<T>\n  | HeadlessSelectSingleUncontrolledOptions<T>;\n\nexport function useHeadlessSelectSingle<T>(\n  options: HeadlessSelectSingleOptions<T>,\n): HeadlessSelectProperties<T> {\n  const [active, setActive] = createSignal<Ref<T>>();\n\n  let selectedValue: Accessor<T | undefined>;\n  let setSelectedValue: (value: T | undefined) => void;\n\n  if ('defaultValue' in options) {\n    const [selected, setSelected] = createSignal<T | undefined>(options.defaultValue);\n    selectedValue = selected;\n    setSelectedValue = (value) => {\n      batch(() => {\n        setSelected(() => value);\n        options.onChange?.(value);\n      });\n    };\n  } else {\n    selectedValue = () => options.value;\n    setSelectedValue = (value) => options.onChange?.(value);\n  }\n\n  return {\n    isSelected(value) {\n      return Object.is(value, selectedValue());\n    },\n    select(value) {\n      if (options.toggleable && Object.is(untrack(selectedValue), value)) {\n        setSelectedValue(undefined);\n      } else {\n        setSelectedValue(value);\n      }\n    },\n    hasSelected() {\n      return selectedValue() != null;\n    },\n    disabled() {\n      return !!options.disabled;\n    },\n    hasActive() {\n      return !!active();\n    },\n    isActive(value) {\n      const ref = active();\n      if (ref) {\n        return Object.is(value, ref.value);\n      }\n      return false;\n    },\n    focus(value) {\n      return setActive({\n        value,\n      });\n    },\n    blur() {\n      return setActive(undefined);\n    },\n  };\n}\n", "import {\n  HeadlessSelectProperties,\n} from './useHeadlessSelectProperties';\nimport {\n  useHeadlessSelectMultiple,\n  HeadlessSelectMultipleOptions,\n} from './useHeadlessSelectMultiple';\nimport {\n  useHeadlessSelectSingle,\n  HeadlessSelectSingleOptions,\n} from './useHeadlessSelectSingle';\n\nexport type HeadlessSelectOptions<T> =\n  | HeadlessSelectSingleOptions<T>\n  | HeadlessSelectMultipleOptions<T>;\n\nfunction isHeadlessSelectMultiple<T>(\n  options: HeadlessSelectOptions<T>,\n): options is HeadlessSelectMultipleOptions<T> {\n  return 'multiple' in options && options.multiple;\n}\n\nexport function useHeadlessSelect<T>(\n  options: HeadlessSelectOptions<T>,\n): HeadlessSelectProperties<T> {\n  if (isHeadlessSelectMultiple(options)) {\n    return useHeadlessSelectMultiple(options);\n  }\n\n  return useHeadlessSelectSingle(options);\n}\n", "import {\n  createMemo,\n  JSX,\n} from 'solid-js';\nimport {\n  useHeadlessToggleProperties,\n} from './HeadlessToggleContext';\nimport {\n  HeadlessToggleProperties,\n} from './useHeadlessToggle';\n\nexport type HeadlessToggleChildRenderProp = (\n  (properties: HeadlessToggleProperties) => JSX.Element\n);\n\nfunction isHeadlessToggleChildRenderProp(\n  children: JSX.Element | HeadlessToggleChildRenderProp,\n): children is HeadlessToggleChildRenderProp {\n  return typeof children === 'function' && children.length > 0;\n}\n\nexport interface HeadlessToggleChildProps {\n  children?: JSX.Element | HeadlessToggleChildRenderProp;\n}\n\nexport function HeadlessToggleChild(props: HeadlessToggleChildProps): JSX.Element {\n  const properties = useHeadlessToggleProperties();\n  return createMemo(() => {\n    const body = props.children;\n    if (isHeadlessToggleChildRenderProp(body)) {\n      return body(properties);\n    }\n    return body;\n  });\n}\n", "import {\n  createContext,\n  useContext,\n} from 'solid-js';\nimport {\n  HeadlessToggleProperties,\n} from './useHeadlessToggle';\n\nexport const HeadlessToggleContext = createContext<HeadlessToggleProperties>();\n\nexport function useHeadlessToggleProperties(): HeadlessToggleProperties {\n  const properties = useContext(HeadlessToggleContext);\n  if (properties) {\n    return properties;\n  }\n  throw new Error('`useHeadlessToggleProperties` must be used within `<HeadlessToggleRoot>`.');\n}\n", "import {\n  createComponent,\n  createMemo,\n  JSX,\n} from 'solid-js';\nimport {\n  HeadlessToggleContext,\n} from './HeadlessToggleContext';\nimport {\n  HeadlessToggleProperties,\n  HeadlessToggleOptions,\n  useHeadlessToggle,\n} from './useHeadlessToggle';\n\nexport type HeadlessToggleRootRenderProp = (\n  (properties: HeadlessToggleProperties) => JSX.Element\n);\n\nfunction isHeadlessToggleRootRenderProp(\n  children: JSX.Element | HeadlessToggleRootRenderProp,\n): children is HeadlessToggleRootRenderProp {\n  return typeof children === 'function' && children.length > 0;\n}\n\nexport interface HeadlessToggleRootChildren {\n  children?: JSX.Element | HeadlessToggleRootRenderProp;\n}\n\nexport type HeadlessToggleRootProps = HeadlessToggleOptions & HeadlessToggleRootChildren;\n\nexport function HeadlessToggleRoot(props: HeadlessToggleRootProps): JSX.Element {\n  const properties = useHeadlessToggle(props);\n  return createComponent(HeadlessToggleContext.Provider, {\n    value: properties,\n    get children() {\n      return createMemo(() => {\n        const body = props.children;\n        if (isHeadlessToggleRootRenderProp(body)) {\n          return body(properties);\n        }\n        return body;\n      });\n    },\n  });\n}\n", "import {\n  Accessor,\n  batch,\n  createSignal,\n} from 'solid-js';\n\nexport interface HeadlessToggleControlledOptions {\n  checked: boolean | undefined;\n  disabled?: boolean;\n  onChange?: (state?: boolean) => void;\n}\n\nexport interface HeadlessToggleUncontrolledOptions {\n  defaultChecked: boolean | undefined;\n  disabled?: boolean;\n  onChange?: (state?: boolean) => void;\n}\n\nexport type HeadlessToggleOptions =\n  | HeadlessToggleControlledOptions\n  | HeadlessToggleUncontrolledOptions;\n\nexport interface HeadlessToggleProperties {\n  checked(): boolean | undefined;\n  setState(newState?: boolean): void;\n  disabled(): boolean;\n}\n\nexport function useHeadlessToggle(\n  options: HeadlessToggleOptions,\n): HeadlessToggleProperties {\n  let signal: Accessor<boolean | undefined>;\n  let setSignal: (value: boolean | undefined) => void;\n\n  if ('defaultChecked' in options) {\n    const [isOpen, setIsOpen] = createSignal<boolean | undefined>(options.defaultChecked);\n    signal = isOpen;\n    setSignal = (value) => {\n      batch(() => {\n        setIsOpen(value);\n        options.onChange?.(value);\n      });\n    };\n  } else {\n    signal = () => options.checked;\n    setSignal = (value) => options.onChange?.(value);\n  }\n\n  return {\n    checked() {\n      return signal();\n    },\n    setState(value) {\n      if (!options.disabled) {\n        setSignal(value);\n        options.onChange?.(value);\n      }\n    },\n    disabled() {\n      return !!options.disabled;\n    },\n  };\n}\n", "import {\n  createMemo,\n  JSX,\n} from 'solid-js';\nimport {\n  useHeadlessInputProperties,\n} from './HeadlessInputContext';\nimport {\n  HeadlessInputProperties,\n} from './useHeadlessInput';\n\nexport type HeadlessInputChildRenderProp = (\n  (properties: HeadlessInputProperties) => JSX.Element\n);\n\nfunction isHeadlessInputChildRenderProp(\n  children: JSX.Element | HeadlessInputChildRenderProp,\n): children is HeadlessInputChildRenderProp {\n  return typeof children === 'function' && children.length > 0;\n}\n\nexport interface HeadlessInputChildProps {\n  children?: JSX.Element | HeadlessInputChildRenderProp;\n}\n\nexport function HeadlessInputChild(props: HeadlessInputChildProps): JSX.Element {\n  const properties = useHeadlessInputProperties();\n  return createMemo(() => {\n    const body = props.children;\n    if (isHeadlessInputChildRenderProp(body)) {\n      return body(properties);\n    }\n    return body;\n  });\n}\n", "import {\n  createContext,\n  useContext,\n} from 'solid-js';\nimport {\n  HeadlessInputProperties,\n} from './useHeadlessInput';\n\nexport const HeadlessInputContext = createContext<HeadlessInputProperties>();\n\nexport function useHeadlessInputProperties(): HeadlessInputProperties {\n  const properties = useContext(HeadlessInputContext);\n  if (properties) {\n    return properties;\n  }\n  throw new Error('`useHeadlessInputProperties` must be used within `<HeadlessInputRoot>`.');\n}\n", "import {\n  createComponent,\n  createMemo,\n  JSX,\n} from 'solid-js';\nimport {\n  HeadlessInputContext,\n} from './HeadlessInputContext';\nimport {\n  HeadlessInputProperties,\n  HeadlessInputOptions,\n  useHeadlessInput,\n} from './useHeadlessInput';\n\nexport type HeadlessInputRootRenderProp = (\n  (properties: HeadlessInputProperties) => JSX.Element\n);\n\nfunction isHeadlessInputRootRenderProp(\n  children: JSX.Element | HeadlessInputRootRenderProp,\n): children is HeadlessInputRootRenderProp {\n  return typeof children === 'function' && children.length > 0;\n}\n\nexport interface HeadlessInputRootChildren {\n  children?: JSX.Element | HeadlessInputRootRenderProp;\n}\n\nexport type HeadlessInputRootProps = HeadlessInputOptions & HeadlessInputRootChildren;\n\nexport function HeadlessInputRoot(props: HeadlessInputRootProps): JSX.Element {\n  const properties = useHeadlessInput(props);\n  return createComponent(HeadlessInputContext.Provider, {\n    value: properties,\n    get children() {\n      return createMemo(() => {\n        const body = props.children;\n        if (isHeadlessInputRootRenderProp(body)) {\n          return body(properties);\n        }\n        return body;\n      });\n    },\n  });\n}\n", "import {\n  Accessor,\n  batch,\n  createSignal,\n} from 'solid-js';\n\nexport interface HeadlessInputControlledOptions {\n  value: string | undefined;\n  disabled?: string;\n  onChange?: (state?: string) => void;\n}\n\nexport interface HeadlessInputUncontrolledOptions {\n  defaultValue: string | undefined;\n  disabled?: boolean;\n  onChange?: (state?: string) => void;\n}\n\nexport type HeadlessInputOptions =\n  | HeadlessInputControlledOptions\n  | HeadlessInputUncontrolledOptions;\n\nexport interface HeadlessInputProperties {\n  value(): string | undefined;\n  setState(newState?: string): void;\n  disabled(): boolean;\n}\n\nexport function useHeadlessInput(\n  options: HeadlessInputOptions,\n): HeadlessInputProperties {\n  let signal: Accessor<string | undefined>;\n  let setSignal: (value: string | undefined) => void;\n\n  if ('defaultValue' in options) {\n    const [input, setInput] = createSignal<string | undefined>(options.defaultValue);\n    signal = input;\n    setSignal = (value) => {\n      batch(() => {\n        setInput(value);\n        options.onChange?.(value);\n      });\n    };\n  } else {\n    signal = () => options.value;\n    setSignal = (value) => options.onChange?.(value);\n  }\n\n  return {\n    value() {\n      return signal();\n    },\n    setState(value) {\n      if (!options.disabled) {\n        setSignal(value);\n        options.onChange?.(value);\n      }\n    },\n    disabled() {\n      return !!options.disabled;\n    },\n  };\n}\n", "import {\n  createComponent,\n  createMemo,\n  JSX,\n} from 'solid-js';\nimport {\n  HeadlessAutocompleteProperties,\n  useHeadlessAutocompleteProperties,\n} from './useHeadlessAutocompleteProperties';\n\nexport type HeadlessAutocompleteChildRenderProp = (\n  (properties: HeadlessAutocompleteProperties) => JSX.Element\n);\n\nfunction isHeadlessAutocompleteChildRenderProp(\n  children: JSX.Element | HeadlessAutocompleteChildRenderProp,\n): children is HeadlessAutocompleteChildRenderProp {\n  return typeof children === 'function' && children.length > 0;\n}\n\nexport interface HeadlessAutocompleteChildProps {\n  children?: JSX.Element | HeadlessAutocompleteChildRenderProp;\n}\n\nexport function HeadlessAutocompleteChild(props: HeadlessAutocompleteChildProps): JSX.Element {\n  const properties = useHeadlessAutocompleteProperties();\n  return createMemo(() => {\n    const body = props.children;\n    if (isHeadlessAutocompleteChildRenderProp(body)) {\n      return body(properties);\n    }\n    return body;\n  });\n}\n\nexport function createHeadlessAutocompleteChild(\n  props: HeadlessAutocompleteChildProps,\n): { children: JSX.Element } {\n  return {\n    get children() {\n      return createComponent(HeadlessAutocompleteChild, {\n        get children() {\n          return props.children;\n        },\n      });\n    },\n  };\n}\n", "import {\n  createContext, useContext,\n} from 'solid-js';\n\nexport interface HeadlessAutocompleteProperties {\n  value(): string | undefined;\n  setValue(value?: string): void;\n  matches(value: string): boolean;\n  isActive(value: string): boolean;\n  hasActive(): boolean;\n  focus(value: string): void;\n  blur(): void;\n  disabled(): boolean;\n}\n\nexport const HeadlessAutocompleteContext = createContext<HeadlessAutocompleteProperties>();\n\nexport function useHeadlessAutocompleteProperties(): HeadlessAutocompleteProperties {\n  const properties = useContext(HeadlessAutocompleteContext);\n  if (properties) {\n    return properties;\n  }\n  throw new Error('`useHeadlessAutocompleteProperties` must be used within HeadlessAutocompleteRoot.');\n}\n", "import {\n  createComponent,\n  createMemo,\n  JSX,\n} from 'solid-js';\nimport {\n  HeadlessAutocompleteOptionContext,\n  HeadlessAutocompleteOptionProperties,\n  useHeadlessAutocompleteOption,\n  useHeadlessAutocompleteOptionProperties,\n} from './useHeadlessAutocompleteOption';\n\nexport type HeadlessAutocompleteOptionRenderProp = (\n  (properties: HeadlessAutocompleteOptionProperties) => JSX.Element\n);\n\nfunction isHeadlessAutocompleteOptionRenderProp(\n  children: JSX.Element | HeadlessAutocompleteOptionRenderProp,\n): children is HeadlessAutocompleteOptionRenderProp {\n  return typeof children === 'function' && children.length > 0;\n}\n\nexport interface HeadlessAutocompleteOptionProps {\n  value: string;\n  disabled?: boolean,\n  children?: JSX.Element | HeadlessAutocompleteOptionRenderProp;\n}\n\nexport function HeadlessAutocompleteOption(\n  props: HeadlessAutocompleteOptionProps,\n): JSX.Element {\n  const properties = useHeadlessAutocompleteOption(\n    () => props.value,\n    () => !!props.disabled,\n  );\n  return (\n    createComponent(HeadlessAutocompleteOptionContext.Provider, {\n      value: properties,\n      get children() {\n        return createMemo(() => {\n          const body = props.children;\n          if (isHeadlessAutocompleteOptionRenderProp(body)) {\n            return body(properties);\n          }\n          return body;\n        });\n      },\n    })\n  );\n}\n\nexport function createHeadlessAutocompleteOptionProps(\n  props: HeadlessAutocompleteOptionProps,\n): { children?: JSX.Element | HeadlessAutocompleteOptionRenderProp } {\n  return {\n    get children() {\n      return createComponent(HeadlessAutocompleteOption, {\n        get value() {\n          return props.value;\n        },\n        get disabled() {\n          return props.disabled;\n        },\n        get children() {\n          return props.children;\n        },\n      });\n    },\n  };\n}\n\nexport interface HeadlessAutocompleteOptionChildProps {\n  children?: JSX.Element | HeadlessAutocompleteOptionRenderProp;\n}\n\nexport function HeadlessAutocompleteOptionChild(\n  props: HeadlessAutocompleteOptionChildProps,\n): JSX.Element {\n  const properties = useHeadlessAutocompleteOptionProperties();\n  return createMemo(() => {\n    const body = props.children;\n    if (isHeadlessAutocompleteOptionRenderProp(body)) {\n      return body(properties);\n    }\n    return body;\n  });\n}\n\nexport function createHeadlessAutocompleteOptionChildProps(\n  props: HeadlessAutocompleteOptionChildProps,\n): HeadlessAutocompleteOptionChildProps {\n  return {\n    get children() {\n      return createComponent(HeadlessAutocompleteOptionChild, {\n        get children() {\n          return props.children;\n        },\n      });\n    },\n  };\n}\n", "import {\n  createContext,\n  useContext,\n} from 'solid-js';\nimport {\n  useHeadlessAutocompleteProperties,\n} from './useHeadlessAutocompleteProperties';\n\nexport interface HeadlessAutocompleteOptionProperties {\n  matches(): boolean;\n  isActive(): boolean;\n  focus(): void;\n  blur(): void;\n  disabled(): boolean;\n}\n\nexport const HeadlessAutocompleteOptionContext = (\n  createContext<HeadlessAutocompleteOptionProperties>()\n);\n\nexport function useHeadlessAutocompleteOptionProperties(): HeadlessAutocompleteOptionProperties {\n  const properties = useContext(HeadlessAutocompleteOptionContext);\n  if (properties) {\n    return properties;\n  }\n  throw new Error('`useHeadlessAutocompleteOptionProperties` must be used within HeadlessAutocompleteOption');\n}\n\nexport function useHeadlessAutocompleteOption(\n  value: () => string,\n  disabled?: () => boolean,\n): HeadlessAutocompleteOptionProperties {\n  const properties = useHeadlessAutocompleteProperties();\n  const isDisabled = () => {\n    const local = disabled?.();\n    const parent = properties.disabled();\n    return local || parent;\n  };\n  return {\n    matches() {\n      return properties.matches(value());\n    },\n    isActive() {\n      return properties.isActive(value());\n    },\n    focus() {\n      if (!isDisabled()) {\n        properties.focus(value());\n      }\n    },\n    blur() {\n      if (!isDisabled() && this.isActive()) {\n        properties.blur();\n      }\n    },\n    disabled: isDisabled,\n  };\n}\n", "import {\n  createComponent,\n  createMemo,\n  JSX,\n} from 'solid-js';\nimport {\n  HeadlessAutocompleteContext,\n  HeadlessAutocompleteProperties,\n} from './useHeadlessAutocompleteProperties';\nimport {\n  useHeadlessAutocomplete,\n  HeadlessAutocompleteOptions,\n  HeadlessAutocompleteControlledOptions,\n  HeadlessAutocompleteUncontrolledOptions,\n} from './useHeadlessAutocomplete';\n\nexport type HeadlessAutocompleteRootRenderProp = (\n  (properties: HeadlessAutocompleteProperties) => JSX.Element\n);\n\nfunction isHeadlessAutocompleteRootRenderProp(\n  children: JSX.Element | HeadlessAutocompleteRootRenderProp,\n): children is HeadlessAutocompleteRootRenderProp {\n  return typeof children === 'function' && children.length > 0;\n}\n\nexport interface HeadlessAutocompleteRootChildren {\n  children?: JSX.Element | HeadlessAutocompleteRootRenderProp;\n}\n\nexport type HeadlessAutocompleteRootProps =\n  HeadlessAutocompleteRootChildren & HeadlessAutocompleteOptions;\n\nexport function HeadlessAutocompleteRoot(props: HeadlessAutocompleteRootProps): JSX.Element {\n  const properties = useHeadlessAutocomplete(props);\n  return (\n    createComponent(HeadlessAutocompleteContext.Provider, {\n      value: properties,\n      get children() {\n        return createMemo(() => {\n          const body = props.children;\n          if (isHeadlessAutocompleteRootRenderProp(body)) {\n            return body(properties);\n          }\n          return body;\n        });\n      },\n    })\n  );\n}\n\nexport function createHeadlessAutocompleteRootControlledProps(\n  props: HeadlessAutocompleteControlledOptions & HeadlessAutocompleteRootChildren,\n): HeadlessAutocompleteRootChildren {\n  return {\n    get children() {\n      return createComponent(HeadlessAutocompleteRoot, {\n        onChange: props.onChange,\n        get value() {\n          return props.value;\n        },\n        get toggleable() {\n          return props.toggleable;\n        },\n        get disabled() {\n          return props.disabled;\n        },\n        get matches() {\n          return props.matches;\n        },\n        get children() {\n          return props.children;\n        },\n      } as HeadlessAutocompleteRootProps);\n    },\n  };\n}\n\nexport function createHeadlessAutocompleteRootUncontrolledProps(\n  props: HeadlessAutocompleteUncontrolledOptions & HeadlessAutocompleteRootChildren,\n): HeadlessAutocompleteRootChildren {\n  return {\n    get children() {\n      return createComponent(HeadlessAutocompleteRoot, {\n        onChange: props.onChange,\n        get defaultValue() {\n          return props.defaultValue;\n        },\n        get toggleable() {\n          return props.toggleable;\n        },\n        get disabled() {\n          return props.disabled;\n        },\n        get matches() {\n          return props.matches;\n        },\n        get children() {\n          return props.children;\n        },\n      } as HeadlessAutocompleteRootProps);\n    },\n  };\n}\n", "import {\n  createSignal,\n  Accessor,\n  untrack,\n  batch,\n} from 'solid-js';\nimport {\n  Ref,\n} from '../../utils/types';\nimport {\n  HeadlessAutocompleteProperties,\n} from './useHeadlessAutocompleteProperties';\n\nexport interface HeadlessAutocompleteControlledOptions {\n  toggleable?: boolean;\n  value: string | undefined;\n  onChange?: (value?: string) => void;\n  disabled?: boolean;\n  matches?: (base: string, search: string) => boolean;\n}\n\nexport interface HeadlessAutocompleteUncontrolledOptions {\n  toggleable?: boolean;\n  defaultValue: string | undefined;\n  onChange?: (value?: string) => void;\n  disabled?: boolean;\n  matches?: (base: string, search: string) => boolean;\n}\n\nexport type HeadlessAutocompleteOptions =\n  | HeadlessAutocompleteControlledOptions\n  | HeadlessAutocompleteUncontrolledOptions;\n\nexport function useHeadlessAutocomplete(\n  options: HeadlessAutocompleteOptions,\n): HeadlessAutocompleteProperties {\n  const [active, setActive] = createSignal<Ref<string>>();\n\n  let signal: Accessor<string | undefined>;\n  let setSignal: (value: string | undefined) => void;\n\n  if ('defaultValue' in options) {\n    const [input, setInput] = createSignal<string | undefined>(options.defaultValue);\n    signal = input;\n    setSignal = (value) => {\n      batch(() => {\n        setInput(() => value);\n        options.onChange?.(value);\n      });\n    };\n  } else {\n    signal = () => options.value;\n    setSignal = (value) => options.onChange?.(value);\n  }\n\n  return {\n    value() {\n      return signal();\n    },\n    setValue(value) {\n      if (options.toggleable && Object.is(untrack(signal), value)) {\n        setSignal(undefined);\n      } else {\n        setSignal(value);\n      }\n    },\n    matches(value) {\n      const currentValue = signal();\n      if (!currentValue) {\n        return false;\n      }\n      if (options.matches) {\n        return options.matches(currentValue, value);\n      }\n      return currentValue.includes(value);\n    },\n    disabled() {\n      return !!options.disabled;\n    },\n    hasActive() {\n      return !!active();\n    },\n    isActive(value) {\n      const ref = active();\n      if (ref) {\n        return Object.is(value, ref.value);\n      }\n      return false;\n    },\n    focus(value) {\n      return setActive({\n        value,\n      });\n    },\n    blur() {\n      return setActive(undefined);\n    },\n  };\n}\n", "import {\n  createComponent,\n  JSX,\n} from 'solid-js';\nimport {\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  AccordionMultipleControlled,\n  AccordionMultipleControlledProps,\n} from './AccordionMultipleControlled';\nimport {\n  AccordionMultipleUncontrolled,\n  AccordionMultipleUncontrolledProps,\n} from './AccordionMultipleUncontrolled';\nimport {\n  AccordionSingleControlled,\n  AccordionSingleControlledProps,\n} from './AccordionSingleControlled';\nimport {\n  AccordionSingleUncontrolled,\n  AccordionSingleUncontrolledProps,\n} from './AccordionSingleUncontrolled';\n\nexport type AccordionProps<V, T extends ValidConstructor = 'div'> =\n  | AccordionSingleControlledProps<V, T>\n  | AccordionSingleUncontrolledProps<V, T>\n  | AccordionMultipleControlledProps<V, T>\n  | AccordionMultipleUncontrolledProps<V, T>;\n\nfunction isAccordionUncontrolled<V, T extends ValidConstructor = 'div'>(\n  props: AccordionProps<V, T>,\n): props is AccordionSingleUncontrolledProps<V, T> | AccordionMultipleUncontrolledProps<V, T> {\n  return 'defaultValue' in props;\n}\n\nfunction isAccordionMultiple<V, T extends ValidConstructor = 'div'>(\n  props: AccordionProps<V, T>,\n): props is AccordionMultipleUncontrolledProps<V, T> | AccordionMultipleControlledProps<V, T> {\n  return 'multiple' in props && props.multiple;\n}\n\nexport function Accordion<V, T extends ValidConstructor = 'div'>(\n  props: AccordionProps<V, T>,\n): JSX.Element {\n  if (isAccordionUncontrolled(props)) {\n    if (isAccordionMultiple(props)) {\n      return createComponent(AccordionMultipleUncontrolled, props);\n    }\n    return createComponent(AccordionSingleUncontrolled, props);\n  }\n  if (isAccordionMultiple(props)) {\n    return createComponent(AccordionMultipleControlled, props);\n  }\n  return createComponent(AccordionSingleControlled, props);\n}\n", "import {\n  createComponent,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessSelectRootChildren,\n  HeadlessSelectMultipleControlledOptions,\n  createHeadlessSelectRootMultipleControlledProps,\n} from '../../headless/select';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  createRef,\n  ValidConstructor,\n  HeadlessPropsWithRef,\n  DynamicProps,\n} from '../../utils/dynamic-prop';\nimport {\n  createDisabled,\n} from '../../utils/state-props';\nimport {\n  AccordionContext,\n  createAccordionFocusNavigator,\n} from './AccordionContext';\nimport { ACCORDION_TAG } from './tags';\n\ntype AccordionMultipleControlledBaseProps<V> =\n  & HeadlessSelectMultipleControlledOptions<V>\n  & HeadlessSelectRootChildren<V>;\n\nexport type AccordionMultipleControlledProps<V, T extends ValidConstructor = 'div'> =\n  HeadlessPropsWithRef<T, AccordionMultipleControlledBaseProps<V>>;\n\nexport function AccordionMultipleControlled<V, T extends ValidConstructor = 'div'>(\n  props: AccordionMultipleControlledProps<V, T>,\n): JSX.Element {\n  const controller = createAccordionFocusNavigator();\n\n  return createComponent(AccordionContext.Provider, {\n    value: controller,\n    get children() {\n      return createDynamic(\n        () => props.as ?? ('div' as T),\n        mergeProps(\n          omitProps(props, [\n            'as',\n            'children',\n            'disabled',\n            'onChange',\n            'toggleable',\n            'value',\n            'multiple',\n            'ref',\n          ]),\n          ACCORDION_TAG,\n          {\n            ref: createRef(props, (e) => {\n              controller.setRef(e);\n            }),\n          },\n          createDisabled(() => props.disabled),\n          createHeadlessSelectRootMultipleControlledProps(props),\n        ) as DynamicProps<T>,\n      );\n    },\n  });\n}\n", "import {\n  createComponent,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport { Dynamic } from 'solid-js/web';\nimport {\n  DynamicProps,\n  ValidConstructor,\n} from './dynamic-prop';\n\nexport default function createDynamic<T extends ValidConstructor>(\n  source: () => T,\n  props: DynamicProps<T>,\n): JSX.Element {\n  return createComponent(Dynamic, mergeProps({\n    get component() {\n      return source();\n    },\n  }, props) as any);\n}\n", "import { JSX } from 'solid-js';\nimport { OmitAndMerge } from './types';\n\nexport type ValidElements = keyof JSX.IntrinsicElements;\nexport type ValidComponent<P> = (props: P) => JSX.Element;\nexport type ValidConstructor =\n  | ValidElements\n  | ValidComponent<any>\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  | (string & {});\n\nexport type DynamicProps<T extends ValidConstructor> =\n  T extends ValidElements\n    ? JSX.IntrinsicElements[T]\n    :\n  T extends ValidComponent<infer U>\n    ? U\n    : Record<string, unknown>;\n\ntype UnboxIntrinsicElements<T> =\n  T extends JSX.HTMLAttributes<infer U>\n    ? U\n    : never;\n\ntype RefCallback<T> = (el: T) => void;\ntype RefField<T> = T | RefCallback<T>;\n\ntype UnboxComponentProp<U> =\n  U extends { ref: infer X }\n    ? X\n    : never;\n\nexport type DynamicNode<T extends ValidConstructor> =\n  T extends ValidElements\n    ? UnboxIntrinsicElements<JSX.IntrinsicElements[T]>\n    :\n  T extends ValidComponent<infer U>\n    ? UnboxComponentProp<U>\n    : never;\n\nexport interface WithRef<T extends ValidConstructor> {\n  ref?: RefField<DynamicNode<T>>;\n}\n\nexport interface DynamicComponent<T extends ValidConstructor> {\n  as?: T;\n}\n\nexport interface DynamicComponentWithRef<T extends ValidConstructor> extends WithRef<T> {\n  as?: T;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport type HeadlessProps<T extends ValidConstructor, V = {}> =\n  OmitAndMerge<V & DynamicComponent<T>, DynamicProps<T>>;\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport type HeadlessPropsWithRef<T extends ValidConstructor, V = {}> =\n  OmitAndMerge<V & DynamicComponentWithRef<T>, DynamicProps<T>>;\n\nfunction isRefFunction<U extends ValidConstructor>(\n  callback?: RefField<DynamicNode<U>>,\n): callback is RefCallback<DynamicNode<U>> {\n  return typeof callback === 'function';\n}\n\nexport function createRef<U extends ValidConstructor>(\n  props: WithRef<U>,\n  callback: RefCallback<DynamicNode<U>>,\n): RefCallback<DynamicNode<U>> {\n  return (e) => {\n    if ('ref' in props && isRefFunction(props.ref)) {\n      props.ref(e);\n    }\n    callback(e);\n  };\n}\n", "interface DisabledProps {\n  disabled?: boolean;\n  'aria-disabled'?: boolean;\n  'data-sh-disabled'?: boolean;\n}\n\nexport function createDisabled(\n  disabled: () => boolean | undefined,\n): DisabledProps {\n  return {\n    get disabled() {\n      return disabled();\n    },\n    get 'aria-disabled'() {\n      return disabled();\n    },\n    get 'data-sh-disabled'() {\n      return disabled();\n    },\n  };\n}\n\ninterface ExpandedProps {\n  'aria-expanded'?: boolean;\n  'data-sh-expanded'?: boolean;\n}\n\nexport function createExpanded(\n  expanded: () => boolean | undefined,\n): ExpandedProps {\n  return {\n    get 'aria-expanded'() {\n      return expanded();\n    },\n    get 'data-sh-expanded'() {\n      return expanded();\n    },\n  };\n}\n\ninterface CheckedProps {\n  'aria-checked': boolean | 'mixed';\n  'data-sh-checked': boolean | 'mixed';\n}\n\nexport function createChecked(\n  checked: () => boolean | undefined,\n): CheckedProps {\n  return {\n    get 'aria-checked'() {\n      return checked() ?? 'mixed';\n    },\n    get 'data-sh-checked'() {\n      return checked() ?? 'mixed';\n    },\n  };\n}\n\ninterface SelectedProps {\n  'aria-selected': boolean;\n  'data-sh-selected': boolean;\n}\n\nexport function createSelected(\n  checked: () => boolean,\n): SelectedProps {\n  return {\n    get 'aria-selected'() {\n      return checked();\n    },\n    get 'data-sh-selected'() {\n      return checked();\n    },\n  };\n}\n\ninterface ActiveProps {\n  'data-sh-active': boolean;\n}\n\nexport function createActive(\n  checked: () => boolean,\n): ActiveProps {\n  return {\n    get 'data-sh-active'() {\n      return checked();\n    },\n  };\n}\n", "import {\n  createContext,\n  createUniqueId,\n  useContext,\n} from 'solid-js';\nimport { ValidConstructor } from '../../utils/dynamic-prop';\nimport FocusNavigator from '../../utils/focus-navigator';\n\nexport const AccordionContext = createContext<FocusNavigator<any>>();\n\nexport function useAccordionContext<T extends ValidConstructor>(\n  componentName: string,\n): FocusNavigator<T> {\n  const context = useContext(AccordionContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <Accordion>`);\n}\n\nexport function createAccordionFocusNavigator<T extends ValidConstructor>() {\n  return new FocusNavigator<T>(createUniqueId());\n}\n", "const QUERY = 'a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex]:not([tabindex=\"-1\"]), [contenteditable]';\n\nexport default function getFocusableElements(\n  node: HTMLElement,\n  filter?: HTMLElement,\n): HTMLElement[] {\n  const nodes = node.querySelectorAll(QUERY);\n  const replicated: Element[] = [];\n\n  for (let i = 0, len = nodes.length; i < len; i += 1) {\n    if (!filter || !filter.contains(nodes[i])) {\n      replicated.push(nodes[i]);\n    }\n  }\n\n  return replicated as HTMLElement[];\n}\n", "import {\n  DynamicNode,\n  ValidConstructor,\n} from './dynamic-prop';\nimport getFocusableElements from './focus-query';\n\nfunction isFocusable(el: HTMLElement) {\n  return !el.matches('[data-sh-disabled=\"true\"]');\n}\n\nfunction getNextFocusable(\n  nodes: HTMLElement[] | NodeListOf<HTMLElement>,\n  anchor: number,\n  direction: number,\n) {\n  let current = anchor + direction;\n  while (current >= 0 && current < nodes.length) {\n    if (isFocusable(nodes[current])) {\n      return nodes[current];\n    }\n    current += direction;\n  }\n  return undefined;\n}\n\nfunction getNextLockedFocusable(\n  nodes: HTMLElement[] | NodeListOf<HTMLElement>,\n  anchor: number,\n  direction: number,\n) {\n  let current = anchor + direction;\n  if (direction === 1 && current === nodes.length) {\n    current = 0;\n  }\n  if (direction === -1 && current === -1) {\n    current = nodes.length - 1;\n  }\n  while (anchor !== current) {\n    if (isFocusable(nodes[current])) {\n      return nodes[current];\n    }\n    current += direction;\n    if (direction === 1 && current >= nodes.length) {\n      current = 0;\n    }\n    if (direction === -1 && current < 0) {\n      current = nodes.length - 1;\n    }\n  }\n  return undefined;\n}\n\nexport function focusNextContinuous<T extends ValidConstructor>(\n  nodes: HTMLElement[] | NodeListOf<HTMLElement>,\n  targetNode: DynamicNode<T>,\n): void {\n  for (let i = 0, len = nodes.length; i < len; i += 1) {\n    if (targetNode === nodes[i] && i + 1 < len) {\n      getNextFocusable(nodes, i, 1)?.focus();\n      break;\n    }\n  }\n}\n\nexport function focusPrevContinuous<T extends ValidConstructor>(\n  nodes: HTMLElement[] | NodeListOf<HTMLElement>,\n  targetNode: DynamicNode<T>,\n): void {\n  for (let i = 0, len = nodes.length; i < len; i += 1) {\n    if (targetNode === nodes[i] && i - 1 >= 0) {\n      getNextFocusable(nodes, i, -1)?.focus();\n      break;\n    }\n  }\n}\n\nexport function focusNext<T extends ValidConstructor>(\n  nodes: HTMLElement[] | NodeListOf<HTMLElement>,\n  targetNode: DynamicNode<T>,\n): void {\n  for (let i = 0, len = nodes.length; i < len; i += 1) {\n    if (targetNode === nodes[i]) {\n      getNextLockedFocusable(nodes, i, 1)?.focus();\n      break;\n    }\n  }\n}\n\nexport function focusPrev<T extends ValidConstructor>(\n  nodes: HTMLElement[] | NodeListOf<HTMLElement>,\n  targetNode: DynamicNode<T>,\n): void {\n  for (let i = 0, len = nodes.length; i < len; i += 1) {\n    if (targetNode === nodes[i]) {\n      getNextLockedFocusable(nodes, i, -1)?.focus();\n      break;\n    }\n  }\n}\n\nexport function focusFirst(\n  nodes: HTMLElement[] | NodeListOf<HTMLElement>,\n): boolean {\n  if (nodes.length) {\n    getNextFocusable(nodes, -1, 1)?.focus();\n    return true;\n  }\n  return false;\n}\n\nexport function focusLast(\n  nodes: HTMLElement[] | NodeListOf<HTMLElement>,\n): boolean {\n  if (nodes.length) {\n    getNextFocusable(nodes, nodes.length, -1)?.focus();\n    return true;\n  }\n  return false;\n}\n\nexport function focusMatch(\n  nodes: HTMLElement[] | NodeListOf<HTMLElement>,\n  character: string,\n): void {\n  const lower = character.toLowerCase();\n  for (let i = 0, l = nodes.length; i < l; i += 1) {\n    if (nodes[i].textContent?.toLowerCase().startsWith(lower)) {\n      nodes[i].focus();\n      return;\n    }\n  }\n}\n\nexport function lockFocus(\n  ref: HTMLElement,\n  reverse: boolean,\n): void {\n  const nodes = getFocusableElements(ref);\n  if (reverse) {\n    if (!document.activeElement || !ref.contains(document.activeElement)) {\n      focusLast(nodes);\n    } else {\n      focusPrev(nodes, document.activeElement);\n    }\n  } else if (!document.activeElement || !ref.contains(document.activeElement)) {\n    focusFirst(nodes);\n  } else {\n    focusNext(nodes, document.activeElement);\n  }\n}\n", "export const DATA_SET_NAMESPACE = 'data-sh';\n\nexport function createTag(tag: string) {\n  return {\n    [DATA_SET_NAMESPACE]: tag,\n  };\n}\n", "import {\n  ValidConstructor,\n  DynamicNode,\n} from './dynamic-prop';\nimport {\n  focusNext,\n  focusPrev,\n  focusFirst,\n  focusLast,\n  focusMatch,\n  focusNextContinuous,\n  focusPrevContinuous,\n} from './focus-navigation';\nimport { DATA_SET_NAMESPACE } from './namespace';\n\nconst OWNER = `${DATA_SET_NAMESPACE}-owner`;\n\nfunction queryNodes<T extends Element>(\n  el: T,\n  ownerID: string,\n): NodeListOf<HTMLElement> {\n  return el.querySelectorAll(`[${OWNER}=\"${ownerID}\"]`);\n}\n\nexport function createOwnerAttribute(ownerID: string) {\n  return {\n    [OWNER]: ownerID,\n  };\n}\n\nexport default class FocusNavigator<T extends ValidConstructor> {\n  private ownerID: string;\n\n  private internalRef?: DynamicNode<T>;\n\n  constructor(ownerID: string) {\n    this.ownerID = ownerID;\n  }\n\n  setRef(ref: DynamicNode<T>) {\n    this.internalRef = ref;\n  }\n\n  private query(ref: HTMLElement) {\n    return queryNodes(ref, this.ownerID);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  setChecked(node: Element) {\n    (node as HTMLElement).focus();\n  }\n\n  setNextChecked(node: Element, continuous?: boolean) {\n    if (this.internalRef instanceof HTMLElement) {\n      if (continuous) {\n        focusNextContinuous(\n          this.query(this.internalRef),\n          node,\n        );\n      } else {\n        focusNext(\n          this.query(this.internalRef),\n          node,\n        );\n      }\n    }\n  }\n\n  setPrevChecked(node: Element, continuous?: boolean) {\n    if (this.internalRef instanceof HTMLElement) {\n      if (continuous) {\n        focusPrevContinuous(\n          this.query(this.internalRef),\n          node,\n        );\n      } else {\n        focusPrev(\n          this.query(this.internalRef),\n          node,\n        );\n      }\n    }\n  }\n\n  setFirstChecked() {\n    if (this.internalRef instanceof HTMLElement) {\n      focusFirst(this.query(this.internalRef));\n    }\n  }\n\n  setLastChecked() {\n    if (this.internalRef instanceof HTMLElement) {\n      focusLast(this.query(this.internalRef));\n    }\n  }\n\n  setFirstMatch(character: string) {\n    if (this.internalRef instanceof HTMLElement) {\n      focusMatch(\n        this.query(this.internalRef),\n        character,\n      );\n    }\n  }\n\n  getId() {\n    return this.ownerID;\n  }\n}\n", "import { createTag } from '../../utils/namespace';\n\nexport const ACCORDION_TAG = createTag('accordion');\nexport const ACCORDION_BUTTON_TAG = createTag('accordion-button');\nexport const ACCORDION_HEADER_TAG = createTag('accordion-header');\nexport const ACCORDION_ITEM_TAG = createTag('accordion-item');\nexport const ACCORDION_PANEL_TAG = createTag('accordion-panel');\n", "import {\n  createComponent,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessSelectRootChildren,\n  HeadlessSelectMultipleUncontrolledOptions,\n  createHeadlessSelectRootMultipleUncontrolledProps,\n} from '../../headless/select';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  createRef,\n  ValidConstructor,\n  HeadlessPropsWithRef,\n  DynamicProps,\n} from '../../utils/dynamic-prop';\nimport {\n  createDisabled,\n} from '../../utils/state-props';\nimport {\n  AccordionContext,\n  createAccordionFocusNavigator,\n} from './AccordionContext';\nimport { ACCORDION_TAG } from './tags';\n\nexport type AccordionMultipleUncontrolledBaseProps<V> =\n  & HeadlessSelectMultipleUncontrolledOptions<V>\n  & HeadlessSelectRootChildren<V>;\n\nexport type AccordionMultipleUncontrolledProps<V, T extends ValidConstructor = 'div'> =\n  HeadlessPropsWithRef<T, AccordionMultipleUncontrolledBaseProps<V>>;\n\nexport function AccordionMultipleUncontrolled<V, T extends ValidConstructor = 'div'>(\n  props: AccordionMultipleUncontrolledProps<V, T>,\n): JSX.Element {\n  const controller = createAccordionFocusNavigator();\n\n  return createComponent(AccordionContext.Provider, {\n    value: controller,\n    get children() {\n      return createDynamic(\n        () => props.as ?? ('div' as T),\n        mergeProps(\n          omitProps(props, [\n            'as',\n            'children',\n            'disabled',\n            'onChange',\n            'toggleable',\n            'defaultValue',\n            'multiple',\n            'ref',\n          ]),\n          ACCORDION_TAG,\n          {\n            ref: createRef(props, (e) => {\n              controller.setRef(e);\n            }),\n          },\n          createDisabled(() => props.disabled),\n          createHeadlessSelectRootMultipleUncontrolledProps(props),\n        ) as DynamicProps<T>,\n      );\n    },\n  });\n}\n", "import {\n  createComponent,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessSelectRootChildren,\n  HeadlessSelectSingleControlledOptions,\n  createHeadlessSelectRootSingleControlledProps,\n} from '../../headless/select';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  createRef,\n  ValidConstructor,\n  HeadlessPropsWithRef,\n  DynamicProps,\n} from '../../utils/dynamic-prop';\nimport {\n  createDisabled,\n} from '../../utils/state-props';\nimport {\n  AccordionContext,\n  createAccordionFocusNavigator,\n} from './AccordionContext';\nimport { ACCORDION_TAG } from './tags';\n\nexport type AccordionSingleControlledBaseProps<V> =\n  & HeadlessSelectSingleControlledOptions<V>\n  & HeadlessSelectRootChildren<V>;\n\nexport type AccordionSingleControlledProps<V, T extends ValidConstructor = 'div'> =\n  HeadlessPropsWithRef<T, AccordionSingleControlledBaseProps<V>>;\n\nexport function AccordionSingleControlled<V, T extends ValidConstructor = 'div'>(\n  props: AccordionSingleControlledProps<V, T>,\n): JSX.Element {\n  const controller = createAccordionFocusNavigator();\n\n  return createComponent(AccordionContext.Provider, {\n    value: controller,\n    get children() {\n      return createDynamic(\n        () => props.as ?? ('div' as T),\n        mergeProps(\n          omitProps(props, [\n            'as',\n            'children',\n            'disabled',\n            'onChange',\n            'toggleable',\n            'value',\n            'ref',\n          ]),\n          ACCORDION_TAG,\n          {\n            ref: createRef(props, (e) => {\n              controller.setRef(e);\n            }),\n          },\n          createDisabled(() => props.disabled),\n          createHeadlessSelectRootSingleControlledProps(props),\n        ) as DynamicProps<T>,\n      );\n    },\n  });\n}\n", "import {\n  createComponent,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessSelectRootChildren,\n  HeadlessSelectSingleUncontrolledOptions,\n  createHeadlessSelectRootSingleUncontrolledProps,\n} from '../../headless/select';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  createRef,\n  ValidConstructor,\n  HeadlessPropsWithRef,\n  DynamicProps,\n} from '../../utils/dynamic-prop';\nimport {\n  createDisabled,\n} from '../../utils/state-props';\nimport {\n  AccordionContext,\n  createAccordionFocusNavigator,\n} from './AccordionContext';\nimport { ACCORDION_TAG } from './tags';\n\nexport type AccordionSingleUncontrolledBaseProps<V> =\n  & HeadlessSelectSingleUncontrolledOptions<V>\n  & HeadlessSelectRootChildren<V>;\n\nexport type AccordionSingleUncontrolledProps<V, T extends ValidConstructor = 'div'> =\n  HeadlessPropsWithRef<T, AccordionSingleUncontrolledBaseProps<V>>;\n\nexport function AccordionSingleUncontrolled<V, T extends ValidConstructor = 'div'>(\n  props: AccordionSingleUncontrolledProps<V, T>,\n): JSX.Element {\n  const controller = createAccordionFocusNavigator();\n\n  return createComponent(AccordionContext.Provider, {\n    value: controller,\n    get children() {\n      return createDynamic(\n        () => props.as ?? ('div' as T),\n        mergeProps(\n          omitProps(props, [\n            'as',\n            'children',\n            'disabled',\n            'onChange',\n            'toggleable',\n            'defaultValue',\n            'ref',\n          ]),\n          ACCORDION_TAG,\n          {\n            ref: createRef(props, (e) => {\n              controller.setRef(e);\n            }),\n          },\n          createDisabled(() => props.disabled),\n          createHeadlessSelectRootSingleUncontrolledProps(props),\n        ) as DynamicProps<T>,\n      );\n    },\n  });\n}\n", "import {\n  createComponent,\n  createUniqueId,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  createHeadlessSelectOptionProps,\n  HeadlessSelectOptionProps,\n} from '../../headless/select';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  ValidConstructor,\n  HeadlessProps,\n  DynamicProps,\n} from '../../utils/dynamic-prop';\nimport {\n  createDisabled,\n} from '../../utils/state-props';\nimport { useAccordionContext } from './AccordionContext';\nimport {\n  AccordionItemContext,\n} from './AccordionItemContext';\nimport { ACCORDION_ITEM_TAG } from './tags';\n\nexport type AccordionItemProps<V, T extends ValidConstructor = 'div'> =\n  HeadlessProps<T, HeadlessSelectOptionProps<V>>;\n\nexport function AccordionItem<V, T extends ValidConstructor = 'div'>(\n  props: AccordionItemProps<V, T>,\n): JSX.Element {\n  useAccordionContext('AccordionItem');\n  const buttonID = createUniqueId();\n  const panelID = createUniqueId();\n\n  return createComponent(AccordionItemContext.Provider, {\n    value: { buttonID, panelID },\n    get children() {\n      return createDynamic(\n        () => props.as ?? ('div' as T),\n        mergeProps(\n          omitProps(props, [\n            'as',\n            'children',\n            'value',\n            'disabled',\n          ]),\n          ACCORDION_ITEM_TAG,\n          createDisabled(() => props.disabled),\n          createHeadlessSelectOptionProps(props),\n        ) as DynamicProps<T>,\n      );\n    },\n  });\n}\n", "import {\n  createContext,\n  useContext,\n} from 'solid-js';\n\ninterface AccordionItemContext {\n  buttonID: string;\n  panelID: string;\n}\n\nexport const AccordionItemContext = createContext<AccordionItemContext>();\n\nexport function useAccordionItemContext(componentName: string): AccordionItemContext {\n  const context = useContext(AccordionItemContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <AccordionItem>`);\n}\n", "import {\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessSelectOptionChildProps,\n  createHeadlessSelectOptionChildProps,\n} from '../../headless/select';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  ValidConstructor,\n  HeadlessProps,\n  DynamicProps,\n} from '../../utils/dynamic-prop';\nimport { useAccordionItemContext } from './AccordionItemContext';\nimport { ACCORDION_HEADER_TAG } from './tags';\n\nexport type AccordionHeaderProps<T extends ValidConstructor = 'h3'> =\n  HeadlessProps<T, HeadlessSelectOptionChildProps>;\n\nexport function AccordionHeader<T extends ValidConstructor = 'h3'>(\n  props: AccordionHeaderProps<T>,\n): JSX.Element {\n  useAccordionItemContext('AccordionHeader');\n  return createDynamic<T>(\n    () => props.as ?? ('h3' as T),\n    mergeProps(\n      omitProps(props, [\n        'as',\n        'children',\n      ]),\n      ACCORDION_HEADER_TAG,\n      createHeadlessSelectOptionChildProps(props),\n    ) as DynamicProps<T>,\n  );\n}\n", "import {\n  createSignal,\n  createEffect,\n  onCleanup,\n  JSX,\n  createComponent,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessSelectOptionChildProps,\n  useHeadlessSelectOptionProperties,\n  createHeadlessSelectOptionChildProps,\n} from '../../headless/select';\nimport {\n  ValidConstructor,\n  DynamicNode,\n  createRef,\n  HeadlessPropsWithRef,\n} from '../../utils/dynamic-prop';\nimport { createOwnerAttribute } from '../../utils/focus-navigator';\nimport {\n  createDisabled,\n  createExpanded,\n} from '../../utils/state-props';\nimport { OmitAndMerge } from '../../utils/types';\nimport {\n  ButtonProps,\n  Button,\n} from '../button';\nimport {\n  useAccordionContext,\n} from './AccordionContext';\nimport {\n  useAccordionItemContext,\n} from './AccordionItemContext';\nimport { ACCORDION_BUTTON_TAG } from './tags';\n\nexport type AccordionButtonProps<T extends ValidConstructor = 'button'> =\n  HeadlessPropsWithRef<T, OmitAndMerge<HeadlessSelectOptionChildProps, ButtonProps<T>>>;\n\nexport function AccordionButton<T extends ValidConstructor = 'button'>(\n  props: AccordionButtonProps<T>,\n): JSX.Element {\n  const rootContext = useAccordionContext('AccordionButton');\n  const itemContext = useAccordionItemContext('AccordionButton');\n  const properties = useHeadlessSelectOptionProperties();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n\n    if (ref instanceof HTMLElement) {\n      const onKeyDown = (e: KeyboardEvent) => {\n        if (!(properties.disabled() || props.disabled)) {\n          switch (e.key) {\n            case 'ArrowUp':\n              e.preventDefault();\n              rootContext.setPrevChecked(ref);\n              break;\n            case 'ArrowDown':\n              e.preventDefault();\n              rootContext.setNextChecked(ref);\n              break;\n            case 'Home':\n              e.preventDefault();\n              rootContext.setFirstChecked();\n              break;\n            case 'End':\n              e.preventDefault();\n              rootContext.setLastChecked();\n              break;\n            default:\n              break;\n          }\n        }\n      };\n      const onClick = () => {\n        if (!(properties.disabled() || props.disabled)) {\n          properties.select();\n        }\n      };\n      const onFocus = () => {\n        if (!(properties.disabled() || props.disabled)) {\n          properties.focus();\n        }\n      };\n      const onBlur = () => {\n        if (!(properties.disabled() || props.disabled)) {\n          properties.blur();\n        }\n      };\n\n      ref.addEventListener('keydown', onKeyDown);\n      ref.addEventListener('click', onClick);\n      ref.addEventListener('focus', onFocus);\n      ref.addEventListener('blur', onBlur);\n      onCleanup(() => {\n        ref.removeEventListener('keydown', onKeyDown);\n        ref.removeEventListener('click', onClick);\n        ref.removeEventListener('focus', onFocus);\n        ref.removeEventListener('blur', onBlur);\n      });\n    }\n  });\n\n  return createComponent(Button, mergeProps(\n    omitProps(props, ['children', 'ref', 'disabled']),\n    ACCORDION_BUTTON_TAG,\n    {\n      id: itemContext.buttonID,\n      ref: createRef(props, (e) => {\n        setInternalRef(() => e);\n      }),\n      get 'aria-controls'() {\n        return properties.isSelected() && itemContext.panelID;\n      },\n    },\n    createOwnerAttribute(rootContext.getId()),\n    createDisabled(() => {\n      const internalDisabled = properties.disabled();\n      const granularDisabled = props.disabled;\n      return internalDisabled || granularDisabled;\n    }),\n    createExpanded(() => properties.isSelected()),\n    createHeadlessSelectOptionChildProps(props),\n  ) as ButtonProps<T>);\n}\n", "import {\n  createEffect,\n  createSignal,\n  onCleanup,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  createRef,\n  DynamicNode,\n  DynamicProps,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport { createTag } from '../../utils/namespace';\nimport {\n  createDisabled,\n} from '../../utils/state-props';\n\nconst BUTTON_TAG = createTag('button');\n\ninterface ButtonBaseProps {\n  disabled?: boolean;\n}\n\nexport type ButtonProps<T extends ValidConstructor = 'button'> =\n  HeadlessPropsWithRef<T, ButtonBaseProps>;\n\nexport function Button<T extends ValidConstructor = 'button'>(\n  props: ButtonProps<T>,\n): JSX.Element {\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      // This behavior is redundant for buttons\n      if (ref.tagName !== 'BUTTON') {\n        const onKeyDown = (e: KeyboardEvent) => {\n          if (e.key === 'Enter' || e.key === ' ') {\n            ref.click();\n          }\n        };\n\n        ref.addEventListener('keydown', onKeyDown);\n        onCleanup(() => {\n          ref.removeEventListener('keydown', onKeyDown);\n        });\n      }\n    }\n  });\n\n  return createDynamic(\n    () => props.as ?? ('button' as T),\n    mergeProps(\n      {\n        get tabindex() {\n          return props.disabled ? -1 : 0;\n        },\n        role: 'button',\n      },\n      createDisabled(() => props.disabled),\n      omitProps(props, [\n        'as',\n        'ref',\n      ]),\n      BUTTON_TAG,\n      {\n        ref: createRef(props, (e) => {\n          setInternalRef(() => e);\n        }),\n      },\n    ) as DynamicProps<T>,\n  );\n}\n", "import {\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  createHeadlessSelectOptionChildProps,\n  HeadlessSelectOptionChildProps,\n  useHeadlessSelectOptionProperties,\n} from '../../headless/select';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  ValidConstructor,\n  HeadlessProps,\n  DynamicProps,\n} from '../../utils/dynamic-prop';\nimport {\n  createUnmountable,\n  UnmountableProps,\n} from '../../utils/Unmountable';\nimport {\n  useAccordionItemContext,\n} from './AccordionItemContext';\nimport { ACCORDION_PANEL_TAG } from './tags';\n\nexport type AccordionPanelProps<T extends ValidConstructor = 'div'> =\n  HeadlessProps<T, HeadlessSelectOptionChildProps & UnmountableProps>;\n\nexport function AccordionPanel<T extends ValidConstructor = 'div'>(\n  props: AccordionPanelProps<T>,\n): JSX.Element {\n  const context = useAccordionItemContext('AccordionPanel');\n  const properties = useHeadlessSelectOptionProperties();\n\n  return createUnmountable(\n    props,\n    () => properties.isSelected(),\n    () => createDynamic(\n      () => props.as ?? ('div' as T),\n      mergeProps(\n        omitProps(props, [\n          'as',\n          'children',\n          'unmount',\n        ]),\n        {\n          id: context.panelID,\n          'aria-labelledby': context.buttonID,\n        },\n        ACCORDION_PANEL_TAG,\n        createHeadlessSelectOptionChildProps(props),\n      ) as DynamicProps<T>,\n    ),\n  );\n}\n", "import {\n  createComponent,\n  JSX,\n  Show,\n} from 'solid-js';\n\nexport interface UnmountableProps {\n  unmount?: boolean;\n}\n\nexport function createUnmountable(\n  props: UnmountableProps,\n  shouldMount: () => boolean,\n  render: () => JSX.Element,\n): JSX.Element {\n  return createComponent(Show, {\n    get when() {\n      return props.unmount ?? true;\n    },\n    get fallback() {\n      return render();\n    },\n    get children() {\n      return createComponent(Show, {\n        get when() {\n          return shouldMount();\n        },\n        get children() {\n          return render();\n        },\n      });\n    },\n  });\n}\n", "import {\n  createUniqueId,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  ValidConstructor,\n  HeadlessProps,\n  DynamicProps,\n} from '../../utils/dynamic-prop';\nimport { createTag } from '../../utils/namespace';\n\nconst ALERT_TAG = createTag('alert');\n\nexport type AlertProps<T extends ValidConstructor = 'div'> = HeadlessProps<T>;\n\nexport function Alert<T extends ValidConstructor = 'div'>(\n  props: AlertProps<T>,\n): JSX.Element {\n  const alertID = createUniqueId();\n\n  return createDynamic(\n    () => props.as ?? ('div' as T),\n    mergeProps(\n      {\n        id: alertID,\n      },\n      omitProps(props, ['as']),\n      ALERT_TAG,\n      {\n        role: 'alert',\n      },\n    ) as DynamicProps<T>,\n  );\n}\n", "import {\n  createComponent,\n  JSX,\n} from 'solid-js';\nimport {\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  AlertDialogControlled,\n  AlertDialogControlledProps,\n} from './AlertDialogControlled';\nimport {\n  AlertDialogUncontrolled,\n  AlertDialogUncontrolledProps,\n} from './AlertDialogUncontrolled';\n\nexport type AlertDialogProps<T extends ValidConstructor = 'div'> =\n  | AlertDialogControlledProps<T>\n  | AlertDialogUncontrolledProps<T>;\n\nfunction isAlertDialogUncontrolled<T extends ValidConstructor = 'div'>(\n  props: AlertDialogProps<T>,\n): props is AlertDialogUncontrolledProps<T> {\n  return 'defaultOpen' in props;\n}\n\nexport function AlertDialog<T extends ValidConstructor = 'div'>(\n  props: AlertDialogProps<T>,\n): JSX.Element {\n  if (isAlertDialogUncontrolled(props)) {\n    return createComponent(AlertDialogUncontrolled, props);\n  }\n  return createComponent(AlertDialogControlled, props);\n}\n", "import {\n  createComponent,\n  createUniqueId,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureRoot,\n  HeadlessDisclosureControlledOptions,\n  createHeadlessDisclosureChildProps,\n} from '../../headless/disclosure';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  ValidConstructor,\n  HeadlessProps,\n  DynamicProps,\n} from '../../utils/dynamic-prop';\nimport {\n  createUnmountable,\n} from '../../utils/Unmountable';\nimport useFocusStartPoint from '../../utils/use-focus-start-point';\nimport {\n  AlertDialogContext,\n} from './AlertDialogContext';\nimport { ALERT_DIALOG_TAG } from './tags';\nimport {\n  AlertDialogBaseProps,\n} from './types';\n\nexport type AlertDialogControlledBaseProps =\n  & AlertDialogBaseProps\n  & HeadlessDisclosureControlledOptions;\n\nexport type AlertDialogControlledProps<T extends ValidConstructor = 'div'> =\n  HeadlessProps<T, AlertDialogControlledBaseProps>;\n\nexport function AlertDialogControlled<T extends ValidConstructor = 'div'>(\n  props: AlertDialogControlledProps<T>,\n): JSX.Element {\n  const ownerID = createUniqueId();\n  const panelID = createUniqueId();\n  const titleID = createUniqueId();\n  const descriptionID = createUniqueId();\n\n  const fsp = useFocusStartPoint();\n\n  return createComponent(AlertDialogContext.Provider, {\n    value: {\n      ownerID,\n      panelID,\n      titleID,\n      descriptionID,\n    },\n    get children() {\n      return createComponent(HeadlessDisclosureRoot, {\n        get isOpen() {\n          return props.isOpen;\n        },\n        get disabled() {\n          return props.disabled;\n        },\n        onChange(value) {\n          if (value) {\n            fsp.save();\n            props.onOpen?.();\n          }\n          props.onChange?.(value);\n          if (!value) {\n            props.onClose?.();\n            fsp.load();\n          }\n        },\n        children: ({ isOpen }) => createUnmountable(\n          props,\n          isOpen,\n          () => createDynamic(\n            () => props.as ?? 'div',\n            mergeProps(\n              omitProps(props, [\n                'as',\n                'children',\n                'unmount',\n                'isOpen',\n                'disabled',\n                'onOpen',\n                'onClose',\n                'onChange',\n              ]),\n              ALERT_DIALOG_TAG,\n              {\n                id: ownerID,\n                role: 'alertdialog',\n                'aria-modal': true,\n                'aria-labelledby': titleID,\n                'aria-describedby': descriptionID,\n              },\n              createHeadlessDisclosureChildProps(props),\n            ) as DynamicProps<T>,\n          ),\n        ),\n      });\n    },\n  });\n}\n", "import {\n  onCleanup,\n} from 'solid-js';\nimport {\n  getFocusStartPoint,\n  setFocusStartPoint,\n} from './focus-start-point';\n\nclass FocusStartPoint {\n  private returnElement: Element | null | undefined;\n\n  private fsp: HTMLElement | null | undefined;\n\n  constructor() {\n    if (typeof document !== 'undefined') {\n      this.returnElement = document.activeElement;\n      this.fsp = getFocusStartPoint();\n    }\n\n    onCleanup(() => {\n      this.load();\n    });\n  }\n\n  load() {\n    if (this.returnElement instanceof HTMLElement) {\n      this.returnElement.focus();\n    } else {\n      setFocusStartPoint(this.fsp);\n    }\n  }\n\n  save() {\n    this.returnElement = document.activeElement;\n    this.fsp = getFocusStartPoint();\n  }\n}\n\ninterface FocusStartPoint {\n  load(): void;\n  save(): void;\n}\n\nexport default function useFocusStartPoint(): FocusStartPoint {\n  return new FocusStartPoint();\n}\n", "export function getFocusStartPoint() {\n  return window.getSelection()?.focusNode?.parentElement;\n}\n\nexport function setFocusStartPoint(element?: HTMLElement | null) {\n  if (element) {\n    const tabindex = element.getAttribute('tabindex');\n\n    element.setAttribute('tabindex', '-1');\n    element.focus();\n    element.blur();\n\n    if (tabindex) {\n      element.setAttribute('tabindex', tabindex);\n    } else {\n      element.removeAttribute('tabindex');\n    }\n  }\n}\n", "import {\n  createContext,\n  useContext,\n} from 'solid-js';\n\ninterface AlertDialogContext {\n  ownerID: string;\n  panelID: string;\n  titleID: string;\n  descriptionID: string;\n}\n\nexport const AlertDialogContext = createContext<AlertDialogContext>();\n\nexport function useAlertDialogContext(componentName: string): AlertDialogContext {\n  const context = useContext(AlertDialogContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <AlertDialog>`);\n}\n", "import { createTag } from '../../utils/namespace';\n\nexport const ALERT_DIALOG_TAG = createTag('alert-dialog');\nexport const ALERT_DIALOG_DESCRIPTION = createTag('alert-dialog-description');\nexport const ALERT_DIALOG_OVERLAY = createTag('alert-dialog-overlay');\nexport const ALERT_DIALOG_PANEL = createTag('alert-dialog-panel');\nexport const ALERT_DIALOG_TITLE = createTag('alert-dialog-title');\n", "import {\n  createComponent,\n  createUniqueId,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  createHeadlessDisclosureChildProps,\n  HeadlessDisclosureRoot,\n  HeadlessDisclosureUncontrolledOptions,\n} from '../../headless/disclosure';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  DynamicProps,\n  HeadlessProps,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  createUnmountable,\n} from '../../utils/Unmountable';\nimport useFocusStartPoint from '../../utils/use-focus-start-point';\nimport {\n  AlertDialogContext,\n} from './AlertDialogContext';\nimport { ALERT_DIALOG_TAG } from './tags';\nimport {\n  AlertDialogBaseProps,\n} from './types';\n\nexport type AlertDialogUncontrolledBaseProps =\n  & AlertDialogBaseProps\n  & HeadlessDisclosureUncontrolledOptions;\n\nexport type AlertDialogUncontrolledProps<T extends ValidConstructor = 'div'> =\n  HeadlessProps<T, AlertDialogUncontrolledBaseProps>;\n\nexport function AlertDialogUncontrolled<T extends ValidConstructor = 'div'>(\n  props: AlertDialogUncontrolledProps<T>,\n): JSX.Element {\n  const ownerID = createUniqueId();\n  const panelID = createUniqueId();\n  const titleID = createUniqueId();\n  const descriptionID = createUniqueId();\n\n  const fsp = useFocusStartPoint();\n\n  return createComponent(AlertDialogContext.Provider, {\n    value: {\n      ownerID,\n      panelID,\n      titleID,\n      descriptionID,\n    },\n    get children() {\n      return createComponent(HeadlessDisclosureRoot, {\n        get defaultOpen() {\n          return props.defaultOpen;\n        },\n        get disabled() {\n          return props.disabled;\n        },\n        onChange(value) {\n          if (value) {\n            fsp.save();\n            props.onOpen?.();\n          }\n          props.onChange?.(value);\n          if (!value) {\n            props.onClose?.();\n            fsp.load();\n          }\n        },\n        children: ({ isOpen }) => createUnmountable(\n          props,\n          isOpen,\n          () => createDynamic(\n            () => props.as ?? 'div',\n            mergeProps(\n              omitProps(props, [\n                'as',\n                'children',\n                'unmount',\n                'defaultOpen',\n                'disabled',\n                'onOpen',\n                'onClose',\n                'onChange',\n              ]),\n              ALERT_DIALOG_TAG,\n              {\n                id: ownerID,\n                role: 'alertdialog',\n                'aria-modal': true,\n                'aria-labelledby': titleID,\n                'aria-describedby': descriptionID,\n              },\n              createHeadlessDisclosureChildProps(props),\n            ) as DynamicProps<T>,\n          ),\n        ),\n      });\n    },\n  });\n}\n", "import {\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureChildProps,\n  createHeadlessDisclosureChildProps,\n} from '../../headless/disclosure';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  ValidConstructor,\n  HeadlessProps,\n  DynamicProps,\n} from '../../utils/dynamic-prop';\nimport {\n  useAlertDialogContext,\n} from './AlertDialogContext';\nimport { ALERT_DIALOG_DESCRIPTION } from './tags';\n\nexport type AlertDialogDescriptionProps<T extends ValidConstructor = 'p'> =\n  HeadlessProps<T, HeadlessDisclosureChildProps>;\n\nexport function AlertDialogDescription<T extends ValidConstructor = 'p'>(\n  props: AlertDialogDescriptionProps<T>,\n): JSX.Element {\n  const context = useAlertDialogContext('AlertDialogDescription');\n  return createDynamic(\n    () => props.as ?? ('p' as T),\n    mergeProps(\n      omitProps(props, [\n        'as',\n        'children',\n      ]),\n      ALERT_DIALOG_DESCRIPTION,\n      {\n        id: context.descriptionID,\n      },\n      createHeadlessDisclosureChildProps(props),\n    ) as DynamicProps<T>,\n  );\n}\n", "import {\n  createSignal,\n  createEffect,\n  onCleanup,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureChildProps,\n  useHeadlessDisclosureProperties,\n  createHeadlessDisclosureChildProps,\n} from '../../headless/disclosure';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  createRef,\n  DynamicNode,\n  ValidConstructor,\n  HeadlessPropsWithRef,\n  DynamicProps,\n} from '../../utils/dynamic-prop';\nimport {\n  useAlertDialogContext,\n} from './AlertDialogContext';\nimport { ALERT_DIALOG_OVERLAY } from './tags';\n\nexport type AlertDialogOverlayProps<T extends ValidConstructor = 'div'> =\n  HeadlessPropsWithRef<T, HeadlessDisclosureChildProps>;\n\nexport function AlertDialogOverlay<T extends ValidConstructor = 'div'>(\n  props: AlertDialogOverlayProps<T>,\n): JSX.Element {\n  useAlertDialogContext('AlertDialogOverlay');\n  const properties = useHeadlessDisclosureProperties();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n\n    if (ref instanceof HTMLElement) {\n      const onClick = () => {\n        properties.setState(false);\n      };\n\n      ref.addEventListener('click', onClick);\n\n      onCleanup(() => {\n        ref.removeEventListener('click', onClick);\n      });\n    }\n  });\n\n  return createDynamic(\n    () => props.as ?? ('div' as T),\n    mergeProps(\n      omitProps(props, [\n        'as',\n        'children',\n        'ref',\n      ]),\n      ALERT_DIALOG_OVERLAY,\n      {\n        ref: createRef(props, (e) => {\n          setInternalRef(() => e);\n        }),\n      },\n      createHeadlessDisclosureChildProps(props),\n    ) as DynamicProps<T>,\n  );\n}\n", "import {\n  createSignal,\n  createEffect,\n  onCleanup,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureChildProps,\n  useHeadlessDisclosureProperties,\n  createHeadlessDisclosureChildProps,\n} from '../../headless/disclosure';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  createRef,\n  DynamicNode,\n  ValidConstructor,\n  HeadlessPropsWithRef,\n  DynamicProps,\n} from '../../utils/dynamic-prop';\nimport { focusFirst, lockFocus } from '../../utils/focus-navigation';\nimport getFocusableElements from '../../utils/focus-query';\nimport {\n  useAlertDialogContext,\n} from './AlertDialogContext';\nimport { ALERT_DIALOG_PANEL } from './tags';\n\nexport type AlertDialogPanelProps<T extends ValidConstructor = 'div'> =\n  HeadlessPropsWithRef<T, HeadlessDisclosureChildProps>;\n\nexport function AlertDialogPanel<T extends ValidConstructor = 'div'>(\n  props: AlertDialogPanelProps<T>,\n): JSX.Element {\n  const context = useAlertDialogContext('AlertDialogPanel');\n  const properties = useHeadlessDisclosureProperties();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      if (properties.isOpen()) {\n        focusFirst(getFocusableElements(ref));\n\n        const onKeyDown = (e: KeyboardEvent) => {\n          if (!props.disabled) {\n            if (e.key === 'Tab') {\n              e.preventDefault();\n\n              lockFocus(ref, e.shiftKey);\n            } else if (e.key === 'Escape') {\n              properties.setState(false);\n            }\n          }\n        };\n\n        ref.addEventListener('keydown', onKeyDown);\n        onCleanup(() => {\n          ref.removeEventListener('keydown', onKeyDown);\n        });\n      }\n    }\n  });\n\n  return createDynamic(\n    () => props.as ?? ('div' as T),\n    mergeProps(\n      omitProps(props, [\n        'as',\n        'children',\n        'ref',\n      ]),\n      ALERT_DIALOG_PANEL,\n      {\n        id: context.panelID,\n        ref: createRef(props, (e) => {\n          setInternalRef(() => e);\n        }),\n      },\n      createHeadlessDisclosureChildProps(props),\n    ) as DynamicProps<T>,\n  );\n}\n", "import {\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureChildProps,\n  createHeadlessDisclosureChildProps,\n} from '../../headless/disclosure';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  ValidConstructor,\n  HeadlessProps,\n  DynamicProps,\n} from '../../utils/dynamic-prop';\nimport {\n  useAlertDialogContext,\n} from './AlertDialogContext';\nimport { ALERT_DIALOG_TITLE } from './tags';\n\nexport type AlertDialogTitleProps<T extends ValidConstructor = 'h2'> =\n  HeadlessProps<T, HeadlessDisclosureChildProps>;\n\nexport function AlertDialogTitle<T extends ValidConstructor = 'h2'>(\n  props: AlertDialogTitleProps<T>,\n): JSX.Element {\n  const context = useAlertDialogContext('AlertDialogTitle');\n  return createDynamic(\n    () => props.as ?? ('h2' as T),\n    mergeProps(\n      omitProps(props, [\n        'as',\n        'children',\n      ]),\n      ALERT_DIALOG_TITLE,\n      {\n        id: context.titleID,\n      },\n      createHeadlessDisclosureChildProps(props),\n    ) as DynamicProps<T>,\n  );\n}\n", "import {\n  createComponent,\n  JSX,\n} from 'solid-js';\nimport {\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport Fragment from '../../utils/Fragment';\nimport {\n  CheckboxControlled,\n  CheckboxControlledProps,\n} from './CheckboxControlled';\nimport {\n  CheckboxUncontrolled,\n  CheckboxUncontrolledProps,\n} from './CheckboxUncontrolled';\n\nexport type CheckboxProps<T extends ValidConstructor = typeof Fragment> =\n  | CheckboxControlledProps<T>\n  | CheckboxUncontrolledProps<T>;\n\nfunction isCheckboxUncontrolled<T extends ValidConstructor = typeof Fragment>(\n  props: CheckboxProps<T>,\n): props is CheckboxUncontrolledProps<T> {\n  return 'defaultChecked' in props;\n}\n\nexport function Checkbox<T extends ValidConstructor = typeof Fragment>(\n  props: CheckboxProps<T>,\n): JSX.Element {\n  if (isCheckboxUncontrolled(props)) {\n    return createComponent(CheckboxUncontrolled, props);\n  }\n  return createComponent(CheckboxControlled, props);\n}\n", "import {\n  createComponent,\n  createUniqueId,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessToggleRoot,\n  HeadlessToggleRootChildren,\n  HeadlessToggleControlledOptions,\n} from '../../headless/toggle';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  DynamicProps,\n  HeadlessProps,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport Fragment from '../../utils/Fragment';\nimport {\n  createDisabled,\n} from '../../utils/state-props';\nimport {\n  CheckboxContext,\n} from './CheckboxContext';\nimport { CHECKBOX_TAG } from './tags';\n\nexport type CheckboxControlledBaseProps =\n  & HeadlessToggleControlledOptions\n  & HeadlessToggleRootChildren;\n\nexport type CheckboxControlledProps<T extends ValidConstructor = typeof Fragment> =\n  HeadlessProps<T, CheckboxControlledBaseProps>;\n\nexport function CheckboxControlled<T extends ValidConstructor = typeof Fragment>(\n  props: CheckboxControlledProps<T>,\n): JSX.Element {\n  const ownerID = createUniqueId();\n  const labelID = createUniqueId();\n  const indicatorID = createUniqueId();\n  const descriptionID = createUniqueId();\n\n  return createComponent(CheckboxContext.Provider, {\n    value: {\n      ownerID,\n      labelID,\n      indicatorID,\n      descriptionID,\n    },\n    get children() {\n      return createDynamic(\n        () => props.as ?? (Fragment as T),\n        mergeProps(\n          omitProps(props, [\n            'checked',\n            'as',\n            'children',\n            'disabled',\n            'onChange',\n          ]),\n          CHECKBOX_TAG,\n          createDisabled(() => props.disabled),\n          {\n            get children() {\n              return createComponent(HeadlessToggleRoot, {\n                onChange: props.onChange,\n                get checked() {\n                  return props.checked;\n                },\n                get disabled() {\n                  return props.disabled;\n                },\n                get children() {\n                  return props.children;\n                },\n              });\n            },\n          },\n        ) as DynamicProps<T>,\n      );\n    },\n  });\n}\n", "import { createMemo, JSX } from 'solid-js';\n\nexport interface FragmentProps {\n  children?: JSX.Element;\n}\n\nexport default function Fragment(props: FragmentProps): JSX.Element {\n  return createMemo(() => props.children);\n}\n", "import {\n  createContext,\n  useContext,\n} from 'solid-js';\n\ninterface CheckboxContext {\n  ownerID: string;\n  labelID: string;\n  indicatorID: string;\n  descriptionID: string;\n}\n\nexport const CheckboxContext = createContext<CheckboxContext>();\n\nexport function useCheckboxContext(componentName: string): CheckboxContext {\n  const context = useContext(CheckboxContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <Checkbox>`);\n}\n", "import { createTag } from '../../utils/namespace';\n\nexport const CHECKBOX_TAG = createTag('checkbox');\nexport const CHECKBOX_DESCRIPTION = createTag('checkbox-description');\nexport const CHECKBOX_INDICATOR = createTag('checkbox-indicator');\nexport const CHECKBOX_LABEL = createTag('checkbox-label');\n", "import {\n  createComponent,\n  createUniqueId,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessToggleRoot,\n  HeadlessToggleRootChildren,\n  HeadlessToggleUncontrolledOptions,\n} from '../../headless/toggle';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  DynamicProps,\n  HeadlessProps,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport Fragment from '../../utils/Fragment';\nimport {\n  createDisabled,\n} from '../../utils/state-props';\nimport {\n  CheckboxContext,\n} from './CheckboxContext';\nimport { CHECKBOX_TAG } from './tags';\n\nexport type CheckboxUncontrolledBaseProps =\n  & HeadlessToggleUncontrolledOptions\n  & HeadlessToggleRootChildren;\n\nexport type CheckboxUncontrolledProps<T extends ValidConstructor = typeof Fragment> =\n  HeadlessProps<T, CheckboxUncontrolledBaseProps>;\n\nexport function CheckboxUncontrolled<T extends ValidConstructor = typeof Fragment>(\n  props: CheckboxUncontrolledProps<T>,\n): JSX.Element {\n  const ownerID = createUniqueId();\n  const labelID = createUniqueId();\n  const indicatorID = createUniqueId();\n  const descriptionID = createUniqueId();\n\n  return createComponent(CheckboxContext.Provider, {\n    value: {\n      ownerID,\n      labelID,\n      indicatorID,\n      descriptionID,\n    },\n    get children() {\n      return createDynamic(\n        () => props.as ?? (Fragment as T),\n        mergeProps(\n          omitProps(props, [\n            'defaultChecked',\n            'as',\n            'children',\n            'disabled',\n            'onChange',\n          ]),\n          CHECKBOX_TAG,\n          createDisabled(() => props.disabled),\n          {\n            get children() {\n              return createComponent(HeadlessToggleRoot, {\n                onChange: props.onChange,\n                get checked() {\n                  return props.checked;\n                },\n                get disabled() {\n                  return props.disabled;\n                },\n                get children() {\n                  return props.children;\n                },\n              });\n            },\n          },\n        ) as DynamicProps<T>,\n      );\n    },\n  });\n}\n", "import {\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessToggleChildProps,\n} from '../../headless/toggle';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  DynamicProps,\n  HeadlessProps,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  useCheckboxContext,\n} from './CheckboxContext';\nimport { CHECKBOX_DESCRIPTION } from './tags';\n\nexport type CheckboxDescriptionProps<T extends ValidConstructor = 'p'> =\n  HeadlessProps<T, HeadlessToggleChildProps>;\n\nexport function CheckboxDescription<T extends ValidConstructor = 'p'>(\n  props: CheckboxDescriptionProps<T>,\n): JSX.Element {\n  const context = useCheckboxContext('CheckboxDescription');\n  return createDynamic(\n    () => props.as ?? ('p' as T),\n    mergeProps(\n      omitProps(props, [\n        'as',\n        'children',\n      ]),\n      CHECKBOX_DESCRIPTION,\n      {\n        id: context.descriptionID,\n      },\n    ) as DynamicProps<T>,\n  );\n}\n", "import {\n  createSignal,\n  createEffect,\n  onCleanup,\n  JSX,\n  createComponent,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessToggleChildProps,\n  HeadlessToggleChild,\n  useHeadlessToggleProperties,\n} from '../../headless/toggle';\nimport {\n  createRef,\n  DynamicNode,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  createChecked,\n  createDisabled,\n} from '../../utils/state-props';\nimport {\n  Button,\n  ButtonProps,\n} from '../button';\nimport {\n  useCheckboxContext,\n} from './CheckboxContext';\nimport { CHECKBOX_INDICATOR } from './tags';\n\nexport type CheckboxIndicatorProps<T extends ValidConstructor = 'button'> =\n  HeadlessPropsWithRef<T, HeadlessToggleChildProps>;\n\nexport function CheckboxIndicator<T extends ValidConstructor = 'button'>(\n  props: CheckboxIndicatorProps<T>,\n): JSX.Element {\n  const context = useCheckboxContext('CheckboxIndicator');\n  const state = useHeadlessToggleProperties();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n\n    if (ref instanceof HTMLElement) {\n      const toggle = () => {\n        state.setState(!state.checked());\n      };\n\n      const onKeyDown = (e: KeyboardEvent) => {\n        if (e.key === ' ') {\n          toggle();\n        }\n      };\n\n      ref.addEventListener('click', toggle);\n      ref.addEventListener('keydown', onKeyDown);\n      onCleanup(() => {\n        ref.removeEventListener('click', toggle);\n        ref.removeEventListener('keydown', onKeyDown);\n      });\n    }\n  });\n\n  return createComponent(Button, mergeProps(\n    omitProps(props, [\n      'children',\n      'ref',\n    ]),\n    CHECKBOX_INDICATOR,\n    {\n      id: context.indicatorID,\n      role: 'checkbox',\n      'aria-labelledby': context.labelID,\n      'aria-describedby': context.descriptionID,\n      ref: createRef(props, (e) => {\n        setInternalRef(() => e);\n      }),\n    },\n    createDisabled(() => state.disabled()),\n    createChecked(() => state.checked()),\n    {\n      get children() {\n        return createComponent(HeadlessToggleChild, {\n          get children() {\n            return props.children;\n          },\n        });\n      },\n    },\n  ) as ButtonProps<T>);\n}\n", "import {\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessToggleChildProps,\n} from '../../headless/toggle';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  ValidConstructor,\n  HeadlessProps,\n  DynamicProps,\n} from '../../utils/dynamic-prop';\nimport {\n  useCheckboxContext,\n} from './CheckboxContext';\nimport { CHECKBOX_LABEL } from './tags';\n\nexport type CheckboxLabelProps<T extends ValidConstructor = 'label'> =\n  HeadlessProps<T, HeadlessToggleChildProps>;\n\nexport function CheckboxLabel<T extends ValidConstructor = 'label'>(\n  props: CheckboxLabelProps<T>,\n): JSX.Element {\n  const context = useCheckboxContext('CheckboxLabel');\n  return createDynamic(\n    () => props.as ?? ('label' as T),\n    mergeProps(\n      omitProps(props, [\n        'as',\n        'children',\n      ]),\n      CHECKBOX_LABEL,\n      {\n        id: context.labelID,\n        for: context.indicatorID,\n        get children() {\n          return props.children;\n        },\n      },\n    ) as DynamicProps<T>,\n  );\n}\n", "import {\n  createContext,\n  createEffect,\n  createMemo,\n  onCleanup,\n  useContext,\n  JSX,\n  Accessor,\n  createSignal,\n  createComponent,\n} from 'solid-js';\nimport {\n  usePageVisibility,\n  usePrefersDark,\n} from 'solid-use';\n\nexport type NativeColorScheme = 'light' | 'dark';\nexport type ColorScheme = NativeColorScheme | 'system';\n\nexport interface ColorSchemeProviderControlledProps {\n  value: ColorScheme;\n  onChange?: (scheme: ColorScheme) => void;\n  children?: JSX.Element;\n}\nexport interface ColorSchemeProviderUncontrolledProps {\n  initialValue: ColorScheme;\n  onChange?: (scheme: ColorScheme) => void;\n  children?: JSX.Element;\n}\n\nexport type ColorSchemeProviderProps =\n  | ColorSchemeProviderControlledProps\n  | ColorSchemeProviderUncontrolledProps;\n\ninterface ColorSchemeContext {\n  value: ColorScheme;\n  setValue: (newScheme: ColorScheme) => void;\n  native: NativeColorScheme;\n  preferred: NativeColorScheme;\n}\n\nconst ColorSchemeContext = createContext<ColorSchemeContext>();\n\nconst STORAGE_KEY = 'theme-preference';\n\nexport function ColorSchemeProvider(props: ColorSchemeProviderProps) {\n  let get: Accessor<ColorScheme>;\n  let set: (scheme: ColorScheme) => void;\n\n  if ('initialValue' in props) {\n    const [scheme, setScheme] = createSignal<ColorScheme>(props.initialValue);\n    get = scheme;\n    set = (value) => {\n      setScheme(value);\n      props.onChange?.(value);\n    };\n  } else {\n    get = () => props.value;\n    set = (value) => props.onChange?.(value);\n  }\n\n  const prefersDark = usePrefersDark();\n  const isVisible = usePageVisibility();\n\n  const shouldToggle = createMemo(() => (\n    (get() === 'system' && prefersDark()) || (get() === 'dark')\n  ));\n\n  // Since storage events only work for other windows\n  // we need to make the main window sync\n  createEffect(() => {\n    isVisible();\n\n    const onChange = () => {\n      const value = localStorage.getItem(STORAGE_KEY);\n\n      if (value) {\n        set(value as ColorScheme);\n      } else {\n        set('system');\n      }\n    };\n    window.addEventListener('storage', onChange, false);\n\n    onChange();\n\n    onCleanup(() => {\n      window.removeEventListener('storage', onChange, false);\n    });\n  });\n\n  // Sync storage when signal changes\n  createEffect(() => {\n    localStorage.setItem(STORAGE_KEY, get());\n  });\n\n  // Sync document class\n  createEffect(() => {\n    document.documentElement.classList.toggle(\n      'dark',\n      shouldToggle(),\n    );\n  });\n\n  return createComponent(ColorSchemeContext.Provider, {\n    value: {\n      get value() {\n        return get();\n      },\n      setValue(val) {\n        set(val);\n      },\n      get preferred() {\n        return shouldToggle() ? 'dark' : 'light';\n      },\n      get native() {\n        return prefersDark() ? 'dark' : 'light';\n      },\n    },\n    get children() {\n      return props.children;\n    },\n  });\n}\n\nfunction useColorSchemeContext(): ColorSchemeContext {\n  const ctx = useContext(ColorSchemeContext);\n  if (ctx) {\n    return ctx;\n  }\n  throw new Error('Missing <ColorSchemeProvider>');\n}\n\nexport function useColorScheme(): [() => ColorScheme, (newScheme: ColorScheme) => void] {\n  const ctx = useColorSchemeContext();\n  return [\n    () => ctx.value,\n    ctx.setValue,\n  ];\n}\n\nexport function useNativeColorScheme(): () => NativeColorScheme {\n  const ctx = useColorSchemeContext();\n  return () => ctx.native;\n}\n\nexport function usePreferredColorScheme(): () => NativeColorScheme {\n  const ctx = useColorSchemeContext();\n  return () => ctx.preferred;\n}\n", "import {\n  createComponent,\n  JSX,\n} from 'solid-js';\nimport {\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  CommandBarControlled,\n  CommandBarControlledProps,\n} from './CommandBarControlled';\nimport {\n  CommandBarUncontrolled,\n  CommandBarUncontrolledProps,\n} from './CommandBarUncontrolled';\n\nexport type CommandBarProps<T extends ValidConstructor = 'div'> =\n  | CommandBarControlledProps<T>\n  | CommandBarUncontrolledProps<T>;\n\nfunction isCommandBarUncontrolled<T extends ValidConstructor = 'div'>(\n  props: CommandBarProps<T>,\n): props is CommandBarUncontrolledProps<T> {\n  return 'defaultOpen' in props;\n}\n\nexport function CommandBar<T extends ValidConstructor = 'div'>(\n  props: CommandBarProps<T>,\n): JSX.Element {\n  if (isCommandBarUncontrolled(props)) {\n    return createComponent(CommandBarUncontrolled, props);\n  }\n  return createComponent(CommandBarControlled, props);\n}\n", "import {\n  createComponent,\n  createUniqueId,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureRoot,\n  HeadlessDisclosureControlledOptions,\n  createHeadlessDisclosureChildProps,\n} from '../../headless/disclosure';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  DynamicProps,\n  HeadlessProps,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  createUnmountable,\n} from '../../utils/Unmountable';\nimport useFocusStartPoint from '../../utils/use-focus-start-point';\nimport {\n  CommandBarContext,\n} from './CommandBarContext';\nimport CommandBarEvents from './CommandBarEvents';\nimport { COMMAND_BAR_TAG } from './tags';\nimport {\n  CommandBarBaseProps,\n} from './types';\n\nexport type CommandBarControlledBaseProps =\n  & CommandBarBaseProps\n  & HeadlessDisclosureControlledOptions;\n\nexport type CommandBarControlledProps<T extends ValidConstructor = 'div'> =\n  HeadlessProps<T, CommandBarControlledBaseProps>;\n\nexport function CommandBarControlled<T extends ValidConstructor = 'div'>(\n  props: CommandBarControlledProps<T>,\n): JSX.Element {\n  const ownerID = createUniqueId();\n  const panelID = createUniqueId();\n  const titleID = createUniqueId();\n  const descriptionID = createUniqueId();\n  const fsp = useFocusStartPoint();\n\n  return createComponent(CommandBarContext.Provider, {\n    value: {\n      ownerID,\n      panelID,\n      titleID,\n      descriptionID,\n    },\n    get children() {\n      return createComponent(HeadlessDisclosureRoot, {\n        get isOpen() {\n          return props.isOpen;\n        },\n        get disabled() {\n          return props.disabled;\n        },\n        onChange(value) {\n          if (value) {\n            fsp.save();\n            props.onOpen?.();\n          }\n          props.onChange?.(value);\n          if (!value) {\n            props.onClose?.();\n            fsp.load();\n          }\n        },\n        children: ({ isOpen }) => createComponent(CommandBarEvents, {\n          get children() {\n            return createUnmountable(\n              props,\n              isOpen,\n              () => createDynamic(\n                () => props.as ?? ('div' as T),\n                mergeProps(\n                  omitProps(props, [\n                    'as',\n                    'children',\n                    'unmount',\n                    'isOpen',\n                    'disabled',\n                    'onOpen',\n                    'onClose',\n                    'onChange',\n                  ]),\n                  {\n                    id: ownerID,\n                    role: 'dialog',\n                    'aria-modal': true,\n                    'aria-labelledby': titleID,\n                    'aria-describedby': descriptionID,\n                  },\n                  COMMAND_BAR_TAG,\n                  createHeadlessDisclosureChildProps(props),\n                ) as DynamicProps<T>,\n              ),\n            );\n          },\n        }),\n      });\n    },\n  });\n}\n", "import {\n  createContext,\n  useContext,\n} from 'solid-js';\n\ninterface CommandBarContext {\n  ownerID: string;\n  panelID: string;\n  titleID: string;\n  descriptionID: string;\n  onOpen?: () => void;\n  onClose?: () => void;\n}\n\nexport const CommandBarContext = createContext<CommandBarContext>();\n\nexport function useCommandBarContext(componentName: string): CommandBarContext {\n  const context = useContext(CommandBarContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <CommandBar>`);\n}\n", "import {\n  createEffect,\n  onCleanup,\n  JSX,\n  createMemo,\n} from 'solid-js';\nimport {\n  useHeadlessDisclosureProperties,\n} from '../../headless/disclosure';\n\nexport default function CommandBarEvents(props: { children: JSX.Element }): JSX.Element {\n  const properties = useHeadlessDisclosureProperties();\n\n  createEffect(() => {\n    const onKeyDown = (ev: KeyboardEvent) => {\n      if ((ev.metaKey || ev.ctrlKey) && ev.key === 'k' && ev.defaultPrevented === false) {\n        ev.preventDefault();\n        properties.setState(true);\n      }\n    };\n\n    window.addEventListener('keydown', onKeyDown);\n    onCleanup(() => {\n      window.removeEventListener('keydown', onKeyDown);\n    });\n  });\n\n  return createMemo(() => props.children);\n}\n", "import { createTag } from '../../utils/namespace';\n\nexport const COMMAND_BAR_TAG = createTag('command-bar');\nexport const COMMAND_BAR_DESCRIPTION_TAG = createTag('command-bar-description');\nexport const COMMAND_BAR_OVERLAY_TAG = createTag('command-bar-overlay');\nexport const COMMAND_BAR_PANEL_TAG = createTag('command-bar-panel');\nexport const COMMAND_BAR_TITLE_TAG = createTag('command-bar-title');\n", "import {\n  createComponent,\n  createUniqueId,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  createHeadlessDisclosureChildProps,\n  HeadlessDisclosureRoot,\n  HeadlessDisclosureUncontrolledOptions,\n} from '../../headless/disclosure';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  DynamicProps,\n  HeadlessProps,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  createUnmountable,\n} from '../../utils/Unmountable';\nimport useFocusStartPoint from '../../utils/use-focus-start-point';\nimport {\n  CommandBarContext,\n} from './CommandBarContext';\nimport CommandBarEvents from './CommandBarEvents';\nimport { COMMAND_BAR_TAG } from './tags';\nimport {\n  CommandBarBaseProps,\n} from './types';\n\nexport type CommandBarUncontrolledBaseProps =\n  & CommandBarBaseProps\n  & HeadlessDisclosureUncontrolledOptions;\n\nexport type CommandBarUncontrolledProps<T extends ValidConstructor = 'div'> =\n  HeadlessProps<T, CommandBarUncontrolledBaseProps>;\n\nexport function CommandBarUncontrolled<T extends ValidConstructor = 'div'>(\n  props: CommandBarUncontrolledProps<T>,\n): JSX.Element {\n  const ownerID = createUniqueId();\n  const panelID = createUniqueId();\n  const titleID = createUniqueId();\n  const descriptionID = createUniqueId();\n  const fsp = useFocusStartPoint();\n\n  return createComponent(CommandBarContext.Provider, {\n    value: {\n      ownerID,\n      panelID,\n      titleID,\n      descriptionID,\n    },\n    get children() {\n      return createComponent(HeadlessDisclosureRoot, {\n        get defaultOpen() {\n          return props.defaultOpen;\n        },\n        get disabled() {\n          return props.disabled;\n        },\n        onChange(value) {\n          if (value) {\n            fsp.save();\n            props.onOpen?.();\n          }\n          props.onChange?.(value);\n          if (!value) {\n            props.onClose?.();\n            fsp.load();\n          }\n        },\n        children: ({ isOpen }) => createComponent(CommandBarEvents, {\n          get children() {\n            return createUnmountable(\n              props,\n              isOpen,\n              () => createDynamic(\n                () => props.as ?? ('div' as T),\n                mergeProps(\n                  omitProps(props, [\n                    'as',\n                    'children',\n                    'unmount',\n                    'defaultOpen',\n                    'disabled',\n                    'onOpen',\n                    'onClose',\n                    'onChange',\n                  ]),\n                  COMMAND_BAR_TAG,\n                  {\n                    id: ownerID,\n                    role: 'dialog',\n                    'aria-modal': true,\n                    'aria-labelledby': titleID,\n                    'aria-describedby': descriptionID,\n                  },\n                  createHeadlessDisclosureChildProps(props),\n                ) as DynamicProps<T>,\n              ),\n            );\n          },\n        }),\n      });\n    },\n  });\n}\n", "import {\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureChildProps,\n  createHeadlessDisclosureChildProps,\n} from '../../headless/disclosure';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  DynamicProps,\n  HeadlessProps,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  useCommandBarContext,\n} from './CommandBarContext';\nimport { COMMAND_BAR_DESCRIPTION_TAG } from './tags';\n\nexport type CommandBarDescriptionProps<T extends ValidConstructor = 'p'> =\n  HeadlessProps<T, HeadlessDisclosureChildProps>;\n\nexport function CommandBarDescription<T extends ValidConstructor = 'p'>(\n  props: CommandBarDescriptionProps<T>,\n): JSX.Element {\n  const context = useCommandBarContext('CommandBarDescription');\n  return createDynamic(\n    () => props.as ?? ('p' as T),\n    mergeProps(\n      omitProps(props, [\n        'as',\n        'children',\n      ]),\n      COMMAND_BAR_DESCRIPTION_TAG,\n      {\n        id: context.descriptionID,\n      },\n      createHeadlessDisclosureChildProps(props),\n    ) as DynamicProps<T>,\n  );\n}\n", "import {\n  createSignal,\n  createEffect,\n  onCleanup,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureChildProps,\n  useHeadlessDisclosureProperties,\n  createHeadlessDisclosureChildProps,\n} from '../../headless/disclosure';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  createRef,\n  DynamicNode,\n  DynamicProps,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  useCommandBarContext,\n} from './CommandBarContext';\nimport { COMMAND_BAR_OVERLAY_TAG } from './tags';\n\nexport type CommandBarOverlayProps<T extends ValidConstructor = 'div'> =\n  HeadlessPropsWithRef<T, HeadlessDisclosureChildProps>;\n\nexport function CommandBarOverlay<T extends ValidConstructor = 'p'>(\n  props: CommandBarOverlayProps<T>,\n): JSX.Element {\n  useCommandBarContext('CommandBarOverlay');\n  const properties = useHeadlessDisclosureProperties();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n\n    if (ref instanceof HTMLElement) {\n      const onClick = () => {\n        properties.setState(false);\n      };\n\n      ref.addEventListener('click', onClick);\n\n      onCleanup(() => {\n        ref.removeEventListener('click', onClick);\n      });\n    }\n  });\n\n  return createDynamic(\n    () => props.as ?? ('div' as T),\n    mergeProps(\n      omitProps(props, [\n        'as',\n        'children',\n        'ref',\n      ]),\n      COMMAND_BAR_OVERLAY_TAG,\n      {\n        ref: createRef(props, (e) => {\n          setInternalRef(() => e);\n        }),\n      },\n      createHeadlessDisclosureChildProps(props),\n    ) as DynamicProps<T>,\n  );\n}\n", "import {\n  createSignal,\n  createEffect,\n  onCleanup,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureChildProps,\n  useHeadlessDisclosureProperties,\n  createHeadlessDisclosureChildProps,\n} from '../../headless/disclosure';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  createRef,\n  DynamicNode,\n  DynamicProps,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport { focusFirst, lockFocus } from '../../utils/focus-navigation';\nimport getFocusableElements from '../../utils/focus-query';\nimport {\n  useCommandBarContext,\n} from './CommandBarContext';\nimport { COMMAND_BAR_PANEL_TAG } from './tags';\n\nexport type CommandBarPanelProps<T extends ValidConstructor = 'div'> =\n  HeadlessPropsWithRef<T, HeadlessDisclosureChildProps>;\n\nexport function CommandBarPanel<T extends ValidConstructor = 'div'>(\n  props: CommandBarPanelProps<T>,\n): JSX.Element {\n  const context = useCommandBarContext('CommandBarPanel');\n  const properties = useHeadlessDisclosureProperties();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      if (properties.isOpen()) {\n        focusFirst(getFocusableElements(ref));\n\n        const onKeyDown = (e: KeyboardEvent) => {\n          if (!props.disabled) {\n            if (e.key === 'Tab') {\n              e.preventDefault();\n\n              lockFocus(ref, e.shiftKey);\n            } else if (e.key === 'Escape') {\n              properties.setState(false);\n            }\n          }\n        };\n\n        ref.addEventListener('keydown', onKeyDown);\n        onCleanup(() => {\n          ref.removeEventListener('keydown', onKeyDown);\n        });\n      }\n    }\n  });\n\n  return createDynamic(\n    () => props.as ?? ('div' as T),\n    mergeProps(\n      omitProps(props, [\n        'as',\n        'children',\n        'ref',\n      ]),\n      COMMAND_BAR_PANEL_TAG,\n      {\n        id: context.panelID,\n        ref: createRef(props, (e) => {\n          setInternalRef(() => e);\n        }),\n      },\n      createHeadlessDisclosureChildProps(props),\n    ) as DynamicProps<T>,\n  );\n}\n", "import {\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureChildProps,\n  createHeadlessDisclosureChildProps,\n} from '../../headless/disclosure';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  DynamicProps,\n  HeadlessProps,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  useCommandBarContext,\n} from './CommandBarContext';\nimport { COMMAND_BAR_TITLE_TAG } from './tags';\n\nexport type CommandBarTitleProps<T extends ValidConstructor = 'h2'> =\n  HeadlessProps<T, HeadlessDisclosureChildProps>;\n\nexport function CommandBarTitle<T extends ValidConstructor = 'h2'>(\n  props: CommandBarTitleProps<T>,\n): JSX.Element {\n  const context = useCommandBarContext('CommandBarTitle');\n  return createDynamic(\n    () => props.as ?? ('h2' as T),\n    mergeProps(\n      omitProps(props, [\n        'as',\n        'children',\n      ]),\n      COMMAND_BAR_TITLE_TAG,\n      {\n        id: context.titleID,\n      },\n      createHeadlessDisclosureChildProps(props),\n    ) as DynamicProps<T>,\n  );\n}\n", "import {\n  createComponent,\n  JSX,\n} from 'solid-js';\nimport {\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  ContextMenuControlled,\n  ContextMenuControlledProps,\n} from './ContextMenuControlled';\nimport {\n  ContextMenuUncontrolled,\n  ContextMenuUncontrolledProps,\n} from './ContextMenuUncontrolled';\n\nexport type ContextMenuProps<T extends ValidConstructor = 'div'> =\n  | ContextMenuControlledProps<T>\n  | ContextMenuUncontrolledProps<T>;\n\nfunction isContextMenuUncontrolled<T extends ValidConstructor = 'div'>(\n  props: ContextMenuProps<T>,\n): props is ContextMenuUncontrolledProps<T> {\n  return 'defaultOpen' in props;\n}\n\nexport function ContextMenu<T extends ValidConstructor = 'div'>(\n  props: ContextMenuProps<T>,\n): JSX.Element {\n  if (isContextMenuUncontrolled(props)) {\n    return createComponent(ContextMenuUncontrolled, props);\n  }\n  return createComponent(ContextMenuControlled, props);\n}\n", "import {\n  createComponent,\n  createUniqueId,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureRoot,\n  HeadlessDisclosureControlledOptions,\n} from '../../headless/disclosure';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  DynamicProps,\n  HeadlessProps,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  createDisabled,\n} from '../../utils/state-props';\nimport useFocusStartPoint from '../../utils/use-focus-start-point';\nimport {\n  ContextMenuContext,\n} from './ContextMenuContext';\nimport { CONTEXT_MENU_TAG } from './tags';\nimport {\n  ContextMenuBaseProps,\n} from './types';\n\nexport type ContextMenuControlledBaseProps =\n  & ContextMenuBaseProps\n  & HeadlessDisclosureControlledOptions;\n\nexport type ContextMenuControlledProps<T extends ValidConstructor = 'div'> =\n  HeadlessProps<T, ContextMenuControlledBaseProps>;\n\nexport function ContextMenuControlled<T extends ValidConstructor = 'div'>(\n  props: ContextMenuControlledProps<T>,\n): JSX.Element {\n  const ownerID = createUniqueId();\n  const boundaryID = createUniqueId();\n  const panelID = createUniqueId();\n\n  const fsp = useFocusStartPoint();\n\n  return createComponent(ContextMenuContext.Provider, {\n    value: {\n      ownerID,\n      boundaryID,\n      panelID,\n    },\n    get children() {\n      return createDynamic(\n        () => props.as ?? ('div' as T),\n        mergeProps(\n          omitProps(props, [\n            'isOpen',\n            'as',\n            'children',\n            'disabled',\n            'onChange',\n            'onOpen',\n            'onClose',\n          ]),\n          CONTEXT_MENU_TAG,\n          createDisabled(() => props.disabled),\n          {\n            get children() {\n              return createComponent(HeadlessDisclosureRoot, {\n                get isOpen() {\n                  return props.isOpen;\n                },\n                get disabled() {\n                  return props.disabled;\n                },\n                onChange(value) {\n                  if (value) {\n                    fsp.save();\n                    props.onOpen?.();\n                  }\n                  props.onChange?.(value);\n                  if (!value) {\n                    props.onClose?.();\n                    fsp.load();\n                  }\n                },\n                get children() {\n                  return props.children;\n                },\n              });\n            },\n          },\n        ) as DynamicProps<T>,\n      );\n    },\n  });\n}\n", "import {\n  createContext,\n  useContext,\n} from 'solid-js';\n\ninterface ContextMenuContext {\n  ownerID: string;\n  boundaryID: string;\n  panelID: string;\n  anchor?: HTMLElement | null;\n}\n\nexport const ContextMenuContext = createContext<ContextMenuContext>();\n\nexport function useContextMenuContext(componentName: string): ContextMenuContext {\n  const context = useContext(ContextMenuContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <ContextMenu>`);\n}\n", "import { createTag } from '../../utils/namespace';\n\nexport const CONTEXT_MENU_TAG = createTag('context-menu');\nexport const CONTEXT_MENU_BOUNDARY_TAG = createTag('context-menu-boundary');\nexport const CONTEXT_MENU_OVERLAY_TAG = createTag('context-menu-overlay');\nexport const CONTEXT_MENU_PANEL_TAG = createTag('context-menu-panel');\n", "import {\n  createComponent,\n  createUniqueId,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureRoot,\n  HeadlessDisclosureUncontrolledOptions,\n} from '../../headless/disclosure';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  DynamicProps,\n  HeadlessProps,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  createDisabled,\n} from '../../utils/state-props';\nimport useFocusStartPoint from '../../utils/use-focus-start-point';\nimport {\n  ContextMenuContext,\n} from './ContextMenuContext';\nimport { CONTEXT_MENU_TAG } from './tags';\nimport {\n  ContextMenuBaseProps,\n} from './types';\n\nexport type ContextMenuUncontrolledBaseProps =\n  & ContextMenuBaseProps\n  & HeadlessDisclosureUncontrolledOptions;\n\nexport type ContextMenuUncontrolledProps<T extends ValidConstructor = 'div'> =\n  HeadlessProps<T, ContextMenuUncontrolledBaseProps>;\n\nexport function ContextMenuUncontrolled<T extends ValidConstructor = 'div'>(\n  props: ContextMenuUncontrolledProps<T>,\n): JSX.Element {\n  const ownerID = createUniqueId();\n  const boundaryID = createUniqueId();\n  const panelID = createUniqueId();\n\n  const fsp = useFocusStartPoint();\n\n  return createComponent(ContextMenuContext.Provider, {\n    value: {\n      ownerID,\n      boundaryID,\n      panelID,\n    },\n    get children() {\n      return createDynamic(\n        () => props.as ?? ('div' as T),\n        mergeProps(\n          omitProps(props, [\n            'defaultOpen',\n            'as',\n            'children',\n            'disabled',\n            'onChange',\n            'onOpen',\n            'onClose',\n          ]),\n          CONTEXT_MENU_TAG,\n          createDisabled(() => props.disabled),\n          {\n            get children() {\n              return createComponent(HeadlessDisclosureRoot, {\n                get defaultOpen() {\n                  return props.defaultOpen;\n                },\n                get disabled() {\n                  return props.disabled;\n                },\n                onChange(value) {\n                  if (value) {\n                    fsp.save();\n                    props.onOpen?.();\n                  }\n                  props.onChange?.(value);\n                  if (!value) {\n                    props.onClose?.();\n                    fsp.load();\n                  }\n                },\n                get children() {\n                  return props.children;\n                },\n              });\n            },\n          },\n        ) as DynamicProps<T>,\n      );\n    },\n  });\n}\n", "import {\n  createSignal,\n  createEffect,\n  onCleanup,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureChildProps,\n  useHeadlessDisclosureProperties,\n  createHeadlessDisclosureChildProps,\n} from '../../headless/disclosure';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  createRef,\n  DynamicNode,\n  DynamicProps,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  createDisabled,\n  createExpanded,\n} from '../../utils/state-props';\nimport {\n  useContextMenuContext,\n} from './ContextMenuContext';\nimport { CONTEXT_MENU_BOUNDARY_TAG } from './tags';\n\nexport type ContextMenuBoundaryProps<T extends ValidConstructor = 'div'> =\n  HeadlessPropsWithRef<T, HeadlessDisclosureChildProps>;\n\nexport function ContextMenuBoundary<T extends ValidConstructor = 'div'>(\n  props: ContextMenuBoundaryProps<T>,\n): JSX.Element {\n  const context = useContextMenuContext('ContextMenuBoundary');\n  const properties = useHeadlessDisclosureProperties();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      const toggle = (e: MouseEvent) => {\n        if (!properties.disabled()) {\n          e.preventDefault();\n          properties.setState(true);\n        }\n      };\n\n      ref.addEventListener('contextmenu', toggle);\n\n      onCleanup(() => {\n        ref.removeEventListener('contextmenu', toggle);\n      });\n    }\n  });\n\n  return createDynamic(\n    () => props.as ?? ('div' as T),\n    mergeProps(\n      omitProps(props, [\n        'as',\n        'children',\n        'ref',\n      ]),\n      CONTEXT_MENU_BOUNDARY_TAG,\n      {\n        id: context.boundaryID,\n        ref: createRef(props, (e) => {\n          setInternalRef(() => e);\n          if (e instanceof HTMLElement) {\n            context.anchor = e;\n          }\n        }),\n        get 'aria-controls'() {\n          return properties.isOpen() && context.panelID;\n        },\n      },\n      createDisabled(() => properties.disabled()),\n      createExpanded(() => properties.isOpen()),\n      createHeadlessDisclosureChildProps(props),\n    ) as DynamicProps<T>,\n  );\n}\n", "import {\n  createSignal,\n  createEffect,\n  onCleanup,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureChildProps,\n  useHeadlessDisclosureProperties,\n  createHeadlessDisclosureChildProps,\n} from '../../headless/disclosure';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  createRef,\n  DynamicNode,\n  DynamicProps,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  useContextMenuContext,\n} from './ContextMenuContext';\nimport { CONTEXT_MENU_OVERLAY_TAG } from './tags';\n\nexport type ContextMenuOverlayProps<T extends ValidConstructor = 'div'> =\n  HeadlessPropsWithRef<T, HeadlessDisclosureChildProps>;\n\nexport function ContextMenuOverlay<T extends ValidConstructor = 'div'>(\n  props: ContextMenuOverlayProps<T>,\n): JSX.Element {\n  useContextMenuContext('ContextMenuOverlay');\n  const properties = useHeadlessDisclosureProperties();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      const onClick = () => {\n        properties.setState(false);\n      };\n\n      ref.addEventListener('click', onClick);\n\n      onCleanup(() => {\n        ref.removeEventListener('click', onClick);\n      });\n    }\n  });\n\n  return createDynamic(\n    () => props.as ?? ('div' as T),\n    mergeProps(\n      omitProps(props, [\n        'as',\n        'children',\n        'ref',\n      ]),\n      CONTEXT_MENU_OVERLAY_TAG,\n      {\n        ref: createRef(props, (e) => {\n          setInternalRef(() => e);\n        }),\n      },\n      createHeadlessDisclosureChildProps(props),\n    ) as DynamicProps<T>,\n  );\n}\n", "import {\n  createSignal,\n  createEffect,\n  onCleanup,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureChildProps,\n  useHeadlessDisclosureProperties,\n  createHeadlessDisclosureChildProps,\n} from '../../headless/disclosure';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  createRef,\n  DynamicNode,\n  DynamicProps,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport { focusFirst, lockFocus } from '../../utils/focus-navigation';\nimport getFocusableElements from '../../utils/focus-query';\nimport {\n  createUnmountable,\n  UnmountableProps,\n} from '../../utils/Unmountable';\nimport {\n  useContextMenuContext,\n} from './ContextMenuContext';\nimport { CONTEXT_MENU_PANEL_TAG } from './tags';\n\nexport type ContextMenuPanelProps<T extends ValidConstructor = 'div'> =\n  HeadlessPropsWithRef<T, HeadlessDisclosureChildProps & UnmountableProps>;\n\nexport function ContextMenuPanel<T extends ValidConstructor = 'div'>(\n  props: ContextMenuPanelProps<T>,\n): JSX.Element {\n  const context = useContextMenuContext('ContextMenuPanel');\n  const properties = useHeadlessDisclosureProperties();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      if (properties.isOpen()) {\n        focusFirst(getFocusableElements(ref));\n\n        const onKeyDown = (e: KeyboardEvent) => {\n          if (!props.disabled) {\n            if (e.key === 'Tab') {\n              e.preventDefault();\n\n              lockFocus(ref, e.shiftKey);\n            } else if (e.key === 'Escape') {\n              properties.setState(false);\n            }\n          }\n        };\n\n        const onClickOutside = (e: FocusEvent) => {\n          if (!ref.contains(e.target as Node)) {\n            properties.setState(false);\n          }\n        };\n\n        ref.addEventListener('keydown', onKeyDown);\n        document.addEventListener('click', onClickOutside);\n        onCleanup(() => {\n          ref.removeEventListener('keydown', onKeyDown);\n          document.removeEventListener('click', onClickOutside);\n        });\n      }\n    }\n  });\n\n  return createUnmountable(\n    props,\n    () => properties.isOpen(),\n    () => createDynamic(\n      () => props.as ?? ('div' as T),\n      mergeProps(\n        omitProps(props, [\n          'as',\n          'unmount',\n          'children',\n          'ref',\n        ]),\n        CONTEXT_MENU_PANEL_TAG,\n        {\n          id: context.panelID,\n          ref: createRef(props, (e) => {\n            setInternalRef(() => e);\n          }),\n        },\n        createHeadlessDisclosureChildProps(props),\n      ) as DynamicProps<T>,\n    ),\n  );\n}\n", "import {\n  createComponent,\n  JSX,\n} from 'solid-js';\nimport {\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  DialogControlled,\n  DialogControlledProps,\n} from './DialogControlled';\nimport {\n  DialogUncontrolled,\n  DialogUncontrolledProps,\n} from './DialogUncontrolled';\n\nexport type DialogProps<T extends ValidConstructor = 'div'> =\n  | DialogControlledProps<T>\n  | DialogUncontrolledProps<T>;\n\nfunction isDialogUncontrolled<T extends ValidConstructor = 'div'>(\n  props: DialogProps<T>,\n): props is DialogUncontrolledProps<T> {\n  return 'defaultOpen' in props;\n}\n\nexport function Dialog<T extends ValidConstructor = 'div'>(\n  props: DialogProps<T>,\n): JSX.Element {\n  if (isDialogUncontrolled(props)) {\n    return createComponent(DialogUncontrolled, props);\n  }\n  return createComponent(DialogControlled, props);\n}\n", "import {\n  createUniqueId,\n  JSX,\n  mergeProps,\n  createComponent,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureRoot,\n  HeadlessDisclosureControlledOptions,\n  createHeadlessDisclosureChildProps,\n} from '../../headless/disclosure';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  ValidConstructor,\n  HeadlessProps,\n  DynamicProps,\n} from '../../utils/dynamic-prop';\nimport {\n  createUnmountable,\n} from '../../utils/Unmountable';\nimport useFocusStartPoint from '../../utils/use-focus-start-point';\nimport {\n  DialogContext,\n} from './DialogContext';\nimport { DIALOG_TAG } from './tags';\nimport {\n  DialogBaseProps,\n} from './types';\n\ntype DialogControlledBaseProps =\n  & DialogBaseProps\n  & HeadlessDisclosureControlledOptions;\n\nexport type DialogControlledProps<T extends ValidConstructor = 'div'> =\n  HeadlessProps<T, DialogControlledBaseProps>;\n\nexport function DialogControlled<T extends ValidConstructor = 'div'>(\n  props: DialogControlledProps<T>,\n): JSX.Element {\n  const ownerID = createUniqueId();\n  const panelID = createUniqueId();\n  const titleID = createUniqueId();\n  const descriptionID = createUniqueId();\n\n  const fsp = useFocusStartPoint();\n\n  return createComponent(DialogContext.Provider, {\n    value: {\n      ownerID,\n      panelID,\n      titleID,\n      descriptionID,\n    },\n    get children() {\n      return createComponent(HeadlessDisclosureRoot, {\n        get isOpen() {\n          return props.isOpen;\n        },\n        get disabled() {\n          return props.disabled;\n        },\n        onChange(value) {\n          if (value) {\n            fsp.save();\n            props.onOpen?.();\n          }\n          props.onChange?.(value);\n          if (!value) {\n            props.onClose?.();\n            fsp.load();\n          }\n        },\n        children: ({ isOpen }) => createUnmountable(\n          props,\n          isOpen,\n          () => createDynamic(\n            () => props.as ?? ('div' as T),\n            mergeProps(\n              omitProps(props, [\n                'as',\n                'children',\n                'unmount',\n                'isOpen',\n                'disabled',\n                'onOpen',\n                'onClose',\n                'onChange',\n              ]),\n              DIALOG_TAG,\n              {\n                id: ownerID,\n                role: 'dialog',\n                'aria-modal': true,\n                'aria-labelledby': titleID,\n                'aria-describedby': descriptionID,\n              },\n              createHeadlessDisclosureChildProps(props),\n            ) as DynamicProps<T>,\n          ),\n        ),\n      });\n    },\n  });\n}\n", "import {\n  createContext,\n  useContext,\n} from 'solid-js';\n\ninterface DialogContext {\n  ownerID: string;\n  panelID: string;\n  titleID: string;\n  descriptionID: string;\n}\n\nexport const DialogContext = createContext<DialogContext>();\n\nexport function useDialogContext(componentName: string): DialogContext {\n  const context = useContext(DialogContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <Dialog>`);\n}\n", "import { createTag } from '../../utils/namespace';\n\nexport const DIALOG_TAG = createTag('dialog');\nexport const DIALOG_DESCRIPTION_TAG = createTag('dialog-description');\nexport const DIALOG_OVERLAY_TAG = createTag('dialog-overlay');\nexport const DIALOG_PANEL_TAG = createTag('dialog-panel');\nexport const DIALOG_TITLE_TAG = createTag('dialog-title');\n", "import {\n  createUniqueId,\n  JSX,\n  mergeProps,\n  createComponent,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  createHeadlessDisclosureChildProps,\n  HeadlessDisclosureRoot,\n  HeadlessDisclosureUncontrolledOptions,\n} from '../../headless/disclosure';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  ValidConstructor,\n  HeadlessProps,\n  DynamicProps,\n} from '../../utils/dynamic-prop';\nimport {\n  createUnmountable,\n} from '../../utils/Unmountable';\nimport useFocusStartPoint from '../../utils/use-focus-start-point';\nimport {\n  DialogContext,\n} from './DialogContext';\nimport { DIALOG_TAG } from './tags';\nimport {\n  DialogBaseProps,\n} from './types';\n\ntype DialogUncontrolledBaseProps =\n  & DialogBaseProps\n  & HeadlessDisclosureUncontrolledOptions;\n\nexport type DialogUncontrolledProps<T extends ValidConstructor = 'div'> =\n  HeadlessProps<T, DialogUncontrolledBaseProps>;\n\nexport function DialogUncontrolled<T extends ValidConstructor = 'div'>(\n  props: DialogUncontrolledProps<T>,\n): JSX.Element {\n  const ownerID = createUniqueId();\n  const panelID = createUniqueId();\n  const titleID = createUniqueId();\n  const descriptionID = createUniqueId();\n\n  const fsp = useFocusStartPoint();\n\n  return createComponent(DialogContext.Provider, {\n    value: {\n      ownerID,\n      panelID,\n      titleID,\n      descriptionID,\n    },\n    get children() {\n      return createComponent(HeadlessDisclosureRoot, {\n        get defaultOpen() {\n          return props.defaultOpen;\n        },\n        get disabled() {\n          return props.disabled;\n        },\n        onChange(value) {\n          if (value) {\n            fsp.save();\n            props.onOpen?.();\n          }\n          props.onChange?.(value);\n          if (!value) {\n            props.onClose?.();\n            fsp.load();\n          }\n        },\n        children: ({ isOpen }) => createUnmountable(\n          props,\n          isOpen,\n          () => createDynamic(\n            () => props.as ?? ('div' as T),\n            mergeProps(\n              omitProps(props, [\n                'as',\n                'children',\n                'unmount',\n                'defaultOpen',\n                'disabled',\n                'onOpen',\n                'onClose',\n                'onChange',\n              ]),\n              DIALOG_TAG,\n              {\n                id: ownerID,\n                role: 'dialog',\n                'aria-modal': true,\n                'aria-labelledby': titleID,\n                'aria-describedby': descriptionID,\n              },\n              createHeadlessDisclosureChildProps(props),\n            ) as DynamicProps<T>,\n          ),\n        ),\n      });\n    },\n  });\n}\n", "import {\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureChildProps,\n  createHeadlessDisclosureChildProps,\n} from '../../headless/disclosure';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  DynamicProps,\n  HeadlessProps,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  useDialogContext,\n} from './DialogContext';\nimport { DIALOG_DESCRIPTION_TAG } from './tags';\n\nexport type DialogDescriptionProps<T extends ValidConstructor = 'p'> =\n  HeadlessProps<T, HeadlessDisclosureChildProps>;\n\nexport function DialogDescription<T extends ValidConstructor = 'p'>(\n  props: DialogDescriptionProps<T>,\n): JSX.Element {\n  const context = useDialogContext('DialogDescription');\n  return createDynamic(\n    () => props.as ?? ('p' as T),\n    mergeProps(\n      omitProps(props, [\n        'as',\n        'children',\n      ]),\n      DIALOG_DESCRIPTION_TAG,\n      {\n        id: context.descriptionID,\n      },\n      createHeadlessDisclosureChildProps(props),\n    ) as DynamicProps<T>,\n  );\n}\n", "import {\n  createSignal,\n  createEffect,\n  onCleanup,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureChildProps,\n  useHeadlessDisclosureProperties,\n  createHeadlessDisclosureChildProps,\n} from '../../headless/disclosure';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  createRef,\n  DynamicNode,\n  DynamicProps,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  useDialogContext,\n} from './DialogContext';\nimport { DIALOG_OVERLAY_TAG } from './tags';\n\nexport type DialogOverlayProps<T extends ValidConstructor = 'div'> =\n  HeadlessPropsWithRef<T, HeadlessDisclosureChildProps>;\n\nexport function DialogOverlay<T extends ValidConstructor = 'div'>(\n  props: DialogOverlayProps<T>,\n): JSX.Element {\n  useDialogContext('DialogOverlay');\n  const properties = useHeadlessDisclosureProperties();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n\n    if (ref instanceof HTMLElement) {\n      const onClick = () => {\n        properties.setState(false);\n      };\n\n      ref.addEventListener('click', onClick);\n\n      onCleanup(() => {\n        ref.removeEventListener('click', onClick);\n      });\n    }\n  });\n\n  return createDynamic(\n    () => props.as ?? ('div' as T),\n    mergeProps(\n      omitProps(props, [\n        'as',\n        'children',\n        'ref',\n      ]),\n      DIALOG_OVERLAY_TAG,\n      {\n        ref: createRef(props, (e) => {\n          setInternalRef(() => e);\n        }),\n      },\n      createHeadlessDisclosureChildProps(props),\n    ) as DynamicProps<T>,\n  );\n}\n", "import {\n  createSignal,\n  createEffect,\n  onCleanup,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureChildProps,\n  useHeadlessDisclosureProperties,\n  createHeadlessDisclosureChildProps,\n} from '../../headless/disclosure';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  createRef,\n  DynamicNode,\n  DynamicProps,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport { focusFirst, lockFocus } from '../../utils/focus-navigation';\nimport getFocusableElements from '../../utils/focus-query';\nimport {\n  useDialogContext,\n} from './DialogContext';\nimport { DIALOG_PANEL_TAG } from './tags';\n\nexport type DialogPanelProps<T extends ValidConstructor = 'div'> =\n  HeadlessPropsWithRef<T, HeadlessDisclosureChildProps>;\n\nexport function DialogPanel<T extends ValidConstructor = 'div'>(\n  props: DialogPanelProps<T>,\n): JSX.Element {\n  const context = useDialogContext('DialogPanel');\n  const properties = useHeadlessDisclosureProperties();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      if (properties.isOpen()) {\n        focusFirst(getFocusableElements(ref));\n\n        const onKeyDown = (e: KeyboardEvent) => {\n          if (!props.disabled) {\n            if (e.key === 'Tab') {\n              e.preventDefault();\n\n              lockFocus(ref, e.shiftKey);\n            } else if (e.key === 'Escape') {\n              properties.setState(false);\n            }\n          }\n        };\n\n        ref.addEventListener('keydown', onKeyDown);\n        onCleanup(() => {\n          ref.removeEventListener('keydown', onKeyDown);\n        });\n      }\n    }\n  });\n\n  return createDynamic(\n    () => props.as ?? ('div' as T),\n    mergeProps(\n      omitProps(props, [\n        'as',\n        'children',\n        'ref',\n      ]),\n      DIALOG_PANEL_TAG,\n      {\n        id: context.panelID,\n        ref: createRef(props, (e) => {\n          setInternalRef(() => e);\n        }),\n      },\n      createHeadlessDisclosureChildProps(props),\n    ) as DynamicProps<T>,\n  );\n}\n", "import {\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureChildProps,\n  createHeadlessDisclosureChildProps,\n} from '../../headless/disclosure';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  DynamicComponent,\n  DynamicProps,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  OmitAndMerge,\n} from '../../utils/types';\nimport {\n  useDialogContext,\n} from './DialogContext';\nimport { DIALOG_TITLE_TAG } from './tags';\n\nexport type DialogTitleProps<T extends ValidConstructor = 'h2'> =\n  OmitAndMerge<DynamicComponent<T> & HeadlessDisclosureChildProps, DynamicProps<T>>;\n\nexport function DialogTitle<T extends ValidConstructor = 'h2'>(\n  props: DialogTitleProps<T>,\n): JSX.Element {\n  const context = useDialogContext('DialogTitle');\n  return createDynamic(\n    () => props.as ?? ('h2' as T),\n    mergeProps(\n      omitProps(props, [\n        'as',\n        'children',\n      ]),\n      DIALOG_TITLE_TAG,\n      {\n        id: context.titleID,\n      },\n      createHeadlessDisclosureChildProps(props),\n    ) as DynamicProps<T>,\n  );\n}\n", "import {\n  createComponent,\n  JSX,\n} from 'solid-js';\nimport {\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  DisclosureControlled,\n  DisclosureControlledProps,\n} from './DisclosureControlled';\nimport {\n  DisclosureUncontrolled,\n  DisclosureUncontrolledProps,\n} from './DisclosureUncontrolled';\n\nexport type DisclosureProps<T extends ValidConstructor = 'div'> =\n  | DisclosureControlledProps<T>\n  | DisclosureUncontrolledProps<T>;\n\nfunction isDisclosureUncontrolled<T extends ValidConstructor = 'div'>(\n  props: DisclosureProps<T>,\n): props is DisclosureUncontrolledProps<T> {\n  return 'defaultOpen' in props;\n}\n\nexport function Disclosure<T extends ValidConstructor = 'div'>(\n  props: DisclosureProps<T>,\n): JSX.Element {\n  if (isDisclosureUncontrolled(props)) {\n    return createComponent(DisclosureUncontrolled, props);\n  }\n  return createComponent(DisclosureControlled, props);\n}\n", "import {\n  createComponent,\n  createUniqueId,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureRoot,\n  HeadlessDisclosureRootChildren,\n  HeadlessDisclosureRootProps,\n  HeadlessDisclosureControlledOptions,\n} from '../../headless/disclosure';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  DynamicProps,\n  HeadlessProps,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport Fragment from '../../utils/Fragment';\nimport {\n  createDisabled,\n} from '../../utils/state-props';\nimport {\n  DisclosureContext,\n} from './DisclosureContext';\nimport { DISCLOSURE_TAG } from './tags';\n\ntype DisclosureControlledBaseProps =\n  & HeadlessDisclosureControlledOptions\n  & HeadlessDisclosureRootChildren;\n\nexport type DisclosureControlledProps<T extends ValidConstructor = typeof Fragment> =\n  HeadlessProps<T, DisclosureControlledBaseProps>;\n\nexport function DisclosureControlled<T extends ValidConstructor = typeof Fragment>(\n  props: DisclosureControlledProps<T>,\n): JSX.Element {\n  const ownerID = createUniqueId();\n  const buttonID = createUniqueId();\n  const panelID = createUniqueId();\n\n  return createComponent(DisclosureContext.Provider, {\n    value: {\n      ownerID,\n      buttonID,\n      panelID,\n    },\n    get children() {\n      return createDynamic(\n        () => props.as ?? (Fragment as T),\n        mergeProps(\n          omitProps(props, [\n            'isOpen',\n            'as',\n            'children',\n            'disabled',\n            'onChange',\n          ]),\n          DISCLOSURE_TAG,\n          createDisabled(() => props.disabled),\n          {\n            get children() {\n              return createComponent(HeadlessDisclosureRoot, {\n                get isOpen() {\n                  return props.isOpen;\n                },\n                get disabled() {\n                  return props.disabled;\n                },\n                get children() {\n                  return props.children;\n                },\n                onChange: props.onChange,\n              } as HeadlessDisclosureRootProps);\n            },\n          },\n        ) as DynamicProps<T>,\n      );\n    },\n  });\n}\n", "import {\n  createContext,\n  useContext,\n} from 'solid-js';\n\ninterface DisclosureContext {\n  ownerID: string;\n  buttonID: string;\n  panelID: string;\n}\n\nexport const DisclosureContext = createContext<DisclosureContext>();\n\nexport function useDisclosureContext(componentName: string): DisclosureContext {\n  const context = useContext(DisclosureContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <Disclosure>`);\n}\n", "import { createTag } from '../../utils/namespace';\n\nexport const DISCLOSURE_TAG = createTag('disclosure');\nexport const DISCLOSURE_BUTTON_TAG = createTag('disclosure-button');\nexport const DISCLOSURE_PANEL_TAG = createTag('disclosure-panel');\n", "import {\n  createComponent,\n  createUniqueId,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureRoot,\n  HeadlessDisclosureRootChildren,\n  HeadlessDisclosureRootProps,\n  HeadlessDisclosureUncontrolledOptions,\n} from '../../headless/disclosure';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  DynamicProps,\n  HeadlessProps,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport Fragment from '../../utils/Fragment';\nimport {\n  createDisabled,\n} from '../../utils/state-props';\nimport {\n  DisclosureContext,\n} from './DisclosureContext';\nimport { DISCLOSURE_TAG } from './tags';\n\ntype DisclosureUncontrolledBaseProps =\n  & HeadlessDisclosureUncontrolledOptions\n  & HeadlessDisclosureRootChildren;\n\nexport type DisclosureUncontrolledProps<T extends ValidConstructor = typeof Fragment> =\n  HeadlessProps<T, DisclosureUncontrolledBaseProps>;\n\nexport function DisclosureUncontrolled<T extends ValidConstructor = typeof Fragment>(\n  props: DisclosureUncontrolledProps<T>,\n): JSX.Element {\n  const ownerID = createUniqueId();\n  const buttonID = createUniqueId();\n  const panelID = createUniqueId();\n\n  return createComponent(DisclosureContext.Provider, {\n    value: {\n      ownerID,\n      buttonID,\n      panelID,\n    },\n    get children() {\n      return createDynamic(\n        () => props.as ?? (Fragment as T),\n        mergeProps(\n          omitProps(props, [\n            'defaultOpen',\n            'as',\n            'children',\n            'disabled',\n            'onChange',\n          ]),\n          DISCLOSURE_TAG,\n          createDisabled(() => props.disabled),\n          {\n            get children() {\n              return createComponent(HeadlessDisclosureRoot, {\n                get defaultOpen() {\n                  return props.defaultOpen;\n                },\n                get disabled() {\n                  return props.disabled;\n                },\n                get children() {\n                  return props.children;\n                },\n                onChange: props.onChange,\n              } as HeadlessDisclosureRootProps);\n            },\n          },\n        ) as DynamicProps<T>,\n      );\n    },\n  });\n}\n", "import {\n  createSignal,\n  createEffect,\n  onCleanup,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  createComponent,\n} from 'solid-js/web';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureChildProps,\n  useHeadlessDisclosureProperties,\n  createHeadlessDisclosureChildProps,\n} from '../../headless/disclosure';\nimport {\n  createRef,\n  DynamicNode,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  createDisabled,\n  createExpanded,\n} from '../../utils/state-props';\nimport { OmitAndMerge } from '../../utils/types';\nimport {\n  ButtonProps,\n  Button,\n} from '../button';\nimport {\n  useDisclosureContext,\n} from './DisclosureContext';\nimport { DISCLOSURE_BUTTON_TAG } from './tags';\n\nexport type DisclosureButtonProps<T extends ValidConstructor = 'button'> =\n  HeadlessPropsWithRef<T, OmitAndMerge<HeadlessDisclosureChildProps, ButtonProps<T>>>;\n\nexport function DisclosureButton<T extends ValidConstructor = 'button'>(\n  props: DisclosureButtonProps<T>,\n): JSX.Element {\n  const context = useDisclosureContext('DisclosureButton');\n  const properties = useHeadlessDisclosureProperties();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n\n    if (ref instanceof HTMLElement) {\n      const toggle = () => {\n        if (!(properties.disabled() || props.disabled)) {\n          properties.setState(!properties.isOpen());\n        }\n      };\n\n      ref.addEventListener('click', toggle);\n\n      onCleanup(() => {\n        ref.removeEventListener('click', toggle);\n      });\n    }\n  });\n\n  return createComponent(Button, mergeProps(\n    omitProps(props, [\n      'children',\n      'ref',\n    ]),\n    DISCLOSURE_BUTTON_TAG,\n    {\n      id: context.buttonID,\n      ref: createRef(props, (e) => {\n        setInternalRef(() => e);\n      }),\n      get 'aria-controls'() {\n        return properties.isOpen() && context.panelID;\n      },\n    },\n    createDisabled(() => {\n      const internalDisabled = properties.disabled();\n      const granularDisabled = props.disabled;\n      return internalDisabled || granularDisabled;\n    }),\n    createExpanded(() => properties.isOpen()),\n    createHeadlessDisclosureChildProps(props),\n  ) as ButtonProps<T>);\n}\n", "import {\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureChildProps,\n  useHeadlessDisclosureProperties,\n  createHeadlessDisclosureChildProps,\n} from '../../headless/disclosure';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  DynamicProps,\n  HeadlessProps,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  createUnmountable,\n  UnmountableProps,\n} from '../../utils/Unmountable';\nimport {\n  useDisclosureContext,\n} from './DisclosureContext';\nimport { DISCLOSURE_PANEL_TAG } from './tags';\n\nexport type DisclosurePanelProps<T extends ValidConstructor = 'div'> =\n  HeadlessProps<T, HeadlessDisclosureChildProps & UnmountableProps>;\n\nexport function DisclosurePanel<T extends ValidConstructor = 'div'>(\n  props: DisclosurePanelProps<T>,\n): JSX.Element {\n  const context = useDisclosureContext('DisclosurePanel');\n  const properties = useHeadlessDisclosureProperties();\n\n  return createUnmountable(\n    props,\n    () => properties.isOpen(),\n    () => createDynamic(\n      () => props.as ?? ('div' as T),\n      mergeProps(\n        omitProps(props, [\n          'as',\n          'unmount',\n          'children',\n        ]),\n        DISCLOSURE_PANEL_TAG,\n        {\n          id: context.panelID,\n        },\n        createHeadlessDisclosureChildProps(props),\n      ) as DynamicProps<T>,\n    ),\n  );\n}\n", "import {\n  createComponent,\n  createUniqueId,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  createRef,\n  DynamicNode,\n  DynamicProps,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport { focusNext, focusPrev } from '../../utils/focus-navigation';\nimport getFocusableElements from '../../utils/focus-query';\nimport {\n  FeedContext,\n} from './FeedContext';\nimport { FEED_TAG } from './tags';\n\ninterface FeedBaseProps {\n  size: number;\n  busy?: boolean;\n}\n\nexport type FeedProps<T extends ValidConstructor = 'div'> =\n  HeadlessPropsWithRef<T, FeedBaseProps>;\n\nexport function Feed<T extends ValidConstructor = 'div'>(\n  props: FeedProps<T>,\n): JSX.Element {\n  const ownerID = createUniqueId();\n  const labelID = createUniqueId();\n  const contentID = createUniqueId();\n\n  let internalRef: DynamicNode<T>;\n\n  return createComponent(FeedContext.Provider, {\n    value: {\n      ownerID,\n      labelID,\n      contentID,\n      get size() {\n        return props.size;\n      },\n      get busy() {\n        return !!props.busy;\n      },\n      focusNext() {\n        focusNext(\n          getFocusableElements(document.documentElement),\n          internalRef,\n        );\n      },\n      focusPrev() {\n        focusPrev(\n          getFocusableElements(document.documentElement),\n          internalRef,\n        );\n      },\n    },\n    get children() {\n      return createDynamic(\n        () => props.as ?? ('div' as T),\n        mergeProps(\n          omitProps(props, [\n            'as',\n            'busy',\n            'size',\n          ]),\n          FEED_TAG,\n          {\n            id: ownerID,\n            ref: createRef(props, (e) => {\n              internalRef = e;\n            }),\n          },\n        ) as DynamicProps<T>,\n      );\n    },\n  });\n}\n", "import {\n  createContext,\n  useContext,\n} from 'solid-js';\n\ninterface FeedContext {\n  ownerID: string;\n  labelID: string;\n  contentID: string;\n  size: number;\n  busy: boolean;\n  focusPrev: () => void;\n  focusNext: () => void;\n}\n\nexport const FeedContext = createContext<FeedContext>();\n\nexport function useFeedContext(componentName: string): FeedContext {\n  const context = useContext(FeedContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <Feed>`);\n}\n", "import { createTag } from '../../utils/namespace';\n\nexport const FEED_TAG = createTag('feed');\nexport const FEED_ARTICLE_TAG = createTag('feed-article');\nexport const FEED_ARTICLE_DESCRIPTION_TAG = createTag('feed-article-description');\nexport const FEED_ARTICLE_LABEL_TAG = createTag('feed-article-label');\nexport const FEED_CONTENT_TAG = createTag('feed-content');\nexport const FEED_LABEL_TAG = createTag('feed-label');\n", "import {\n  createComponent,\n  createEffect,\n  createSignal,\n  createUniqueId,\n  JSX,\n  mergeProps,\n  onCleanup,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  createRef,\n  DynamicNode,\n  DynamicProps,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport { createOwnerAttribute } from '../../utils/focus-navigator';\nimport {\n  FeedArticleContext,\n} from './FeedArticleContext';\nimport {\n  useFeedContentContext,\n} from './FeedContentContext';\nimport {\n  useFeedContext,\n} from './FeedContext';\nimport { FEED_ARTICLE_TAG } from './tags';\n\nexport type FeedArticleProps<T extends ValidConstructor = 'article'> =\n  HeadlessPropsWithRef<T, { index: number }>;\n\nexport function FeedArticle<T extends ValidConstructor = 'article'>(\n  props: FeedArticleProps<T>,\n): JSX.Element {\n  const rootContext = useFeedContext('FeedArticle');\n  const contentContext = useFeedContentContext('FeedArticle');\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      const onKeyDown = (e: KeyboardEvent) => {\n        switch (e.key) {\n          case 'PageUp':\n            contentContext.setPrevChecked(ref);\n            break;\n          case 'PageDown':\n            contentContext.setNextChecked(ref);\n            break;\n          default:\n            break;\n        }\n      };\n\n      ref.addEventListener('keydown', onKeyDown);\n      onCleanup(() => {\n        ref.removeEventListener('keydown', onKeyDown);\n      });\n    }\n  });\n\n  const ownerID = createUniqueId();\n  const labelID = createUniqueId();\n  const descriptionID = createUniqueId();\n\n  return createComponent(FeedArticleContext.Provider, {\n    value: {\n      ownerID,\n      labelID,\n      descriptionID,\n    },\n    get children() {\n      return createDynamic(\n        () => props.as ?? ('article' as T),\n        mergeProps(\n          omitProps(props, ['as']),\n          FEED_ARTICLE_TAG,\n          createOwnerAttribute(rootContext.ownerID),\n          {\n            id: ownerID,\n            'aria-labelledby': labelID,\n            'aria-describedby': descriptionID,\n            tabindex: 0,\n            get 'aria-posinset'() {\n              return props.index + 1;\n            },\n            get 'aria-setsize'() {\n              return rootContext.size;\n            },\n            ref: createRef<T>(props, (e) => {\n              setInternalRef(() => e);\n            }),\n          },\n        ) as DynamicProps<T>,\n      );\n    },\n  });\n}\n", "import {\n  createContext,\n  useContext,\n} from 'solid-js';\n\ninterface FeedArticleContext {\n  ownerID: string;\n  labelID: string;\n  descriptionID: string;\n}\n\nexport const FeedArticleContext = createContext<FeedArticleContext>();\n\nexport function useFeedArticleContext(componentName: string): FeedArticleContext {\n  const context = useContext(FeedArticleContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <FeedArticle>`);\n}\n", "import {\n  createContext,\n  useContext,\n} from 'solid-js';\nimport { ValidConstructor } from '../../utils/dynamic-prop';\nimport FocusNavigator from '../../utils/focus-navigator';\n\nexport const FeedContentContext = createContext<FocusNavigator<any>>();\n\nexport function useFeedContentContext<T extends ValidConstructor>(\n  componentName: string,\n): FocusNavigator<T> {\n  const context = useContext(FeedContentContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <FeedContent>`);\n}\n\nexport function createFeedArticleFocusNavigator<T extends ValidConstructor>(\n  owner: string,\n): FocusNavigator<T> {\n  return new FocusNavigator(owner);\n}\n", "import {\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  DynamicProps,\n  HeadlessProps,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  useFeedArticleContext,\n} from './FeedArticleContext';\nimport { FEED_ARTICLE_DESCRIPTION_TAG } from './tags';\n\nexport type FeedArticleDescriptionProps<T extends ValidConstructor = 'p'> = HeadlessProps<T>;\n\nexport function FeedArticleDescription<T extends ValidConstructor = 'p'>(\n  props: FeedArticleDescriptionProps<T>,\n): JSX.Element {\n  const context = useFeedArticleContext('FeedArticleDescription');\n  return createDynamic(\n    () => props.as ?? ('p' as T),\n    mergeProps(\n      omitProps(props, ['as']),\n      FEED_ARTICLE_DESCRIPTION_TAG,\n      {\n        id: context.descriptionID,\n      },\n    ) as DynamicProps<T>,\n  );\n}\n", "import {\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  DynamicProps,\n  HeadlessProps,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  useFeedArticleContext,\n} from './FeedArticleContext';\nimport { FEED_ARTICLE_LABEL_TAG } from './tags';\n\nexport type FeedArticleLabelProps<T extends ValidConstructor = 'span'> = HeadlessProps<T>;\n\nexport function FeedArticleLabel<T extends ValidConstructor = 'span'>(\n  props: FeedArticleLabelProps<T>,\n): JSX.Element {\n  const context = useFeedArticleContext('FeedArticleLabel');\n  return createDynamic(\n    () => props.as ?? ('span' as T),\n    mergeProps(\n      omitProps(props, ['as']),\n      FEED_ARTICLE_LABEL_TAG,\n      {\n        id: context.labelID,\n      },\n    ) as DynamicProps<T>,\n  );\n}\n", "import {\n  createSignal,\n  createEffect,\n  onCleanup,\n  JSX,\n  createComponent,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  createRef,\n  DynamicNode,\n  DynamicProps,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  createFeedArticleFocusNavigator,\n  FeedContentContext,\n} from './FeedContentContext';\nimport {\n  useFeedContext,\n} from './FeedContext';\nimport { FEED_CONTENT_TAG } from './tags';\n\nexport type FeedContentProps<T extends ValidConstructor = 'div'> = HeadlessPropsWithRef<T>;\n\nexport function FeedContent<T extends ValidConstructor = 'div'>(\n  props: FeedContentProps<T>,\n): JSX.Element {\n  const context = useFeedContext('FeedContent');\n  const controller = createFeedArticleFocusNavigator(context.ownerID);\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      const onKeyDown = (e: KeyboardEvent) => {\n        if (e.ctrlKey) {\n          switch (e.key) {\n            case 'Home':\n              context.focusPrev();\n              break;\n            case 'End':\n              context.focusNext();\n              break;\n            default:\n              break;\n          }\n        }\n      };\n\n      ref.addEventListener('keydown', onKeyDown);\n      onCleanup(() => {\n        ref.removeEventListener('keydown', onKeyDown);\n      });\n    }\n  });\n\n  return createComponent(FeedContentContext.Provider, {\n    value: controller,\n    get children() {\n      return createDynamic(\n        () => props.as ?? ('div' as T),\n        mergeProps(\n          omitProps(props, ['as']),\n          FEED_CONTENT_TAG,\n          {\n            id: context.contentID,\n            role: 'feed',\n            'aria-labelledby': context.labelID,\n            get 'aria-busy'() {\n              return context.busy;\n            },\n            ref: createRef<T>(props, (e) => {\n              setInternalRef(() => e);\n              controller.setRef(e);\n            }),\n          },\n        ) as DynamicProps<T>,\n      );\n    },\n  });\n}\n", "import {\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  DynamicProps,\n  HeadlessProps,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  useFeedContext,\n} from './FeedContext';\nimport { FEED_LABEL_TAG } from './tags';\n\nexport type FeedLabelProps<T extends ValidConstructor = 'span'> = HeadlessProps<T>;\n\nexport function FeedLabel<T extends ValidConstructor = 'span'>(\n  props: FeedLabelProps<T>,\n): JSX.Element {\n  const context = useFeedContext('FeedLabel');\n  return createDynamic(\n    () => props.as ?? ('span' as T),\n    mergeProps(\n      omitProps(props, ['as']),\n      FEED_LABEL_TAG,\n      {\n        id: context.labelID,\n      },\n    ) as DynamicProps<T>,\n  );\n}\n", "import {\n  createComponent,\n  JSX,\n} from 'solid-js';\nimport {\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport Fragment from '../../utils/Fragment';\nimport {\n  ListboxMCSCD,\n  ListboxMCSCDProps,\n} from './ListboxMCSCD';\nimport {\n  ListboxMCSUD,\n  ListboxMCSUDProps,\n} from './ListboxMCSUD';\nimport {\n  ListboxMUSCD,\n  ListboxMUSCDProps,\n} from './ListboxMUSCD';\nimport {\n  ListboxMUSUD,\n  ListboxMUSUDProps,\n} from './ListboxMUSUD';\nimport {\n  ListboxSCSCD,\n  ListboxSCSCDProps,\n} from './ListboxSCSCD';\nimport {\n  ListboxSCSUD,\n  ListboxSCSUDProps,\n} from './ListboxSCSUD';\nimport {\n  ListboxSUSCD,\n  ListboxSUSCDProps,\n} from './ListboxSUSCD';\nimport {\n  ListboxSUSUD,\n  ListboxSUSUDProps,\n} from './ListboxSUSUD';\n\nexport type ListboxMultipleProps<V, T extends ValidConstructor = typeof Fragment> =\n  | ListboxMCSCDProps<V, T>\n  | ListboxMCSUDProps<V, T>\n  | ListboxMUSCDProps<V, T>\n  | ListboxMUSUDProps<V, T>;\n\nexport type ListboxSingleProps<V, T extends ValidConstructor = typeof Fragment> =\n  | ListboxSCSCDProps<V, T>\n  | ListboxSCSUDProps<V, T>\n  | ListboxSUSCDProps<V, T>\n  | ListboxSUSUDProps<V, T>;\n\ntype ListboxSelectUncontrolledProps<V, T extends ValidConstructor = typeof Fragment> =\n  | ListboxMUSCDProps<V, T>\n  | ListboxMUSUDProps<V, T>\n  | ListboxSUSCDProps<V, T>\n  | ListboxSUSUDProps<V, T>;\n\ntype ListboxDisclosureUncontrolledProps<V, T extends ValidConstructor = typeof Fragment> =\n  | ListboxMCSUDProps<V, T>\n  | ListboxMUSUDProps<V, T>\n  | ListboxSCSUDProps<V, T>\n  | ListboxSUSUDProps<V, T>;\n\nexport type ListboxProps<V, T extends ValidConstructor = typeof Fragment> =\n  | ListboxMultipleProps<V, T>\n  | ListboxSingleProps<V, T>;\n\nfunction isListboxMultiple<V, T extends ValidConstructor = typeof Fragment>(\n  props: ListboxProps<V, T>,\n): props is ListboxMultipleProps<V, T> {\n  return 'multiple' in props && props.multiple;\n}\n\nfunction isListboxSelectUncontrolled<V, T extends ValidConstructor = typeof Fragment>(\n  props: ListboxProps<V, T>,\n): props is ListboxSelectUncontrolledProps<V, T> {\n  return 'defaultValue' in props;\n}\n\nfunction isListboxDisclosureUncontrolled<V, T extends ValidConstructor = typeof Fragment>(\n  props: ListboxProps<V, T>,\n): props is ListboxDisclosureUncontrolledProps<V, T> {\n  return 'defaultOpen' in props;\n}\n\nexport function Listbox<V, T extends ValidConstructor = typeof Fragment>(\n  props: ListboxProps<V, T>,\n): JSX.Element {\n  if (isListboxMultiple(props)) {\n    if (isListboxSelectUncontrolled(props)) {\n      if (isListboxDisclosureUncontrolled(props)) {\n        return createComponent(ListboxMUSUD, props);\n      }\n      return createComponent(ListboxMUSCD, props);\n    }\n    if (isListboxDisclosureUncontrolled(props)) {\n      return createComponent(ListboxMCSUD, props);\n    }\n    return createComponent(ListboxMCSCD, props);\n  }\n  if (isListboxSelectUncontrolled(props)) {\n    if (isListboxDisclosureUncontrolled(props)) {\n      return createComponent(ListboxSUSUD, props);\n    }\n    return createComponent(ListboxSUSCD, props);\n  }\n  if (isListboxDisclosureUncontrolled(props)) {\n    return createComponent(ListboxSCSUD, props);\n  }\n  return createComponent(ListboxSCSCD, props);\n}\n", "import {\n  createComponent,\n  createSignal,\n  createUniqueId,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureRoot,\n  HeadlessDisclosureControlledOptions,\n} from '../../headless/disclosure';\nimport {\n  HeadlessSelectRoot,\n  HeadlessSelectRootProps,\n  HeadlessSelectMultipleControlledOptions,\n} from '../../headless/select';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  DynamicProps,\n  HeadlessProps,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport Fragment from '../../utils/Fragment';\nimport {\n  createDisabled,\n} from '../../utils/state-props';\nimport useFocusStartPoint from '../../utils/use-focus-start-point';\nimport {\n  ListboxContext,\n} from './ListboxContext';\nimport { LISTBOX_TAG } from './tags';\nimport {\n  ListboxBaseProps,\n  ListboxMultipleBaseProps,\n} from './types';\n\n// MCSCD = Multiple, Controlled Select, Controlled Disclosure\n\ntype ListboxMCSCDBaseProps<V> =\n  & ListboxBaseProps\n  & ListboxMultipleBaseProps<V>\n  & Omit<HeadlessSelectMultipleControlledOptions<V>, 'onChange'>\n  & Omit<HeadlessDisclosureControlledOptions, 'onChange'>\n  & { children?: JSX.Element };\n\nexport type ListboxMCSCDProps<V, T extends ValidConstructor = typeof Fragment> =\n  HeadlessProps<T, ListboxMCSCDBaseProps<V>>;\n\nexport function ListboxMCSCD<V, T extends ValidConstructor = typeof Fragment>(\n  props: ListboxMCSCDProps<V, T>,\n): JSX.Element {\n  const [hovering, setHovering] = createSignal(false);\n  const ownerID = createUniqueId();\n  const labelID = createUniqueId();\n  const buttonID = createUniqueId();\n  const optionsID = createUniqueId();\n\n  const fsp = useFocusStartPoint();\n\n  return createComponent(ListboxContext.Provider, {\n    value: {\n      multiple: true,\n      ownerID,\n      labelID,\n      buttonID,\n      optionsID,\n      get horizontal() {\n        return props.horizontal;\n      },\n      get hovering() {\n        return hovering();\n      },\n      set hovering(value: boolean) {\n        setHovering(value);\n      },\n    },\n    get children() {\n      return createDynamic(\n        () => props.as ?? (Fragment as T),\n        mergeProps(\n          omitProps(props, [\n            'as',\n            'children',\n            'disabled',\n            'horizontal',\n            'isOpen',\n            'multiple',\n            'onDisclosureChange',\n            'onSelectChange',\n            'toggleable',\n            'value',\n          ]),\n          LISTBOX_TAG,\n          {\n            'aria-labelledby': labelID,\n          },\n          createDisabled(() => props.disabled),\n          {\n            get children() {\n              return createComponent(HeadlessSelectRoot, {\n                multiple: true,\n                onChange: props.onSelectChange,\n                get toggleable() {\n                  return props.toggleable;\n                },\n                get value() {\n                  return props.value;\n                },\n                get disabled() {\n                  return props.disabled;\n                },\n                get children() {\n                  return createComponent(HeadlessDisclosureRoot, {\n                    onChange(value) {\n                      if (value) {\n                        fsp.save();\n                      }\n                      props.onDisclosureChange?.(value);\n                      if (!value) {\n                        fsp.load();\n                      }\n                    },\n                    get isOpen() {\n                      return props.isOpen;\n                    },\n                    get disabled() {\n                      return props.disabled;\n                    },\n                    get children() {\n                      return props.children;\n                    },\n                  });\n                },\n              } as HeadlessSelectRootProps<V>);\n            },\n          },\n        ) as DynamicProps<T>,\n      );\n    },\n  });\n}\n", "import {\n  createContext,\n  useContext,\n} from 'solid-js';\n\ninterface ListboxContext {\n  horizontal?: boolean;\n  multiple?: boolean;\n  ownerID: string;\n  labelID: string;\n  buttonID: string;\n  optionsID: string;\n  hovering: boolean;\n  anchor?: HTMLElement | null;\n}\n\nexport const ListboxContext = createContext<ListboxContext>();\n\nexport function useListboxContext(componentName: string): ListboxContext {\n  const context = useContext(ListboxContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <Listbox>`);\n}\n", "import { createTag } from '../../utils/namespace';\n\nexport const LISTBOX_TAG = createTag('listbox');\nexport const LISTBOX_BUTTON_TAG = createTag('listbox-button');\nexport const LISTBOX_LABEL_TAG = createTag('listbox-label');\nexport const LISTBOX_OPTIONS_TAG = createTag('listbox-options');\nexport const LISTBOX_OPTION_TAG = createTag('listbox-option');\n", "import {\n  createComponent,\n  createSignal,\n  createUniqueId,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureRoot,\n  HeadlessDisclosureUncontrolledOptions,\n} from '../../headless/disclosure';\nimport {\n  HeadlessSelectRoot,\n  HeadlessSelectRootProps,\n  HeadlessSelectMultipleControlledOptions,\n} from '../../headless/select';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  DynamicProps,\n  HeadlessProps,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport Fragment from '../../utils/Fragment';\nimport {\n  createDisabled,\n} from '../../utils/state-props';\nimport useFocusStartPoint from '../../utils/use-focus-start-point';\nimport {\n  ListboxContext,\n} from './ListboxContext';\nimport { LISTBOX_TAG } from './tags';\nimport {\n  ListboxBaseProps,\n  ListboxMultipleBaseProps,\n} from './types';\n\n// MCSUD = Multiple, Controlled Select, Uncontrolled Disclosure\n\ntype ListboxMCSUDBaseProps<V> =\n  & ListboxBaseProps\n  & ListboxMultipleBaseProps<V>\n  & Omit<HeadlessSelectMultipleControlledOptions<V>, 'onChange'>\n  & Omit<HeadlessDisclosureUncontrolledOptions, 'onChange'>\n  & { children?: JSX.Element };\n\nexport type ListboxMCSUDProps<V, T extends ValidConstructor = typeof Fragment> =\n  HeadlessProps<T, ListboxMCSUDBaseProps<V>>;\n\nexport function ListboxMCSUD<V, T extends ValidConstructor = typeof Fragment>(\n  props: ListboxMCSUDProps<V, T>,\n): JSX.Element {\n  const [hovering, setHovering] = createSignal(false);\n  const ownerID = createUniqueId();\n  const labelID = createUniqueId();\n  const buttonID = createUniqueId();\n  const optionsID = createUniqueId();\n\n  const fsp = useFocusStartPoint();\n\n  return createComponent(ListboxContext.Provider, {\n    value: {\n      multiple: true,\n      ownerID,\n      labelID,\n      buttonID,\n      optionsID,\n      get horizontal() {\n        return props.horizontal;\n      },\n      get hovering() {\n        return hovering();\n      },\n      set hovering(value: boolean) {\n        setHovering(value);\n      },\n    },\n    get children() {\n      return createDynamic(\n        () => props.as ?? (Fragment as T),\n        mergeProps(\n          omitProps(props, [\n            'as',\n            'children',\n            'disabled',\n            'horizontal',\n            'defaultOpen',\n            'multiple',\n            'onDisclosureChange',\n            'onSelectChange',\n            'toggleable',\n            'value',\n          ]),\n          LISTBOX_TAG,\n          {\n            'aria-labelledby': labelID,\n          },\n          createDisabled(() => props.disabled),\n          {\n            get children() {\n              return createComponent(HeadlessSelectRoot, {\n                multiple: true,\n                onChange: props.onSelectChange,\n                get toggleable() {\n                  return props.toggleable;\n                },\n                get value() {\n                  return props.value;\n                },\n                get disabled() {\n                  return props.disabled;\n                },\n                get children() {\n                  return createComponent(HeadlessDisclosureRoot, {\n                    onChange(value) {\n                      if (value) {\n                        fsp.save();\n                      }\n                      props.onDisclosureChange?.(value);\n                      if (!value) {\n                        fsp.load();\n                      }\n                    },\n                    get defaultOpen() {\n                      return props.defaultOpen;\n                    },\n                    get disabled() {\n                      return props.disabled;\n                    },\n                    get children() {\n                      return props.children;\n                    },\n                  });\n                },\n              } as HeadlessSelectRootProps<V>);\n            },\n          },\n        ) as DynamicProps<T>,\n      );\n    },\n  });\n}\n", "import {\n  createComponent,\n  createSignal,\n  createUniqueId,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureRoot,\n  HeadlessDisclosureControlledOptions,\n} from '../../headless/disclosure';\nimport {\n  HeadlessSelectRoot,\n  HeadlessSelectRootProps,\n  HeadlessSelectMultipleUncontrolledOptions,\n} from '../../headless/select';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  DynamicProps,\n  HeadlessProps,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport Fragment from '../../utils/Fragment';\nimport {\n  createDisabled,\n} from '../../utils/state-props';\nimport useFocusStartPoint from '../../utils/use-focus-start-point';\nimport {\n  ListboxContext,\n} from './ListboxContext';\nimport { LISTBOX_TAG } from './tags';\nimport {\n  ListboxBaseProps,\n  ListboxMultipleBaseProps,\n} from './types';\n\n// MUSCD = Multiple, Uncontrolled Select, Controlled Disclosure\n\ntype ListboxMUSCDBaseProps<V> =\n  & ListboxBaseProps\n  & ListboxMultipleBaseProps<V>\n  & Omit<HeadlessSelectMultipleUncontrolledOptions<V>, 'onChange'>\n  & Omit<HeadlessDisclosureControlledOptions, 'onChange'>\n  & { children?: JSX.Element };\n\nexport type ListboxMUSCDProps<V, T extends ValidConstructor = typeof Fragment> =\n  HeadlessProps<T, ListboxMUSCDBaseProps<V>>;\n\nexport function ListboxMUSCD<V, T extends ValidConstructor = typeof Fragment>(\n  props: ListboxMUSCDProps<V, T>,\n): JSX.Element {\n  const [hovering, setHovering] = createSignal(false);\n  const ownerID = createUniqueId();\n  const labelID = createUniqueId();\n  const buttonID = createUniqueId();\n  const optionsID = createUniqueId();\n\n  const fsp = useFocusStartPoint();\n\n  return createComponent(ListboxContext.Provider, {\n    value: {\n      multiple: true,\n      ownerID,\n      labelID,\n      buttonID,\n      optionsID,\n      get horizontal() {\n        return props.horizontal;\n      },\n      get hovering() {\n        return hovering();\n      },\n      set hovering(value: boolean) {\n        setHovering(value);\n      },\n    },\n    get children() {\n      return createDynamic(\n        () => props.as ?? (Fragment as T),\n        mergeProps(\n          omitProps(props, [\n            'as',\n            'children',\n            'disabled',\n            'horizontal',\n            'isOpen',\n            'multiple',\n            'onDisclosureChange',\n            'onSelectChange',\n            'toggleable',\n            'defaultValue',\n          ]),\n          LISTBOX_TAG,\n          {\n            'aria-labelledby': labelID,\n          },\n          createDisabled(() => props.disabled),\n          {\n            get children() {\n              return createComponent(HeadlessSelectRoot, {\n                multiple: true,\n                onChange: props.onSelectChange,\n                get toggleable() {\n                  return props.toggleable;\n                },\n                get defaultValue() {\n                  return props.defaultValue;\n                },\n                get disabled() {\n                  return props.disabled;\n                },\n                get children() {\n                  return createComponent(HeadlessDisclosureRoot, {\n                    onChange(value) {\n                      if (value) {\n                        fsp.save();\n                      }\n                      props.onDisclosureChange?.(value);\n                      if (!value) {\n                        fsp.load();\n                      }\n                    },\n                    get isOpen() {\n                      return props.isOpen;\n                    },\n                    get disabled() {\n                      return props.disabled;\n                    },\n                    get children() {\n                      return props.children;\n                    },\n                  });\n                },\n              } as HeadlessSelectRootProps<V>);\n            },\n          },\n        ) as DynamicProps<T>,\n      );\n    },\n  });\n}\n", "import {\n  createComponent,\n  createSignal,\n  createUniqueId,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureRoot,\n  HeadlessDisclosureUncontrolledOptions,\n} from '../../headless/disclosure';\nimport {\n  HeadlessSelectRoot,\n  HeadlessSelectRootProps,\n  HeadlessSelectMultipleUncontrolledOptions,\n} from '../../headless/select';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  DynamicProps,\n  HeadlessProps,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport Fragment from '../../utils/Fragment';\nimport {\n  createDisabled,\n} from '../../utils/state-props';\nimport useFocusStartPoint from '../../utils/use-focus-start-point';\nimport {\n  ListboxContext,\n} from './ListboxContext';\nimport { LISTBOX_TAG } from './tags';\nimport {\n  ListboxBaseProps,\n  ListboxMultipleBaseProps,\n} from './types';\n\n// MUSUD = Multiple, Uncontrolled Select, Uncontrolled Disclosure\n\ntype ListboxMUSUDBaseProps<V> =\n  & ListboxBaseProps\n  & ListboxMultipleBaseProps<V>\n  & Omit<HeadlessSelectMultipleUncontrolledOptions<V>, 'onChange'>\n  & Omit<HeadlessDisclosureUncontrolledOptions, 'onChange'>\n  & { children?: JSX.Element };\n\nexport type ListboxMUSUDProps<V, T extends ValidConstructor = typeof Fragment> =\n  HeadlessProps<T, ListboxMUSUDBaseProps<V>>;\n\nexport function ListboxMUSUD<V, T extends ValidConstructor = typeof Fragment>(\n  props: ListboxMUSUDProps<V, T>,\n): JSX.Element {\n  const [hovering, setHovering] = createSignal(false);\n  const ownerID = createUniqueId();\n  const labelID = createUniqueId();\n  const buttonID = createUniqueId();\n  const optionsID = createUniqueId();\n\n  const fsp = useFocusStartPoint();\n\n  return createComponent(ListboxContext.Provider, {\n    value: {\n      multiple: true,\n      ownerID,\n      labelID,\n      buttonID,\n      optionsID,\n      get horizontal() {\n        return props.horizontal;\n      },\n      get hovering() {\n        return hovering();\n      },\n      set hovering(value: boolean) {\n        setHovering(value);\n      },\n    },\n    get children() {\n      return createDynamic(\n        () => props.as ?? (Fragment as T),\n        mergeProps(\n          omitProps(props, [\n            'as',\n            'children',\n            'disabled',\n            'horizontal',\n            'defaultOpen',\n            'multiple',\n            'onDisclosureChange',\n            'onSelectChange',\n            'toggleable',\n            'defaultValue',\n          ]),\n          LISTBOX_TAG,\n          {\n            'aria-labelledby': labelID,\n          },\n          createDisabled(() => props.disabled),\n          {\n            get children() {\n              return createComponent(HeadlessSelectRoot, {\n                multiple: true,\n                onChange: props.onSelectChange,\n                get toggleable() {\n                  return props.toggleable;\n                },\n                get defaultValue() {\n                  return props.defaultValue;\n                },\n                get disabled() {\n                  return props.disabled;\n                },\n                get children() {\n                  return createComponent(HeadlessDisclosureRoot, {\n                    onChange(value) {\n                      if (value) {\n                        fsp.save();\n                      }\n                      props.onDisclosureChange?.(value);\n                      if (!value) {\n                        fsp.load();\n                      }\n                    },\n                    get defaultOpen() {\n                      return props.defaultOpen;\n                    },\n                    get disabled() {\n                      return props.disabled;\n                    },\n                    get children() {\n                      return props.children;\n                    },\n                  });\n                },\n              } as HeadlessSelectRootProps<V>);\n            },\n          },\n        ) as DynamicProps<T>,\n      );\n    },\n  });\n}\n", "import {\n  createComponent,\n  createSignal,\n  createUniqueId,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureRoot,\n  HeadlessDisclosureControlledOptions,\n} from '../../headless/disclosure';\nimport {\n  HeadlessSelectRoot,\n  HeadlessSelectRootProps,\n  HeadlessSelectSingleControlledOptions,\n} from '../../headless/select';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  DynamicProps,\n  HeadlessProps,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport Fragment from '../../utils/Fragment';\nimport {\n  createDisabled,\n} from '../../utils/state-props';\nimport useFocusStartPoint from '../../utils/use-focus-start-point';\nimport {\n  ListboxContext,\n} from './ListboxContext';\nimport { LISTBOX_TAG } from './tags';\nimport {\n  ListboxBaseProps,\n  ListboxSingleBaseProps,\n} from './types';\n\n// SCSCD = Single, Controlled Select, Controlled Disclosure\n\ntype ListboxSCSCDBaseProps<V> =\n  & ListboxBaseProps\n  & ListboxSingleBaseProps<V>\n  & Omit<HeadlessSelectSingleControlledOptions<V>, 'onChange'>\n  & Omit<HeadlessDisclosureControlledOptions, 'onChange'>\n  & { children?: JSX.Element };\n\nexport type ListboxSCSCDProps<V, T extends ValidConstructor = typeof Fragment> =\n  HeadlessProps<T, ListboxSCSCDBaseProps<V>>;\n\nexport function ListboxSCSCD<V, T extends ValidConstructor = typeof Fragment>(\n  props: ListboxSCSCDProps<V, T>,\n): JSX.Element {\n  const [hovering, setHovering] = createSignal(false);\n  const ownerID = createUniqueId();\n  const labelID = createUniqueId();\n  const buttonID = createUniqueId();\n  const optionsID = createUniqueId();\n\n  const fsp = useFocusStartPoint();\n\n  return createComponent(ListboxContext.Provider, {\n    value: {\n      multiple: false,\n      ownerID,\n      labelID,\n      buttonID,\n      optionsID,\n      get horizontal() {\n        return props.horizontal;\n      },\n      get hovering() {\n        return hovering();\n      },\n      set hovering(value: boolean) {\n        setHovering(value);\n      },\n    },\n    get children() {\n      return createDynamic(\n        () => props.as ?? (Fragment as T),\n        mergeProps(\n          omitProps(props, [\n            'as',\n            'children',\n            'disabled',\n            'horizontal',\n            'isOpen',\n            'onDisclosureChange',\n            'onSelectChange',\n            'toggleable',\n            'value',\n          ]),\n          LISTBOX_TAG,\n          {\n            'aria-labelledby': labelID,\n          },\n          createDisabled(() => props.disabled),\n          {\n            get children() {\n              return createComponent(HeadlessSelectRoot, {\n                onChange: props.onSelectChange,\n                get toggleable() {\n                  return props.toggleable;\n                },\n                get value() {\n                  return props.value;\n                },\n                get disabled() {\n                  return props.disabled;\n                },\n                get children() {\n                  return createComponent(HeadlessDisclosureRoot, {\n                    onChange(value) {\n                      if (value) {\n                        fsp.save();\n                      }\n                      props.onDisclosureChange?.(value);\n                      if (!value) {\n                        fsp.load();\n                      }\n                    },\n                    get isOpen() {\n                      return props.isOpen;\n                    },\n                    get disabled() {\n                      return props.disabled;\n                    },\n                    get children() {\n                      return props.children;\n                    },\n                  });\n                },\n              } as HeadlessSelectRootProps<V>);\n            },\n          },\n        ) as DynamicProps<T>,\n      );\n    },\n  });\n}\n", "import {\n  createComponent,\n  createSignal,\n  createUniqueId,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureRoot,\n  HeadlessDisclosureUncontrolledOptions,\n} from '../../headless/disclosure';\nimport {\n  HeadlessSelectRoot,\n  HeadlessSelectRootProps,\n  HeadlessSelectSingleControlledOptions,\n} from '../../headless/select';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  DynamicProps,\n  HeadlessProps,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport Fragment from '../../utils/Fragment';\nimport {\n  createDisabled,\n} from '../../utils/state-props';\nimport useFocusStartPoint from '../../utils/use-focus-start-point';\nimport {\n  ListboxContext,\n} from './ListboxContext';\nimport { LISTBOX_TAG } from './tags';\nimport {\n  ListboxBaseProps,\n  ListboxSingleBaseProps,\n} from './types';\n\n// SCSUD = Single, Controlled Select, Uncontrolled Disclosure\n\ntype ListboxSCSUDBaseProps<V> =\n  & ListboxBaseProps\n  & ListboxSingleBaseProps<V>\n  & Omit<HeadlessSelectSingleControlledOptions<V>, 'onChange'>\n  & Omit<HeadlessDisclosureUncontrolledOptions, 'onChange'>\n  & { children?: JSX.Element };\n\nexport type ListboxSCSUDProps<V, T extends ValidConstructor = typeof Fragment> =\n  HeadlessProps<T, ListboxSCSUDBaseProps<V>>;\n\nexport function ListboxSCSUD<V, T extends ValidConstructor = typeof Fragment>(\n  props: ListboxSCSUDProps<V, T>,\n): JSX.Element {\n  const [hovering, setHovering] = createSignal(false);\n  const ownerID = createUniqueId();\n  const labelID = createUniqueId();\n  const buttonID = createUniqueId();\n  const optionsID = createUniqueId();\n\n  const fsp = useFocusStartPoint();\n\n  return createComponent(ListboxContext.Provider, {\n    value: {\n      multiple: false,\n      ownerID,\n      labelID,\n      buttonID,\n      optionsID,\n      get horizontal() {\n        return props.horizontal;\n      },\n      get hovering() {\n        return hovering();\n      },\n      set hovering(value: boolean) {\n        setHovering(value);\n      },\n    },\n    get children() {\n      return createDynamic(\n        () => props.as ?? (Fragment as T),\n        mergeProps(\n          omitProps(props, [\n            'as',\n            'children',\n            'disabled',\n            'horizontal',\n            'defaultOpen',\n            'onDisclosureChange',\n            'onSelectChange',\n            'toggleable',\n            'value',\n          ]),\n          LISTBOX_TAG,\n          {\n            'aria-labelledby': labelID,\n          },\n          createDisabled(() => props.disabled),\n          {\n            get children() {\n              return createComponent(HeadlessSelectRoot, {\n                onChange: props.onSelectChange,\n                get toggleable() {\n                  return props.toggleable;\n                },\n                get value() {\n                  return props.value;\n                },\n                get disabled() {\n                  return props.disabled;\n                },\n                get children() {\n                  return createComponent(HeadlessDisclosureRoot, {\n                    onChange(value) {\n                      if (value) {\n                        fsp.save();\n                      }\n                      props.onDisclosureChange?.(value);\n                      if (!value) {\n                        fsp.load();\n                      }\n                    },\n                    get defaultOpen() {\n                      return props.defaultOpen;\n                    },\n                    get disabled() {\n                      return props.disabled;\n                    },\n                    get children() {\n                      return props.children;\n                    },\n                  });\n                },\n              } as HeadlessSelectRootProps<V>);\n            },\n          },\n        ) as DynamicProps<T>,\n      );\n    },\n  });\n}\n", "import {\n  createComponent,\n  createSignal,\n  createUniqueId,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureRoot,\n  HeadlessDisclosureControlledOptions,\n} from '../../headless/disclosure';\nimport {\n  HeadlessSelectRoot,\n  HeadlessSelectRootProps,\n  HeadlessSelectSingleUncontrolledOptions,\n} from '../../headless/select';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  DynamicProps,\n  HeadlessProps,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport Fragment from '../../utils/Fragment';\nimport {\n  createDisabled,\n} from '../../utils/state-props';\nimport useFocusStartPoint from '../../utils/use-focus-start-point';\nimport {\n  ListboxContext,\n} from './ListboxContext';\nimport { LISTBOX_TAG } from './tags';\nimport {\n  ListboxBaseProps,\n  ListboxSingleBaseProps,\n} from './types';\n\n// SUSCD = Single, Uncontrolled Select, Controlled Disclosure\n\ntype ListboxSUSCDBaseProps<V> =\n  & ListboxBaseProps\n  & ListboxSingleBaseProps<V>\n  & Omit<HeadlessSelectSingleUncontrolledOptions<V>, 'onChange'>\n  & Omit<HeadlessDisclosureControlledOptions, 'onChange'>\n  & { children?: JSX.Element };\n\nexport type ListboxSUSCDProps<V, T extends ValidConstructor = typeof Fragment> =\n  HeadlessProps<T, ListboxSUSCDBaseProps<V>>;\n\nexport function ListboxSUSCD<V, T extends ValidConstructor = typeof Fragment>(\n  props: ListboxSUSCDProps<V, T>,\n): JSX.Element {\n  const [hovering, setHovering] = createSignal(false);\n  const ownerID = createUniqueId();\n  const labelID = createUniqueId();\n  const buttonID = createUniqueId();\n  const optionsID = createUniqueId();\n\n  const fsp = useFocusStartPoint();\n\n  return createComponent(ListboxContext.Provider, {\n    value: {\n      multiple: false,\n      ownerID,\n      labelID,\n      buttonID,\n      optionsID,\n      get horizontal() {\n        return props.horizontal;\n      },\n      get hovering() {\n        return hovering();\n      },\n      set hovering(value: boolean) {\n        setHovering(value);\n      },\n    },\n    get children() {\n      return createDynamic(\n        () => props.as ?? (Fragment as T),\n        mergeProps(\n          omitProps(props, [\n            'as',\n            'children',\n            'disabled',\n            'horizontal',\n            'isOpen',\n            'onDisclosureChange',\n            'onSelectChange',\n            'toggleable',\n            'defaultValue',\n          ]),\n          LISTBOX_TAG,\n          {\n            'aria-labelledby': labelID,\n          },\n          createDisabled(() => props.disabled),\n          {\n            get children() {\n              return createComponent(HeadlessSelectRoot, {\n                onChange: props.onSelectChange,\n                get toggleable() {\n                  return props.toggleable;\n                },\n                get defaultValue() {\n                  return props.defaultValue;\n                },\n                get disabled() {\n                  return props.disabled;\n                },\n                get children() {\n                  return createComponent(HeadlessDisclosureRoot, {\n                    onChange(value) {\n                      if (value) {\n                        fsp.save();\n                      }\n                      props.onDisclosureChange?.(value);\n                      if (!value) {\n                        fsp.load();\n                      }\n                    },\n                    get isOpen() {\n                      return props.isOpen;\n                    },\n                    get disabled() {\n                      return props.disabled;\n                    },\n                    get children() {\n                      return props.children;\n                    },\n                  });\n                },\n              } as HeadlessSelectRootProps<V>);\n            },\n          },\n        ) as DynamicProps<T>,\n      );\n    },\n  });\n}\n", "import {\n  createComponent,\n  createSignal,\n  createUniqueId,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureRoot,\n  HeadlessDisclosureUncontrolledOptions,\n} from '../../headless/disclosure';\nimport {\n  HeadlessSelectRoot,\n  HeadlessSelectRootProps,\n  HeadlessSelectSingleUncontrolledOptions,\n} from '../../headless/select';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  DynamicProps,\n  HeadlessProps,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport Fragment from '../../utils/Fragment';\nimport {\n  createDisabled,\n} from '../../utils/state-props';\nimport useFocusStartPoint from '../../utils/use-focus-start-point';\nimport {\n  ListboxContext,\n} from './ListboxContext';\nimport { LISTBOX_TAG } from './tags';\nimport {\n  ListboxBaseProps,\n  ListboxSingleBaseProps,\n} from './types';\n\n// SUSUD = Single, Uncontrolled Select, Uncontrolled Disclosure\n\ntype ListboxSUSUDBaseProps<V> =\n  & ListboxBaseProps\n  & ListboxSingleBaseProps<V>\n  & Omit<HeadlessSelectSingleUncontrolledOptions<V>, 'onChange'>\n  & Omit<HeadlessDisclosureUncontrolledOptions, 'onChange'>\n  & { children?: JSX.Element };\n\nexport type ListboxSUSUDProps<V, T extends ValidConstructor = typeof Fragment> =\n  HeadlessProps<T, ListboxSUSUDBaseProps<V>>;\n\nexport function ListboxSUSUD<V, T extends ValidConstructor = typeof Fragment>(\n  props: ListboxSUSUDProps<V, T>,\n): JSX.Element {\n  const [hovering, setHovering] = createSignal(false);\n  const ownerID = createUniqueId();\n  const labelID = createUniqueId();\n  const buttonID = createUniqueId();\n  const optionsID = createUniqueId();\n\n  const fsp = useFocusStartPoint();\n\n  return createComponent(ListboxContext.Provider, {\n    value: {\n      multiple: false,\n      ownerID,\n      labelID,\n      buttonID,\n      optionsID,\n      get horizontal() {\n        return props.horizontal;\n      },\n      get hovering() {\n        return hovering();\n      },\n      set hovering(value: boolean) {\n        setHovering(value);\n      },\n    },\n    get children() {\n      return createDynamic(\n        () => props.as ?? (Fragment as T),\n        mergeProps(\n          omitProps(props, [\n            'as',\n            'children',\n            'disabled',\n            'horizontal',\n            'defaultOpen',\n            'onDisclosureChange',\n            'onSelectChange',\n            'toggleable',\n            'defaultValue',\n          ]),\n          LISTBOX_TAG,\n          {\n            'aria-labelledby': labelID,\n          },\n          createDisabled(() => props.disabled),\n          {\n            get children() {\n              return createComponent(HeadlessSelectRoot, {\n                onChange: props.onSelectChange,\n                get toggleable() {\n                  return props.toggleable;\n                },\n                get defaultValue() {\n                  return props.defaultValue;\n                },\n                get disabled() {\n                  return props.disabled;\n                },\n                get children() {\n                  return createComponent(HeadlessDisclosureRoot, {\n                    onChange(value) {\n                      if (value) {\n                        fsp.save();\n                      }\n                      props.onDisclosureChange?.(value);\n                      if (!value) {\n                        fsp.load();\n                      }\n                    },\n                    get defaultOpen() {\n                      return props.defaultOpen;\n                    },\n                    get disabled() {\n                      return props.disabled;\n                    },\n                    get children() {\n                      return props.children;\n                    },\n                  });\n                },\n              } as HeadlessSelectRootProps<V>);\n            },\n          },\n        ) as DynamicProps<T>,\n      );\n    },\n  });\n}\n", "import {\n  createSignal,\n  createEffect,\n  onCleanup,\n  JSX,\n  createComponent,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureChildProps,\n  useHeadlessDisclosureProperties,\n  createHeadlessDisclosureChildProps,\n} from '../../headless/disclosure';\nimport {\n  createRef,\n  DynamicNode,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  createDisabled,\n  createExpanded,\n} from '../../utils/state-props';\nimport { OmitAndMerge } from '../../utils/types';\nimport {\n  Button, ButtonProps,\n} from '../button';\nimport {\n  useListboxContext,\n} from './ListboxContext';\nimport { LISTBOX_BUTTON_TAG } from './tags';\n\nexport type ListboxButtonProps<T extends ValidConstructor = 'button'> =\n  HeadlessPropsWithRef<T, OmitAndMerge<HeadlessDisclosureChildProps, ButtonProps<T>>>;\n\nexport function ListboxButton<T extends ValidConstructor = 'button'>(\n  props: ListboxButtonProps<T>,\n): JSX.Element {\n  const context = useListboxContext('ListboxButton');\n  const properties = useHeadlessDisclosureProperties();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n\n    if (ref instanceof HTMLElement) {\n      const toggle = () => {\n        if (!(properties.disabled() || props.disabled)) {\n          properties.setState(!properties.isOpen());\n        }\n      };\n\n      const onKeyDown = (e: KeyboardEvent) => {\n        if (!(properties.disabled() || props.disabled)) {\n          switch (e.key) {\n            case 'ArrowUp':\n            case 'ArrowDown':\n              e.preventDefault();\n              properties.setState(!properties.isOpen());\n              break;\n            default:\n              break;\n          }\n        }\n      };\n\n      ref.addEventListener('click', toggle);\n      ref.addEventListener('keydown', onKeyDown);\n\n      onCleanup(() => {\n        ref.removeEventListener('click', toggle);\n        ref.removeEventListener('keydown', onKeyDown);\n      });\n\n      const onMouseEnter = () => {\n        context.hovering = true;\n      };\n      const onMouseLeave = () => {\n        context.hovering = false;\n      };\n\n      ref.addEventListener('mouseenter', onMouseEnter);\n      ref.addEventListener('mouseleave', onMouseLeave);\n      onCleanup(() => {\n        ref.removeEventListener('mouseenter', onMouseEnter);\n        ref.removeEventListener('mouseleave', onMouseLeave);\n      });\n    }\n  });\n\n  return createComponent(Button, mergeProps(\n    omitProps(props, [\n      'children',\n      'ref',\n    ]),\n    LISTBOX_BUTTON_TAG,\n    {\n      id: context.buttonID,\n      'aria-haspopup': 'listbox',\n      'aria-controls': context.optionsID,\n      ref: createRef(props, (e) => {\n        setInternalRef(() => e);\n        if (e instanceof HTMLElement) {\n          context.anchor = e;\n        }\n      }),\n    },\n    createDisabled(() => {\n      const internalDisabled = properties.disabled();\n      const granularDisabled = props.disabled;\n      return internalDisabled || granularDisabled;\n    }),\n    createExpanded(() => properties.isOpen()),\n    createHeadlessDisclosureChildProps(props),\n  ) as ButtonProps<T>);\n}\n", "import {\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureChildProps,\n  createHeadlessDisclosureChildProps,\n} from '../../headless/disclosure';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  ValidConstructor,\n  HeadlessProps,\n  DynamicProps,\n} from '../../utils/dynamic-prop';\nimport {\n  useListboxContext,\n} from './ListboxContext';\nimport { LISTBOX_LABEL_TAG } from './tags';\n\nexport type ListboxLabelProps<T extends ValidConstructor = 'label'> =\n  HeadlessProps<T, HeadlessDisclosureChildProps>;\n\nexport function ListboxLabel<T extends ValidConstructor = 'label'>(\n  props: ListboxLabelProps<T>,\n): JSX.Element {\n  const context = useListboxContext('ListboxLabel');\n\n  return createDynamic(\n    () => props.as ?? ('label' as T),\n    mergeProps(\n      omitProps(props, [\n        'as',\n        'children',\n      ]),\n      LISTBOX_LABEL_TAG,\n      {\n        id: context.labelID,\n      },\n      createHeadlessDisclosureChildProps(props),\n    ) as DynamicProps<T>,\n  );\n}\n", "import {\n  createSignal,\n  onCleanup,\n  createEffect,\n  untrack,\n  JSX,\n  createComponent,\n  mergeProps,\n  batch,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  useHeadlessDisclosureProperties,\n} from '../../headless/disclosure';\nimport {\n  HeadlessSelectOptionProps,\n  useHeadlessSelectProperties,\n  createHeadlessSelectOptionProps,\n} from '../../headless/select';\nimport {\n  createRef,\n  DynamicNode,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport { createOwnerAttribute } from '../../utils/focus-navigator';\nimport {\n  createActive,\n  createDisabled,\n  createSelected,\n} from '../../utils/state-props';\nimport { OmitAndMerge } from '../../utils/types';\nimport {\n  Button,\n  ButtonProps,\n} from '../button';\nimport {\n  useListboxContext,\n} from './ListboxContext';\nimport {\n  useListboxOptionsContext,\n} from './ListboxOptionsContext';\nimport { LISTBOX_OPTION_TAG } from './tags';\n\nexport type ListboxOptionProps<V, T extends ValidConstructor = 'li'> =\n  HeadlessPropsWithRef<T, OmitAndMerge<HeadlessSelectOptionProps<V>, ButtonProps<T>>>;\n\nexport function ListboxOption<V, T extends ValidConstructor = 'li'>(\n  props: ListboxOptionProps<V, T>,\n): JSX.Element {\n  const rootContext = useListboxContext('ListboxOptions');\n  const context = useListboxOptionsContext('ListboxOptions');\n  const disclosure = useHeadlessDisclosureProperties();\n  const properties = useHeadlessSelectProperties();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  let characters = '';\n  let timeout: ReturnType<typeof setTimeout> | undefined;\n\n  onCleanup(() => {\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n  });\n\n  const isDisabled = () => {\n    const parent = properties.disabled();\n    const local = props.disabled;\n    return parent || local;\n  };\n\n  createEffect(() => {\n    const ref = internalRef();\n\n    if (ref instanceof HTMLElement) {\n      const onKeyDown = (e: KeyboardEvent) => {\n        if (!isDisabled()) {\n          switch (e.key) {\n            case 'ArrowLeft':\n              if (rootContext.horizontal) {\n                e.preventDefault();\n                context.setPrevChecked(ref);\n              }\n              break;\n            case 'ArrowUp':\n              if (!rootContext.horizontal) {\n                e.preventDefault();\n                context.setPrevChecked(ref);\n              }\n              break;\n            case 'ArrowRight':\n              if (rootContext.horizontal) {\n                e.preventDefault();\n                context.setNextChecked(ref);\n              }\n              break;\n            case 'ArrowDown':\n              if (!rootContext.horizontal) {\n                e.preventDefault();\n                context.setNextChecked(ref);\n              }\n              break;\n            case ' ':\n            case 'Enter':\n              if (ref.tagName === 'BUTTON') {\n                e.preventDefault();\n              }\n              batch(() => {\n                properties.select(props.value);\n                if (!rootContext.multiple) {\n                  e.preventDefault();\n                  disclosure.setState(false);\n                }\n              });\n              break;\n            case 'Home':\n              e.preventDefault();\n              context.setFirstChecked();\n              break;\n            case 'End':\n              e.preventDefault();\n              context.setLastChecked();\n              break;\n            default:\n              if (e.key.length === 1) {\n                characters = `${characters}${e.key}`;\n                if (timeout) {\n                  clearTimeout(timeout);\n                }\n                timeout = setTimeout(() => {\n                  context.setFirstMatch(characters);\n                  characters = '';\n                }, 100);\n              }\n              break;\n          }\n        }\n      };\n      const onClick = () => {\n        if (!isDisabled()) {\n          batch(() => {\n            properties.select(props.value);\n            if (!rootContext.multiple) {\n              disclosure.setState(false);\n            }\n          });\n        }\n      };\n      const onFocus = () => {\n        if (!isDisabled()) {\n          properties.focus(props.value);\n        }\n      };\n      const onBlur = () => {\n        if (!isDisabled()) {\n          properties.blur();\n        }\n      };\n\n      ref.addEventListener('keydown', onKeyDown);\n      ref.addEventListener('click', onClick);\n      ref.addEventListener('focus', onFocus);\n      ref.addEventListener('blur', onBlur);\n      onCleanup(() => {\n        ref.removeEventListener('keydown', onKeyDown);\n        ref.removeEventListener('click', onClick);\n        ref.removeEventListener('focus', onFocus);\n        ref.removeEventListener('blur', onBlur);\n      });\n    }\n  });\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      if (disclosure.isOpen()\n        && untrack(() => properties.isSelected(props.value))\n        && !isDisabled()\n      ) {\n        ref.focus();\n      }\n    }\n  });\n\n  return createComponent(Button, mergeProps(\n    omitProps(props, [\n      'as',\n      'children',\n      'value',\n      'ref',\n    ]),\n    LISTBOX_OPTION_TAG,\n    createOwnerAttribute(context.getId()),\n    {\n      role: 'option',\n      tabindex: -1,\n      ref: createRef(props, (e) => {\n        setInternalRef(() => e);\n      }),\n      get as() {\n        return props.as ?? ('li' as T);\n      },\n    },\n    createDisabled(isDisabled),\n    createSelected(() => properties.isSelected(props.value)),\n    createActive(() => properties.isActive(props.value)),\n    createHeadlessSelectOptionProps(props),\n  ) as ButtonProps<T>);\n}\n", "import {\n  createContext,\n  useContext,\n} from 'solid-js';\nimport { ValidConstructor } from '../../utils/dynamic-prop';\nimport FocusNavigator from '../../utils/focus-navigator';\n\nexport const ListboxOptionsContext = createContext<FocusNavigator<any>>();\n\nexport function useListboxOptionsContext<T extends ValidConstructor>(\n  componentName: string,\n): FocusNavigator<T> {\n  const context = useContext(ListboxOptionsContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <ListboxOptions>`);\n}\n\nexport function createListboxOptionsFocusNavigator<T extends ValidConstructor>(\n  owner: string,\n) {\n  return new FocusNavigator<T>(owner);\n}\n", "import {\n  createSignal,\n  createEffect,\n  onCleanup,\n  JSX,\n  createComponent,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  useHeadlessDisclosureProperties,\n} from '../../headless/disclosure';\nimport {\n  HeadlessSelectChildProps,\n  useHeadlessSelectProperties,\n  createHeadlessSelectChild,\n} from '../../headless/select';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  createRef,\n  DynamicNode,\n  DynamicProps,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  createDisabled,\n} from '../../utils/state-props';\nimport {\n  useListboxContext,\n} from './ListboxContext';\nimport {\n  createListboxOptionsFocusNavigator,\n  ListboxOptionsContext,\n} from './ListboxOptionsContext';\nimport { LISTBOX_OPTIONS_TAG } from './tags';\n\nexport type ListboxOptionsProps<V, T extends ValidConstructor = 'ul'> =\n  HeadlessPropsWithRef<T, HeadlessSelectChildProps<V>>;\n\nexport function ListboxOptions<V, T extends ValidConstructor = 'ul'>(\n  props: ListboxOptionsProps<V, T>,\n): JSX.Element {\n  const context = useListboxContext('ListboxOptions');\n  const selectProperties = useHeadlessSelectProperties();\n  const properties = useHeadlessDisclosureProperties();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  const controller = createListboxOptionsFocusNavigator(context.optionsID);\n\n  createEffect(() => {\n    if (!selectProperties.hasSelected()) {\n      controller.setFirstChecked();\n    }\n  });\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      const onBlur = (e: FocusEvent) => {\n        if (context.hovering) {\n          return;\n        }\n        if (!e.relatedTarget || !ref.contains(e.relatedTarget as Node)) {\n          properties.setState(false);\n        }\n      };\n      ref.addEventListener('focusout', onBlur);\n      onCleanup(() => {\n        ref.removeEventListener('focusout', onBlur);\n      });\n    }\n  });\n\n  return createComponent(ListboxOptionsContext.Provider, {\n    value: controller,\n    get children() {\n      return createDynamic(\n        () => props.as ?? ('ul' as T),\n        mergeProps(\n          omitProps(props, [\n            'as',\n            'children',\n            'ref',\n          ]),\n          LISTBOX_OPTIONS_TAG,\n          {\n            id: context.optionsID,\n            role: 'listbox',\n            'aria-multiselectable': context.multiple,\n            'aria-labelledby': context.buttonID,\n            ref: createRef(props, (e) => {\n              setInternalRef(() => e);\n              controller.setRef(e);\n            }),\n            get 'aria-orientation'() {\n              return context.horizontal ? 'horizontal' : 'vertical';\n            },\n            get tabindex() {\n              const internalDisabled = properties.disabled();\n              const granularDisabled = props.disabled;\n              return (internalDisabled || granularDisabled) ? -1 : 0;\n            },\n          },\n          createDisabled(() => {\n            const internalDisabled = properties.disabled();\n            const granularDisabled = props.disabled;\n            return internalDisabled || granularDisabled;\n          }),\n          createHeadlessSelectChild(props),\n        ) as DynamicProps<T>,\n      );\n    },\n  });\n}\n", "import {\n  createComponent,\n  mergeProps,\n  JSX,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  createRef,\n  DynamicProps,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  createMenuItemFocusNavigator,\n  MenuContext,\n} from './MenuContext';\nimport { MENU_TAG } from './tags';\n\nexport type MenuProps<T extends ValidConstructor = 'ul'> = HeadlessPropsWithRef<T>;\n\nexport function Menu<T extends ValidConstructor = 'ul'>(\n  props: MenuProps<T>,\n): JSX.Element {\n  const controller = createMenuItemFocusNavigator();\n\n  return createComponent(MenuContext.Provider, {\n    value: controller,\n    get children() {\n      return createDynamic(\n        () => props.as ?? ('div' as T),\n        mergeProps(\n          omitProps(props, ['as', 'ref']),\n          MENU_TAG,\n          {\n            id: controller.getId(),\n            role: 'menu',\n            ref: createRef(props, (e) => {\n              controller.setRef(e);\n            }),\n          },\n        ) as DynamicProps<T>,\n      );\n    },\n  });\n}\n", "import {\n  createContext,\n  createUniqueId,\n  useContext,\n} from 'solid-js';\nimport { ValidConstructor } from '../../utils/dynamic-prop';\nimport FocusNavigator from '../../utils/focus-navigator';\n\nexport const MenuContext = createContext<FocusNavigator<any>>();\n\nexport function useMenuContext<T extends ValidConstructor>(\n  componentName: string,\n): FocusNavigator<T> {\n  const context = useContext(MenuContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <Menu>`);\n}\n\nexport function createMenuItemFocusNavigator<T extends ValidConstructor>(): FocusNavigator<T> {\n  return new FocusNavigator(createUniqueId());\n}\n", "import { createTag } from '../../utils/namespace';\n\nexport const MENU_TAG = createTag('menu');\nexport const MENU_ITEM_TAG = createTag('menu-item');\n", "import {\n  createSignal,\n  onCleanup,\n  createEffect,\n  JSX,\n  mergeProps,\n  createComponent,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  createRef,\n  DynamicNode,\n  DynamicProps,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport { createOwnerAttribute } from '../../utils/focus-navigator';\nimport {\n  createDisabled,\n} from '../../utils/state-props';\nimport {\n  MenuChildProps,\n  MenuChild,\n} from './MenuChild';\nimport {\n  useMenuContext,\n} from './MenuContext';\nimport { MENU_ITEM_TAG } from './tags';\n\nexport type MenuItemProps<T extends ValidConstructor = 'li'> =\n  HeadlessPropsWithRef<T, MenuChildProps>;\n\nexport function MenuItem<T extends ValidConstructor = 'li'>(\n  props: MenuItemProps<T>,\n): JSX.Element {\n  const context = useMenuContext('Menu');\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  let characters = '';\n  let timeout: ReturnType<typeof setTimeout> | undefined;\n\n  onCleanup(() => {\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n  });\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      const onKeyDown = (e: KeyboardEvent) => {\n        if (!props.disabled) {\n          switch (e.key) {\n            case 'ArrowUp':\n            case 'ArrowLeft':\n              e.preventDefault();\n              context.setPrevChecked(ref);\n              break;\n            case 'ArrowDown':\n            case 'ArrowRight':\n              e.preventDefault();\n              context.setNextChecked(ref);\n              break;\n            case ' ':\n            case 'Enter':\n              if (ref.tagName === 'BUTTON') {\n                e.preventDefault();\n              }\n              ref.click();\n              break;\n            case 'Home':\n              e.preventDefault();\n              context.setFirstChecked();\n              break;\n            case 'End':\n              e.preventDefault();\n              context.setLastChecked();\n              break;\n            default:\n              if (e.key.length === 1) {\n                characters = `${characters}${e.key}`;\n                if (timeout) {\n                  clearTimeout(timeout);\n                }\n                timeout = setTimeout(() => {\n                  context.setFirstMatch(characters);\n                  characters = '';\n                }, 100);\n              }\n              break;\n          }\n        }\n      };\n\n      ref.addEventListener('keydown', onKeyDown);\n      onCleanup(() => {\n        ref.removeEventListener('keydown', onKeyDown);\n      });\n    }\n  });\n\n  return createDynamic(\n    () => props.as ?? ('div' as T),\n    mergeProps(\n      omitProps(props, [\n        'as',\n        'disabled',\n        'ref',\n        'children',\n      ]),\n      MENU_ITEM_TAG,\n      createOwnerAttribute(context.getId()),\n      {\n        role: 'menuitem',\n        tabindex: -1,\n        ref: createRef(props, (e) => {\n          setInternalRef(() => e);\n        }),\n      },\n      createDisabled(() => props.disabled),\n      {\n        get children() {\n          return createComponent(MenuChild, {\n            get disabled() {\n              return props.disabled;\n            },\n            get children() {\n              return props.children;\n            },\n          });\n        },\n      },\n    ) as DynamicProps<T>,\n  );\n}\n", "import {\n  createMemo,\n  JSX,\n} from 'solid-js';\n\nexport interface MenuProperties {\n  disabled: () => boolean;\n}\n\nexport type MenuChildRenderProp = (\n  (properties: MenuProperties) => JSX.Element\n);\n\nfunction isMenuChildRenderProp(\n  children: JSX.Element | MenuChildRenderProp,\n): children is MenuChildRenderProp {\n  return typeof children === 'function' && children.length > 0;\n}\n\nexport interface MenuChildProps {\n  disabled?: boolean;\n  children?: JSX.Element | MenuChildRenderProp;\n}\n\nexport function MenuChild(props: MenuChildProps): JSX.Element {\n  return createMemo(() => {\n    const body = props.children;\n    if (isMenuChildRenderProp(body)) {\n      return body({\n        disabled: () => !!props.disabled,\n      });\n    }\n    return body;\n  });\n}\n", "import {\n  createComponent,\n  JSX,\n} from 'solid-js';\nimport {\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  PopoverControlled,\n  PopoverControlledProps,\n} from './PopoverControlled';\nimport {\n  PopoverUncontrolled,\n  PopoverUncontrolledProps,\n} from './PopoverUncontrolled';\n\nexport type PopoverProps<T extends ValidConstructor = 'div'> =\n  | PopoverControlledProps<T>\n  | PopoverUncontrolledProps<T>;\n\nfunction isPopoverUncontrolled<T extends ValidConstructor = 'div'>(\n  props: PopoverProps<T>,\n): props is PopoverUncontrolledProps<T> {\n  return 'defaultOpen' in props;\n}\n\nexport function Popover<T extends ValidConstructor = 'div'>(\n  props: PopoverProps<T>,\n): JSX.Element {\n  if (isPopoverUncontrolled(props)) {\n    return createComponent(PopoverUncontrolled, props);\n  }\n  return createComponent(PopoverControlled, props);\n}\n", "import {\n  createComponent,\n  createSignal,\n  createUniqueId,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureControlledOptions,\n  HeadlessDisclosureRoot,\n} from '../../headless/disclosure';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  DynamicProps,\n  HeadlessProps,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  createDisabled,\n} from '../../utils/state-props';\nimport useFocusStartPoint from '../../utils/use-focus-start-point';\nimport {\n  PopoverContext,\n} from './PopoverContext';\nimport { POPOVER_TAG } from './tags';\nimport {\n  PopoverBaseProps,\n} from './types';\n\nexport type PopoverControlledProps<T extends ValidConstructor = 'div'> =\n  HeadlessProps<T, PopoverBaseProps & HeadlessDisclosureControlledOptions>;\n\nexport function PopoverControlled<T extends ValidConstructor = 'div'>(\n  props: PopoverControlledProps<T>,\n): JSX.Element {\n  const [hovering, setHovering] = createSignal(false);\n  const ownerID = createUniqueId();\n  const buttonID = createUniqueId();\n  const panelID = createUniqueId();\n\n  const fsp = useFocusStartPoint();\n\n  return createComponent(PopoverContext.Provider, {\n    value: {\n      ownerID,\n      buttonID,\n      panelID,\n      get hovering() {\n        return hovering();\n      },\n      set hovering(value: boolean) {\n        setHovering(value);\n      },\n    },\n    get children() {\n      return createDynamic(\n        () => props.as ?? ('div' as T),\n        mergeProps(\n          omitProps(props, [\n            'isOpen',\n            'as',\n            'children',\n            'disabled',\n            'onChange',\n          ]),\n          POPOVER_TAG,\n          createDisabled(() => props.disabled),\n          {\n            get children() {\n              return createComponent(HeadlessDisclosureRoot, {\n                get isOpen() {\n                  return props.isOpen;\n                },\n                get disabled() {\n                  return props.disabled;\n                },\n                onChange(value) {\n                  if (value) {\n                    fsp.save();\n                    props.onOpen?.();\n                  }\n                  props.onChange?.(value);\n                  if (!value) {\n                    props.onClose?.();\n                    fsp.load();\n                  }\n                },\n                get children() {\n                  return props.children;\n                },\n              });\n            },\n          },\n        ) as DynamicProps<T>,\n      );\n    },\n  });\n}\n", "import {\n  createContext,\n  useContext,\n} from 'solid-js';\n\ninterface PopoverContext {\n  ownerID: string;\n  buttonID: string;\n  panelID: string;\n  hovering: boolean;\n  anchor?: HTMLElement | null;\n}\n\nexport const PopoverContext = createContext<PopoverContext>();\n\nexport function usePopoverContext(componentName: string): PopoverContext {\n  const context = useContext(PopoverContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <Popover>`);\n}\n", "import { createTag } from '../../utils/namespace';\n\nexport const POPOVER_TAG = createTag('popover');\nexport const POPOVER_BUTTON_TAG = createTag('popover-button');\nexport const POPOVER_OVERLAY_TAG = createTag('popover-overlay');\nexport const POPOVER_PANEL_TAG = createTag('popover-panel');\n", "import {\n  createComponent,\n  createSignal,\n  createUniqueId,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureUncontrolledOptions,\n  HeadlessDisclosureRoot,\n} from '../../headless/disclosure';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  DynamicProps,\n  HeadlessProps,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  createDisabled,\n} from '../../utils/state-props';\nimport useFocusStartPoint from '../../utils/use-focus-start-point';\nimport {\n  PopoverContext,\n} from './PopoverContext';\nimport { POPOVER_TAG } from './tags';\nimport {\n  PopoverBaseProps,\n} from './types';\n\nexport type PopoverUncontrolledProps<T extends ValidConstructor = 'div'> =\n  HeadlessProps<T, PopoverBaseProps & HeadlessDisclosureUncontrolledOptions>;\n\nexport function PopoverUncontrolled<T extends ValidConstructor = 'div'>(\n  props: PopoverUncontrolledProps<T>,\n): JSX.Element {\n  const [hovering, setHovering] = createSignal(false);\n  const ownerID = createUniqueId();\n  const buttonID = createUniqueId();\n  const panelID = createUniqueId();\n\n  const fsp = useFocusStartPoint();\n\n  return createComponent(PopoverContext.Provider, {\n    value: {\n      ownerID,\n      buttonID,\n      panelID,\n      get hovering() {\n        return hovering();\n      },\n      set hovering(value: boolean) {\n        setHovering(value);\n      },\n    },\n    get children() {\n      return createDynamic(\n        () => props.as ?? ('div' as T),\n        mergeProps(\n          omitProps(props, [\n            'defaultOpen',\n            'as',\n            'children',\n            'disabled',\n            'onChange',\n          ]),\n          POPOVER_TAG,\n          createDisabled(() => props.disabled),\n          {\n            get children() {\n              return createComponent(HeadlessDisclosureRoot, {\n                get defaultOpen() {\n                  return props.defaultOpen;\n                },\n                get disabled() {\n                  return props.disabled;\n                },\n                onChange(value) {\n                  if (value) {\n                    fsp.save();\n                    props.onOpen?.();\n                  }\n                  props.onChange?.(value);\n                  if (!value) {\n                    props.onClose?.();\n                    fsp.load();\n                  }\n                },\n                get children() {\n                  return props.children;\n                },\n              });\n            },\n          },\n        ) as DynamicProps<T>,\n      );\n    },\n  });\n}\n", "import {\n  createSignal,\n  createEffect,\n  onCleanup,\n  JSX,\n  createComponent,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  createHeadlessDisclosureChildProps,\n  HeadlessDisclosureChildProps,\n  useHeadlessDisclosureProperties,\n} from '../../headless/disclosure';\nimport {\n  createRef,\n  DynamicNode,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  createDisabled,\n  createExpanded,\n} from '../../utils/state-props';\nimport { OmitAndMerge } from '../../utils/types';\nimport {\n  Button,\n  ButtonProps,\n} from '../button';\nimport {\n  usePopoverContext,\n} from './PopoverContext';\nimport { POPOVER_BUTTON_TAG } from './tags';\n\nexport type PopoverButtonProps<T extends ValidConstructor = 'button'> =\n  HeadlessPropsWithRef<T, OmitAndMerge<HeadlessDisclosureChildProps, ButtonProps<T>>>;\n\nexport function PopoverButton<T extends ValidConstructor = 'button'>(\n  props: PopoverButtonProps<T>,\n): JSX.Element {\n  const context = usePopoverContext('PopoverButton');\n  const properties = useHeadlessDisclosureProperties();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      const toggle = () => {\n        if (!(properties.disabled() || props.disabled)) {\n          properties.setState(!properties.isOpen());\n        }\n      };\n\n      ref.addEventListener('click', toggle);\n\n      onCleanup(() => {\n        ref.removeEventListener('click', toggle);\n      });\n\n      const onMouseEnter = () => {\n        context.hovering = true;\n      };\n      const onMouseLeave = () => {\n        context.hovering = false;\n      };\n\n      ref.addEventListener('mouseenter', onMouseEnter);\n      ref.addEventListener('mouseleave', onMouseLeave);\n      onCleanup(() => {\n        ref.removeEventListener('mouseenter', onMouseEnter);\n        ref.removeEventListener('mouseleave', onMouseLeave);\n      });\n    }\n  });\n\n  return createComponent(Button, mergeProps(\n    omitProps(props, [\n      'children',\n      'ref',\n    ]),\n    POPOVER_BUTTON_TAG,\n    {\n      id: context.buttonID,\n      ref: createRef(props, (e) => {\n        setInternalRef(() => e);\n        if (e instanceof HTMLElement) {\n          context.anchor = e;\n        }\n      }),\n      get 'aria-controls'() {\n        return properties.isOpen() && context.panelID;\n      },\n    },\n    createDisabled(() => {\n      const internalDisabled = properties.disabled();\n      const granularDisabled = props.disabled;\n      return internalDisabled || granularDisabled;\n    }),\n    createExpanded(() => properties.isOpen()),\n    createHeadlessDisclosureChildProps(props),\n  ) as ButtonProps<T>);\n}\n", "import {\n  createSignal,\n  createEffect,\n  onCleanup,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessDisclosureChildProps,\n  useHeadlessDisclosureProperties,\n  createHeadlessDisclosureChildProps,\n} from '../../headless/disclosure';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  createRef,\n  DynamicNode,\n  DynamicProps,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  usePopoverContext,\n} from './PopoverContext';\nimport { POPOVER_OVERLAY_TAG } from './tags';\n\nexport type PopoverOverlayProps<T extends ValidConstructor = 'div'> =\n  HeadlessPropsWithRef<T, HeadlessDisclosureChildProps>;\n\nexport function PopoverOverlay<T extends ValidConstructor = 'div'>(\n  props: PopoverOverlayProps<T>,\n): JSX.Element {\n  usePopoverContext('PopoverOverlay');\n  const properties = useHeadlessDisclosureProperties();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      const onClick = () => {\n        properties.setState(false);\n      };\n\n      ref.addEventListener('click', onClick);\n\n      onCleanup(() => {\n        ref.removeEventListener('click', onClick);\n      });\n    }\n  });\n\n  return createDynamic(\n    () => props.as ?? ('div' as T),\n    mergeProps(\n      omitProps(props, [\n        'as',\n        'children',\n        'ref',\n      ]),\n      POPOVER_OVERLAY_TAG,\n      {\n        ref: createRef(props, (e) => {\n          setInternalRef(() => e);\n        }),\n      },\n      createHeadlessDisclosureChildProps(props),\n    ) as DynamicProps<T>,\n  );\n}\n", "import {\n  createSignal,\n  createEffect,\n  onCleanup,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  createHeadlessDisclosureChildProps,\n  HeadlessDisclosureChildProps,\n  useHeadlessDisclosureProperties,\n} from '../../headless/disclosure';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  createRef,\n  DynamicNode,\n  DynamicProps,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport { focusFirst, lockFocus } from '../../utils/focus-navigation';\nimport getFocusableElements from '../../utils/focus-query';\nimport {\n  createUnmountable,\n  UnmountableProps,\n} from '../../utils/Unmountable';\nimport {\n  usePopoverContext,\n} from './PopoverContext';\nimport { POPOVER_PANEL_TAG } from './tags';\n\nexport type PopoverPanelProps<T extends ValidConstructor = 'div'> =\n  HeadlessPropsWithRef<T, HeadlessDisclosureChildProps & UnmountableProps>;\n\nexport function PopoverPanel<T extends ValidConstructor = 'div'>(\n  props: PopoverPanelProps<T>,\n): JSX.Element {\n  const context = usePopoverContext('PopoverPanel');\n  const properties = useHeadlessDisclosureProperties();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      if (properties.isOpen()) {\n        focusFirst(getFocusableElements(ref));\n\n        const onKeyDown = (e: KeyboardEvent) => {\n          if (!props.disabled) {\n            if (e.key === 'Tab') {\n              e.preventDefault();\n\n              lockFocus(ref, e.shiftKey);\n            } else if (e.key === 'Escape') {\n              properties.setState(false);\n            }\n          }\n        };\n\n        const onBlur = (e: FocusEvent) => {\n          if (context.hovering) {\n            return;\n          }\n          if (!e.relatedTarget || !ref.contains(e.relatedTarget as Node)) {\n            properties.setState(false);\n          }\n        };\n\n        ref.addEventListener('keydown', onKeyDown);\n        ref.addEventListener('focusout', onBlur);\n        onCleanup(() => {\n          ref.removeEventListener('keydown', onKeyDown);\n          ref.removeEventListener('focusout', onBlur);\n        });\n      }\n    }\n  });\n\n  return createUnmountable(\n    props,\n    () => properties.isOpen(),\n    () => createDynamic(\n      () => props.as ?? ('div' as T),\n      mergeProps(\n        omitProps(props, [\n          'as',\n          'unmount',\n          'children',\n          'ref',\n        ]),\n        POPOVER_PANEL_TAG,\n        {\n          id: context.panelID,\n          ref: createRef(props, (e) => {\n            setInternalRef(() => e);\n          }),\n        },\n        createHeadlessDisclosureChildProps(props),\n      ) as DynamicProps<T>,\n    ),\n  );\n}\n", "import {\n  createComponent,\n  JSX,\n} from 'solid-js';\nimport {\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  RadioGroupControlled,\n  RadioGroupControlledProps,\n} from './RadioGroupControlled';\nimport {\n  RadioGroupUncontrolled,\n  RadioGroupUncontrolledProps,\n} from './RadioGroupUncontrolled';\n\nexport type RadioGroupProps<V, T extends ValidConstructor = 'div'> =\n  | RadioGroupControlledProps<V, T>\n  | RadioGroupUncontrolledProps<V, T>;\n\nfunction isRadioGroupUncontrolled<V, T extends ValidConstructor = 'div'>(\n  props: RadioGroupProps<V, T>,\n): props is RadioGroupUncontrolledProps<V, T> {\n  return 'defaultValue' in props;\n}\n\nexport function RadioGroup<V, T extends ValidConstructor = 'div'>(\n  props: RadioGroupProps<V, T>,\n): JSX.Element {\n  if (isRadioGroupUncontrolled(props)) {\n    return createComponent(RadioGroupUncontrolled, props);\n  }\n  return createComponent(RadioGroupControlled, props);\n}\n", "import {\n  createUniqueId,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  createComponent,\n} from 'solid-js/web';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  createHeadlessSelectRootSingleControlledProps,\n  HeadlessSelectRootChildren,\n  HeadlessSelectSingleControlledOptions,\n} from '../../headless/select';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  createRef,\n  DynamicProps,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  createDisabled,\n} from '../../utils/state-props';\nimport {\n  RadioGroupContext,\n} from './RadioGroupContext';\nimport {\n  createRadioGroupOptionFocusNavigator,\n  RadioGroupRootContext,\n} from './RadioGroupRootContext';\nimport { RADIO_GROUP_TAG } from './tags';\n\nexport type RadioGroupControlledProps<V, T extends ValidConstructor = 'div'> =\n  HeadlessPropsWithRef<\n    T,\n    HeadlessSelectSingleControlledOptions<V> & HeadlessSelectRootChildren<V>\n  >;\n\nexport function RadioGroupControlled<V, T extends ValidConstructor = 'div'>(\n  props: RadioGroupControlledProps<V, T>,\n): JSX.Element {\n  const controller = createRadioGroupOptionFocusNavigator();\n  const descriptionID = createUniqueId();\n  const labelID = createUniqueId();\n\n  return createComponent(RadioGroupRootContext.Provider, {\n    value: controller,\n    get children() {\n      return createComponent(RadioGroupContext.Provider, {\n        value: {\n          descriptionID,\n          labelID,\n        },\n        get children() {\n          return createDynamic(\n            () => props.as ?? ('div' as T),\n            mergeProps(\n              omitProps(props, [\n                'as',\n                'children',\n                'value',\n                'disabled',\n                'onChange',\n                'ref',\n              ]),\n              RADIO_GROUP_TAG,\n              {\n                role: 'radiogroup',\n                'aria-labelledby': labelID,\n                'aria-describedby': descriptionID,\n                ref: createRef(props, (e) => {\n                  controller.setRef(e);\n                }),\n              },\n              createDisabled(() => props.disabled),\n              createHeadlessSelectRootSingleControlledProps(props),\n            ) as DynamicProps<T>,\n          );\n        },\n      });\n    },\n  });\n}\n", "import {\n  createContext,\n  useContext,\n} from 'solid-js';\n\ninterface RadioGroupContext {\n  labelID: string;\n  descriptionID: string;\n}\n\nexport const RadioGroupContext = createContext<RadioGroupContext>();\n\nexport function useRadioGroupContext(componentName: string): RadioGroupContext {\n  const context = useContext(RadioGroupContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <RadioGroup> or <RadioGroupOption>`);\n}\n", "import {\n  createContext,\n  createUniqueId,\n  useContext,\n} from 'solid-js';\nimport { ValidConstructor } from '../../utils/dynamic-prop';\nimport FocusNavigator from '../../utils/focus-navigator';\n\nexport const RadioGroupRootContext = createContext<FocusNavigator<any>>();\n\nexport function useRadioGroupRootContext<T extends ValidConstructor>(\n  componentName: string,\n): FocusNavigator<T> {\n  const context = useContext(RadioGroupRootContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <RadioGroup>`);\n}\n\nexport function createRadioGroupOptionFocusNavigator\n  <T extends ValidConstructor>(): FocusNavigator<T> {\n  return new FocusNavigator(createUniqueId());\n}\n", "import { createTag } from '../../utils/namespace';\n\nexport const RADIO_GROUP_TAG = createTag('radio-group');\nexport const RADIO_GROUP_DESCRIPTION_TAG = createTag('radio-group-description');\nexport const RADIO_GROUP_LABEL_TAG = createTag('radio-group-label');\nexport const RADIO_GROUP_OPTION_TAG = createTag('radio-group-option');\n", "import {\n  createUniqueId,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  createComponent,\n} from 'solid-js/web';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  createHeadlessSelectRootSingleUncontrolledProps,\n  HeadlessSelectRootChildren,\n  HeadlessSelectSingleUncontrolledOptions,\n} from '../../headless/select';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  createRef,\n  DynamicProps,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  createDisabled,\n} from '../../utils/state-props';\nimport {\n  RadioGroupContext,\n} from './RadioGroupContext';\nimport {\n  createRadioGroupOptionFocusNavigator,\n  RadioGroupRootContext,\n} from './RadioGroupRootContext';\nimport { RADIO_GROUP_TAG } from './tags';\n\nexport type RadioGroupUncontrolledProps<V, T extends ValidConstructor = 'div'> =\n  HeadlessPropsWithRef<\n    T,\n    HeadlessSelectSingleUncontrolledOptions<V> & HeadlessSelectRootChildren<V>\n  >;\n\nexport function RadioGroupUncontrolled<V, T extends ValidConstructor = 'div'>(\n  props: RadioGroupUncontrolledProps<V, T>,\n): JSX.Element {\n  const controller = createRadioGroupOptionFocusNavigator();\n  const descriptionID = createUniqueId();\n  const labelID = createUniqueId();\n\n  return createComponent(RadioGroupRootContext.Provider, {\n    value: controller,\n    get children() {\n      return createComponent(RadioGroupContext.Provider, {\n        value: {\n          descriptionID,\n          labelID,\n        },\n        get children() {\n          return createDynamic(\n            () => props.as ?? ('div' as T),\n            mergeProps(\n              omitProps(props, [\n                'as',\n                'children',\n                'defaultValue',\n                'disabled',\n                'onChange',\n                'ref',\n              ]),\n              RADIO_GROUP_TAG,\n              {\n                role: 'radiogroup',\n                'aria-labelledby': labelID,\n                'aria-describedby': descriptionID,\n                ref: createRef(props, (e) => {\n                  controller.setRef(e);\n                }),\n              },\n              createDisabled(() => props.disabled),\n              createHeadlessSelectRootSingleUncontrolledProps(props),\n            ) as DynamicProps<T>,\n          );\n        },\n      });\n    },\n  });\n}\n", "import {\n  JSX, mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  DynamicProps,\n  HeadlessProps,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  useRadioGroupContext,\n} from './RadioGroupContext';\nimport { RADIO_GROUP_DESCRIPTION_TAG } from './tags';\n\nexport type RadioGroupDescriptionProps<T extends ValidConstructor = 'div'> =\n  HeadlessProps<T>;\n\nexport function RadioGroupDescription<T extends ValidConstructor = 'div'>(\n  props: RadioGroupDescriptionProps<T>,\n): JSX.Element {\n  const context = useRadioGroupContext('RadioGroupDescription');\n\n  return createDynamic(\n    () => props.as ?? ('div' as T),\n    mergeProps(\n      omitProps(props, ['as']),\n      RADIO_GROUP_DESCRIPTION_TAG,\n      {\n        id: context.descriptionID,\n      },\n    ) as DynamicProps<T>,\n  );\n}\n", "import {\n  JSX, mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  DynamicProps,\n  HeadlessProps,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  useRadioGroupContext,\n} from './RadioGroupContext';\nimport { RADIO_GROUP_LABEL_TAG } from './tags';\n\nexport type RadioGroupLabelProps<T extends ValidConstructor = 'label'> =\n  HeadlessProps<T>;\n\nexport function RadioGroupLabel<T extends ValidConstructor = 'label'>(\n  props: RadioGroupLabelProps<T>,\n): JSX.Element {\n  const context = useRadioGroupContext('RadioGroupLabel');\n\n  return createDynamic(\n    () => props.as ?? ('label' as T),\n    mergeProps(\n      omitProps(props, ['as']),\n      RADIO_GROUP_LABEL_TAG,\n      {\n        id: context.labelID,\n      },\n    ) as DynamicProps<T>,\n  );\n}\n", "import {\n  createComponent,\n  createEffect,\n  createSignal,\n  createUniqueId,\n  JSX,\n  mergeProps,\n  onCleanup,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  createHeadlessSelectOptionProps,\n  HeadlessSelectOptionProps,\n  useHeadlessSelectProperties,\n} from '../../headless/select';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  createRef,\n  DynamicNode,\n  DynamicProps,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport { createOwnerAttribute } from '../../utils/focus-navigator';\nimport {\n  createActive,\n  createChecked,\n  createDisabled,\n} from '../../utils/state-props';\nimport {\n  RadioGroupContext,\n} from './RadioGroupContext';\nimport {\n  useRadioGroupRootContext,\n} from './RadioGroupRootContext';\nimport { RADIO_GROUP_OPTION_TAG } from './tags';\n\nexport type RadioGroupOptionProps<V, T extends ValidConstructor = 'div'> =\n  HeadlessPropsWithRef<T, HeadlessSelectOptionProps<V>>;\n\nexport function RadioGroupOption<V, T extends ValidConstructor = 'div'>(\n  props: RadioGroupOptionProps<V, T>,\n): JSX.Element {\n  const context = useRadioGroupRootContext('RadioGroupOption');\n  const properties = useHeadlessSelectProperties<V>();\n\n  const descriptionID = createUniqueId();\n  const labelID = createUniqueId();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  const isDisabled = () => {\n    const parent = properties.disabled();\n    const local = props.disabled;\n    return parent || local;\n  };\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      const onKeyDown = (e: KeyboardEvent) => {\n        if (!isDisabled()) {\n          switch (e.key) {\n            case 'ArrowLeft':\n            case 'ArrowUp':\n              e.preventDefault();\n              context.setPrevChecked(ref);\n              break;\n            case 'ArrowRight':\n            case 'ArrowDown':\n              e.preventDefault();\n              context.setNextChecked(ref);\n              break;\n            case ' ':\n            case 'Enter':\n              if (ref.tagName === 'BUTTON') {\n                e.preventDefault();\n              }\n              context.setChecked(ref);\n              break;\n            default:\n              break;\n          }\n        }\n      };\n      const onClick = () => {\n        if (!isDisabled()) {\n          properties.select(props.value);\n        }\n      };\n      const onFocus = () => {\n        if (!isDisabled()) {\n          properties.focus(props.value);\n          properties.select(props.value);\n        }\n      };\n      const onBlur = () => {\n        if (!isDisabled()) {\n          properties.blur();\n        }\n      };\n\n      ref.addEventListener('keydown', onKeyDown);\n      ref.addEventListener('click', onClick);\n      ref.addEventListener('focus', onFocus);\n      ref.addEventListener('blur', onBlur);\n      onCleanup(() => {\n        ref.removeEventListener('keydown', onKeyDown);\n        ref.removeEventListener('click', onClick);\n        ref.removeEventListener('focus', onFocus);\n        ref.removeEventListener('blur', onBlur);\n      });\n    }\n  });\n\n  return createComponent(RadioGroupContext.Provider, {\n    value: { descriptionID, labelID },\n    get children() {\n      return createDynamic(\n        () => props.as ?? ('div' as T),\n        mergeProps(\n          omitProps(props, [\n            'as',\n            'children',\n            'value',\n            'disabled',\n            'ref',\n          ]),\n          RADIO_GROUP_OPTION_TAG,\n          createOwnerAttribute(context.getId()),\n          {\n            role: 'radio',\n            'aria-labelledby': labelID,\n            'aria-describedby': descriptionID,\n            ref: createRef(props, (e) => {\n              setInternalRef(() => e);\n            }),\n            get tabindex() {\n              const selected = properties.isSelected(props.value);\n              return (isDisabled() || !selected) ? -1 : 0;\n            },\n          },\n          createDisabled(isDisabled),\n          createChecked(() => properties.isSelected(props.value)),\n          createActive(() => properties.isActive(props.value)),\n          createHeadlessSelectOptionProps(props),\n        ) as DynamicProps<T>,\n      );\n    },\n  });\n}\n", "import {\n  createComponent,\n  JSX,\n} from 'solid-js';\nimport {\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  SelectMultipleControlled,\n  SelectMultipleControlledProps,\n} from './SelectMultipleControlled';\nimport {\n  SelectMultipleUncontrolled,\n  SelectMultipleUncontrolledProps,\n} from './SelectMultipleUncontrolled';\nimport {\n  SelectSingleControlled,\n  SelectSingleControlledProps,\n} from './SelectSingleControlled';\nimport {\n  SelectSingleUncontrolled,\n  SelectSingleUncontrolledProps,\n} from './SelectSingleUncontrolled';\n\nexport type SelectProps<V, T extends ValidConstructor = 'ul'> =\n  | SelectSingleControlledProps<V, T>\n  | SelectSingleUncontrolledProps<V, T>\n  | SelectMultipleControlledProps<V, T>\n  | SelectMultipleUncontrolledProps<V, T>;\n\nfunction isSelectUncontrolled<V, T extends ValidConstructor = 'ul'>(\n  props: SelectProps<V, T>,\n): props is SelectSingleUncontrolledProps<V, T> | SelectMultipleUncontrolledProps<V, T> {\n  return 'defaultValue' in props;\n}\n\nfunction isSelectMultiple<V, T extends ValidConstructor = 'ul'>(\n  props: SelectProps<V, T>,\n): props is SelectMultipleUncontrolledProps<V, T> | SelectMultipleControlledProps<V, T> {\n  return 'multiple' in props && props.multiple;\n}\n\nexport function Select<V, T extends ValidConstructor = 'ul'>(\n  props: SelectProps<V, T>,\n): JSX.Element {\n  if (isSelectUncontrolled(props)) {\n    if (isSelectMultiple(props)) {\n      return createComponent(SelectMultipleUncontrolled, props);\n    }\n    return createComponent(SelectSingleUncontrolled, props);\n  }\n  if (isSelectMultiple(props)) {\n    return createComponent(SelectMultipleControlled, props);\n  }\n  return createComponent(SelectSingleControlled, props);\n}\n", "import {\n  createComponent,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  SelectBaseProps,\n} from './types';\nimport {\n  HeadlessSelectMultipleControlledOptions,\n  HeadlessSelectRoot,\n  HeadlessSelectRootChildren,\n  HeadlessSelectRootProps,\n} from '../../headless/select';\nimport {\n  createRef,\n  DynamicProps,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  createSelectOptionFocusNavigator,\n  SelectContext,\n} from './SelectContext';\nimport createDynamic from '../../utils/create-dynamic';\nimport { createDisabled } from '../../utils/state-props';\nimport { SELECT_TAG } from './tags';\n\ntype SelectMultipleControlledBaseProps<V> =\n  & SelectBaseProps\n  & HeadlessSelectMultipleControlledOptions<V>\n  & HeadlessSelectRootChildren<V>;\n\nexport type SelectMultipleControlledProps<V, T extends ValidConstructor = 'ul'> =\n  HeadlessPropsWithRef<T, SelectMultipleControlledBaseProps<V>>;\n\nexport function SelectMultipleControlled<V, T extends ValidConstructor = 'ul'>(\n  props: SelectMultipleControlledProps<V, T>,\n): JSX.Element {\n  const controller = createSelectOptionFocusNavigator();\n\n  return createComponent(SelectContext.Provider, {\n    value: {\n      controller,\n      get horizontal() {\n        return !!props.horizontal;\n      },\n    },\n    get children() {\n      return createDynamic(\n        () => props.as ?? ('ul' as T),\n        mergeProps(\n          omitProps(props, [\n            'as',\n            'children',\n            'toggleable',\n            'value',\n            'onChange',\n            'multiple',\n            'horizontal',\n            'disabled',\n            'ref',\n          ]),\n          SELECT_TAG,\n          {\n            id: controller.getId(),\n            role: 'listbox',\n            'aria-multiselectable': true,\n            ref: createRef(props, (e) => {\n              controller.setRef(e);\n            }),\n            get 'aria-orientation'() {\n              return props.horizontal ? 'horizontal' : 'vertical';\n            },\n          },\n          createDisabled(() => props.disabled),\n          {\n            get children() {\n              return createComponent(HeadlessSelectRoot, {\n                multiple: true,\n                onChange: props.onChange,\n                get value() {\n                  return props.value;\n                },\n                get toggleable() {\n                  return props.toggleable;\n                },\n                get disabled() {\n                  return props.disabled;\n                },\n                get children() {\n                  return props.children;\n                },\n              } as HeadlessSelectRootProps<V>);\n            },\n          },\n        ) as DynamicProps<T>,\n      );\n    },\n  });\n}\n", "import {\n  createContext,\n  createUniqueId,\n  useContext,\n} from 'solid-js';\nimport { ValidConstructor } from '../../utils/dynamic-prop';\nimport FocusNavigator from '../../utils/focus-navigator';\n\ninterface SelectContext<T extends ValidConstructor> {\n  horizontal: boolean;\n  controller: FocusNavigator<T>\n}\n\nexport const SelectContext = createContext<SelectContext<any>>();\n\nexport function useSelectContext<T extends ValidConstructor>(\n  componentName: string,\n): SelectContext<T> {\n  const context = useContext(SelectContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <Select>`);\n}\n\nexport function createSelectOptionFocusNavigator\n  <T extends ValidConstructor>() {\n  return new FocusNavigator<T>(createUniqueId());\n}\n", "import { createTag } from '../../utils/namespace';\n\nexport const SELECT_TAG = createTag('select');\nexport const SELECT_OPTION_TAG = createTag('select-option');\n", "import {\n  createComponent,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  SelectBaseProps,\n} from './types';\nimport {\n  HeadlessSelectMultipleUncontrolledOptions,\n  HeadlessSelectRoot,\n  HeadlessSelectRootChildren,\n  HeadlessSelectRootProps,\n} from '../../headless/select';\nimport {\n  createRef,\n  DynamicProps,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  createSelectOptionFocusNavigator,\n  SelectContext,\n} from './SelectContext';\nimport createDynamic from '../../utils/create-dynamic';\nimport { createDisabled } from '../../utils/state-props';\nimport { SELECT_TAG } from './tags';\n\ntype SelectMultipleUncontrolledBaseProps<V> =\n  & SelectBaseProps\n  & HeadlessSelectMultipleUncontrolledOptions<V>\n  & HeadlessSelectRootChildren<V>;\n\nexport type SelectMultipleUncontrolledProps<V, T extends ValidConstructor = 'ul'> =\n  HeadlessPropsWithRef<T, SelectMultipleUncontrolledBaseProps<V>>;\n\nexport function SelectMultipleUncontrolled<V, T extends ValidConstructor = 'ul'>(\n  props: SelectMultipleUncontrolledProps<V, T>,\n): JSX.Element {\n  const controller = createSelectOptionFocusNavigator();\n\n  return createComponent(SelectContext.Provider, {\n    value: {\n      controller,\n      get horizontal() {\n        return !!props.horizontal;\n      },\n    },\n    get children() {\n      return createDynamic(\n        () => props.as ?? ('ul' as T),\n        mergeProps(\n          omitProps(props, [\n            'as',\n            'children',\n            'toggleable',\n            'defaultValue',\n            'onChange',\n            'multiple',\n            'horizontal',\n            'disabled',\n            'ref',\n          ]),\n          SELECT_TAG,\n          {\n            id: controller.getId(),\n            role: 'listbox',\n            'aria-multiselectable': true,\n            ref: createRef(props, (e) => {\n              controller.setRef(e);\n            }),\n            get 'aria-orientation'() {\n              return props.horizontal ? 'horizontal' : 'vertical';\n            },\n          },\n          createDisabled(() => props.disabled),\n          {\n            get children() {\n              return createComponent(HeadlessSelectRoot, {\n                multiple: true,\n                onChange: props.onChange,\n                get defaultValue() {\n                  return props.defaultValue;\n                },\n                get toggleable() {\n                  return props.toggleable;\n                },\n                get disabled() {\n                  return props.disabled;\n                },\n                get children() {\n                  return props.children;\n                },\n              } as HeadlessSelectRootProps<V>);\n            },\n          },\n        ) as DynamicProps<T>,\n      );\n    },\n  });\n}\n", "import {\n  createComponent,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  SelectBaseProps,\n} from './types';\nimport {\n  HeadlessSelectSingleControlledOptions,\n  HeadlessSelectRoot,\n  HeadlessSelectRootChildren,\n  HeadlessSelectRootProps,\n} from '../../headless/select';\nimport {\n  createRef,\n  DynamicProps,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  createSelectOptionFocusNavigator,\n  SelectContext,\n} from './SelectContext';\nimport createDynamic from '../../utils/create-dynamic';\nimport { createDisabled } from '../../utils/state-props';\nimport { SELECT_TAG } from './tags';\n\ntype SelectSingleControlledBaseProps<V> =\n  & SelectBaseProps\n  & HeadlessSelectSingleControlledOptions<V>\n  & HeadlessSelectRootChildren<V>;\n\nexport type SelectSingleControlledProps<V, T extends ValidConstructor = 'ul'> =\n  HeadlessPropsWithRef<T, SelectSingleControlledBaseProps<V>>;\n\nexport function SelectSingleControlled<V, T extends ValidConstructor = 'ul'>(\n  props: SelectSingleControlledProps<V, T>,\n): JSX.Element {\n  const controller = createSelectOptionFocusNavigator();\n\n  return createComponent(SelectContext.Provider, {\n    value: {\n      controller,\n      get horizontal() {\n        return !!props.horizontal;\n      },\n    },\n    get children() {\n      return createDynamic(\n        () => props.as ?? ('ul' as T),\n        mergeProps(\n          omitProps(props, [\n            'as',\n            'children',\n            'toggleable',\n            'value',\n            'onChange',\n            'horizontal',\n            'disabled',\n            'ref',\n          ]),\n          SELECT_TAG,\n          {\n            id: controller.getId(),\n            role: 'listbox',\n            'aria-multiselectable': false,\n            ref: createRef(props, (e) => {\n              controller.setRef(e);\n            }),\n            get 'aria-orientation'() {\n              return props.horizontal ? 'horizontal' : 'vertical';\n            },\n          },\n          createDisabled(() => props.disabled),\n          {\n            get children() {\n              return createComponent(HeadlessSelectRoot, {\n                onChange: props.onChange,\n                get value() {\n                  return props.value;\n                },\n                get toggleable() {\n                  return props.toggleable;\n                },\n                get disabled() {\n                  return props.disabled;\n                },\n                get children() {\n                  return props.children;\n                },\n              } as HeadlessSelectRootProps<V>);\n            },\n          },\n        ) as DynamicProps<T>,\n      );\n    },\n  });\n}\n", "import {\n  createComponent,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  SelectBaseProps,\n} from './types';\nimport {\n  HeadlessSelectSingleUncontrolledOptions,\n  HeadlessSelectRoot,\n  HeadlessSelectRootChildren,\n  HeadlessSelectRootProps,\n} from '../../headless/select';\nimport {\n  createRef,\n  DynamicProps,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  createSelectOptionFocusNavigator,\n  SelectContext,\n} from './SelectContext';\nimport createDynamic from '../../utils/create-dynamic';\nimport { createDisabled } from '../../utils/state-props';\nimport { SELECT_TAG } from './tags';\n\ntype SelectSingleUncontrolledBaseProps<V> =\n  & SelectBaseProps\n  & HeadlessSelectSingleUncontrolledOptions<V>\n  & HeadlessSelectRootChildren<V>;\n\nexport type SelectSingleUncontrolledProps<V, T extends ValidConstructor = 'ul'> =\n  HeadlessPropsWithRef<T, SelectSingleUncontrolledBaseProps<V>>;\n\nexport function SelectSingleUncontrolled<V, T extends ValidConstructor = 'ul'>(\n  props: SelectSingleUncontrolledProps<V, T>,\n): JSX.Element {\n  const controller = createSelectOptionFocusNavigator();\n\n  return createComponent(SelectContext.Provider, {\n    value: {\n      controller,\n      get horizontal() {\n        return !!props.horizontal;\n      },\n    },\n    get children() {\n      return createDynamic(\n        () => props.as ?? ('ul' as T),\n        mergeProps(\n          omitProps(props, [\n            'as',\n            'children',\n            'toggleable',\n            'defaultValue',\n            'onChange',\n            'horizontal',\n            'disabled',\n            'ref',\n          ]),\n          SELECT_TAG,\n          {\n            id: controller.getId(),\n            role: 'listbox',\n            'aria-multiselectable': false,\n            ref: createRef(props, (e) => {\n              controller.setRef(e);\n            }),\n            get 'aria-orientation'() {\n              return props.horizontal ? 'horizontal' : 'vertical';\n            },\n          },\n          createDisabled(() => props.disabled),\n          {\n            get children() {\n              return createComponent(HeadlessSelectRoot, {\n                onChange: props.onChange,\n                get defaultValue() {\n                  return props.defaultValue;\n                },\n                get toggleable() {\n                  return props.toggleable;\n                },\n                get disabled() {\n                  return props.disabled;\n                },\n                get children() {\n                  return props.children;\n                },\n              } as HeadlessSelectRootProps<V>);\n            },\n          },\n        ) as DynamicProps<T>,\n      );\n    },\n  });\n}\n", "import {\n  createComponent,\n  createEffect,\n  createSignal,\n  JSX,\n  mergeProps,\n  onCleanup,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  createHeadlessSelectOptionProps,\n  HeadlessSelectOptionProps,\n  useHeadlessSelectProperties,\n} from '../../headless/select';\nimport {\n  createRef,\n  DynamicNode,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport { createOwnerAttribute } from '../../utils/focus-navigator';\nimport { createActive, createDisabled, createSelected } from '../../utils/state-props';\nimport { OmitAndMerge } from '../../utils/types';\nimport {\n  Button,\n  ButtonProps,\n} from '../button';\nimport {\n  useSelectContext,\n} from './SelectContext';\nimport { SELECT_OPTION_TAG } from './tags';\n\nexport type SelectOptionProps<V, T extends ValidConstructor = 'li'> =\n  HeadlessPropsWithRef<T, OmitAndMerge<HeadlessSelectOptionProps<V>, ButtonProps<T>>>;\n\nexport function SelectOption<V, T extends ValidConstructor = 'li'>(\n  props: SelectOptionProps<V, T>,\n): JSX.Element {\n  const context = useSelectContext('Select');\n  const properties = useHeadlessSelectProperties();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  let characters = '';\n  let timeout: ReturnType<typeof setTimeout> | undefined;\n\n  onCleanup(() => {\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n  });\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      const onKeyDown = (e: KeyboardEvent) => {\n        if (!(properties.disabled() || props.disabled)) {\n          switch (e.key) {\n            case 'ArrowUp':\n              if (!context.horizontal) {\n                e.preventDefault();\n                context.controller.setPrevChecked(ref);\n              }\n              break;\n            case 'ArrowLeft':\n              if (context.horizontal) {\n                e.preventDefault();\n                context.controller.setPrevChecked(ref);\n              }\n              break;\n            case 'ArrowDown':\n              if (!context.horizontal) {\n                e.preventDefault();\n                context.controller.setNextChecked(ref);\n              }\n              break;\n            case 'ArrowRight':\n              if (context.horizontal) {\n                e.preventDefault();\n                context.controller.setNextChecked(ref);\n              }\n              break;\n            case ' ':\n            case 'Enter':\n              if (ref.tagName === 'BUTTON') {\n                e.preventDefault();\n              }\n              properties.select(props.value);\n              break;\n            case 'Home':\n              e.preventDefault();\n              context.controller.setFirstChecked();\n              break;\n            case 'End':\n              e.preventDefault();\n              context.controller.setLastChecked();\n              break;\n            default:\n              if (e.key.length === 1) {\n                characters = `${characters}${e.key}`;\n                if (timeout) {\n                  clearTimeout(timeout);\n                }\n                timeout = setTimeout(() => {\n                  context.controller.setFirstMatch(characters);\n                  characters = '';\n                }, 100);\n              }\n              break;\n          }\n        }\n      };\n      const onClick = () => {\n        if (!(properties.disabled() || props.disabled)) {\n          properties.select(props.value);\n        }\n      };\n      const onFocus = () => {\n        if (!(properties.disabled() || props.disabled)) {\n          properties.focus(props.value);\n        }\n      };\n      const onBlur = () => {\n        if (!(properties.disabled() || props.disabled)) {\n          properties.blur();\n        }\n      };\n      const onMouseEnter = () => {\n        if (!(properties.disabled() || props.disabled)) {\n          ref.focus();\n        }\n      };\n      const onMouseLeave = () => {\n        if (!(properties.disabled() || props.disabled)) {\n          ref.blur();\n        }\n      };\n\n      ref.addEventListener('keydown', onKeyDown);\n      ref.addEventListener('click', onClick);\n      ref.addEventListener('focus', onFocus);\n      ref.addEventListener('blur', onBlur);\n      ref.addEventListener('mouseenter', onMouseEnter);\n      ref.addEventListener('mouseleave', onMouseLeave);\n      onCleanup(() => {\n        ref.removeEventListener('keydown', onKeyDown);\n        ref.removeEventListener('click', onClick);\n        ref.removeEventListener('focus', onFocus);\n        ref.removeEventListener('blur', onBlur);\n        ref.removeEventListener('mouseenter', onMouseEnter);\n        ref.removeEventListener('mouseleave', onMouseLeave);\n      });\n    }\n  });\n\n  return createComponent(Button, mergeProps(\n    {\n      get as() {\n        return props.as ?? ('li' as T);\n      },\n    },\n    omitProps(props, [\n      'as',\n      'children',\n      'value',\n      'ref',\n    ]),\n    SELECT_OPTION_TAG,\n    createOwnerAttribute(context.controller.getId()),\n    {\n      role: 'option',\n      tabindex: -1,\n      ref: createRef(props, (e) => {\n        setInternalRef(() => e);\n      }),\n    },\n    createDisabled(() => props.disabled),\n    createSelected(() => properties.isSelected(props.value)),\n    createActive(() => properties.isActive(props.value)),\n    createHeadlessSelectOptionProps(props),\n  ) as ButtonProps<T>);\n}\n", "import {\n  createEffect,\n  createSignal,\n  JSX,\n  mergeProps,\n  onCleanup,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  createHeadlessSelectOptionProps,\n  HeadlessSelectOptionProps,\n  useHeadlessSelectProperties,\n} from '../../headless/select';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  createRef,\n  DynamicNode,\n  DynamicProps,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport { createOwnerAttribute } from '../../utils/focus-navigator';\nimport {\n  createActive,\n  createDisabled,\n  createSelected,\n} from '../../utils/state-props';\nimport {\n  useTabGroupContext,\n} from './TabGroupContext';\nimport { useTabListContext } from './TabListContext';\nimport { TAB_TAG } from './tags';\n\nexport type TabProps<V, T extends ValidConstructor = 'div'> =\n  HeadlessPropsWithRef<T, HeadlessSelectOptionProps<V>>;\n\nexport function Tab<V, T extends ValidConstructor = 'div'>(\n  props: TabProps<V, T>,\n): JSX.Element {\n  const rootContext = useTabGroupContext('Tab');\n  const listContext = useTabListContext('Tab');\n  const properties = useHeadlessSelectProperties<V>();\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  const isDisabled = () => {\n    const parent = properties.disabled();\n    const local = props.disabled;\n    return parent || local;\n  };\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      const onKeyDown = (e: KeyboardEvent) => {\n        if (!isDisabled()) {\n          switch (e.key) {\n            case 'ArrowUp':\n              if (!rootContext.horizontal) {\n                e.preventDefault();\n                listContext.setPrevChecked(ref);\n              }\n              break;\n            case 'ArrowLeft':\n              if (rootContext.horizontal) {\n                e.preventDefault();\n                listContext.setPrevChecked(ref);\n              }\n              break;\n            case 'ArrowDown':\n              if (!rootContext.horizontal) {\n                e.preventDefault();\n                listContext.setNextChecked(ref);\n              }\n              break;\n            case 'ArrowRight':\n              if (rootContext.horizontal) {\n                e.preventDefault();\n                listContext.setNextChecked(ref);\n              }\n              break;\n            case ' ':\n            case 'Enter':\n              if (ref.tagName === 'BUTTON') {\n                e.preventDefault();\n              }\n              listContext.setChecked(ref);\n              break;\n            case 'Home':\n              e.preventDefault();\n              listContext.setFirstChecked();\n              break;\n            case 'End':\n              e.preventDefault();\n              listContext.setLastChecked();\n              break;\n            default:\n              break;\n          }\n        }\n      };\n      const onClick = () => {\n        if (!isDisabled()) {\n          properties.select(props.value);\n        }\n      };\n      const onFocus = () => {\n        if (!isDisabled()) {\n          properties.focus(props.value);\n          properties.select(props.value);\n        }\n      };\n      const onBlur = () => {\n        if (!isDisabled()) {\n          properties.blur();\n        }\n      };\n\n      ref.addEventListener('keydown', onKeyDown);\n      ref.addEventListener('click', onClick);\n      ref.addEventListener('focus', onFocus);\n      ref.addEventListener('blur', onBlur);\n      onCleanup(() => {\n        ref.removeEventListener('keydown', onKeyDown);\n        ref.removeEventListener('click', onClick);\n        ref.removeEventListener('focus', onFocus);\n        ref.removeEventListener('blur', onBlur);\n      });\n    }\n  });\n\n  return createDynamic(\n    () => props.as ?? ('div' as T),\n    mergeProps(\n      omitProps(props, [\n        'as',\n        'children',\n        'value',\n        'disabled',\n        'ref',\n      ]),\n      TAB_TAG,\n      createOwnerAttribute(listContext.getId()),\n      {\n        role: 'tab',\n        ref: createRef(props, (e) => {\n          setInternalRef(() => e);\n        }),\n        get id() {\n          return rootContext.getId('tab', props.value);\n        },\n        get 'aria-controls'() {\n          return rootContext.getId('tab-panel', props.value);\n        },\n        get tabindex() {\n          const selected = properties.isSelected(props.value);\n          return (isDisabled() || !selected) ? -1 : 0;\n        },\n      },\n      createDisabled(isDisabled),\n      createSelected(() => properties.isSelected(props.value)),\n      createActive(() => properties.isActive(props.value)),\n      createHeadlessSelectOptionProps(props),\n    ) as DynamicProps<T>,\n  );\n}\n", "import {\n  createContext,\n  useContext,\n} from 'solid-js';\n\ninterface TabGroupContext<V> {\n  horizontal: boolean;\n  getId(kind: string, value: V): string;\n}\n\nexport const TabGroupContext = createContext<TabGroupContext<any>>();\n\nexport function useTabGroupContext<V>(\n  componentName: string,\n): TabGroupContext<V> {\n  const context = useContext(TabGroupContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <TabGroup>`);\n}\n", "import {\n  createContext,\n  createUniqueId,\n  useContext,\n} from 'solid-js';\nimport { ValidConstructor } from '../../utils/dynamic-prop';\nimport FocusNavigator from '../../utils/focus-navigator';\n\nexport const TabListContext = createContext<FocusNavigator<any>>();\n\nexport function useTabListContext<T extends ValidConstructor>(\n  componentName: string,\n): FocusNavigator<T> {\n  const context = useContext(TabListContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <TabList>`);\n}\n\nexport function createTabFocusNavigator\n  <T extends ValidConstructor>(): FocusNavigator<T> {\n  return new FocusNavigator(createUniqueId());\n}\n", "import { createTag } from '../../utils/namespace';\n\nexport const TAB_GROUP_TAG = createTag('tab-group');\nexport const TAB_LIST_TAG = createTag('tab-list');\nexport const TAB_TAG = createTag('tab');\nexport const TAB_PANEL_TAG = createTag('tab-panel');\n", "import {\n  createComponent,\n  JSX,\n} from 'solid-js';\nimport {\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  TabGroupControlled,\n  TabGroupControlledProps,\n} from './TabGroupControlled';\nimport {\n  TabGroupUncontrolled,\n  TabGroupUncontrolledProps,\n} from './TabGroupUncontrolled';\n\nexport type TabGroupProps<V, T extends ValidConstructor = 'div'> =\n  | TabGroupControlledProps<V, T>\n  | TabGroupUncontrolledProps<V, T>;\n\nfunction isTabGroupUncontrolled<V, T extends ValidConstructor = 'div'>(\n  props: TabGroupProps<V, T>,\n): props is TabGroupUncontrolledProps<V, T> {\n  return 'defaultValue' in props;\n}\n\nexport function TabGroup<V, T extends ValidConstructor = 'div'>(\n  props: TabGroupProps<V, T>,\n): JSX.Element {\n  if (isTabGroupUncontrolled(props)) {\n    return createComponent(TabGroupUncontrolled, props);\n  }\n  return createComponent(TabGroupControlled, props);\n}\n", "import {\n  JSX,\n  mergeProps,\n  createComponent,\n  createUniqueId,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  createHeadlessSelectRootSingleControlledProps,\n  HeadlessSelectRootChildren,\n  HeadlessSelectSingleControlledOptions,\n} from '../../headless/select';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  DynamicProps,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  createDisabled,\n} from '../../utils/state-props';\nimport {\n  TabGroupContext,\n} from './TabGroupContext';\nimport { TAB_GROUP_TAG } from './tags';\n\ninterface TabGroupControlledBaseProps<V>\n  extends HeadlessSelectSingleControlledOptions<V>, HeadlessSelectRootChildren<V> {\n    horizontal: boolean;\n  }\n\nexport type TabGroupControlledProps<V, T extends ValidConstructor = 'div'> =\n  HeadlessPropsWithRef<T, TabGroupControlledBaseProps<V>>;\n\nexport function TabGroupControlled<V, T extends ValidConstructor = 'div'>(\n  props: TabGroupControlledProps<V, T>,\n): JSX.Element {\n  const ownerID = createUniqueId();\n\n  let id = 0;\n  const ids = new Map<V, number>();\n\n  return createComponent(TabGroupContext.Provider, {\n    value: {\n      get horizontal() {\n        return props.horizontal ?? true;\n      },\n      getId(kind: string, value: V): string {\n        let currentID = ids.get(value);\n        if (!currentID) {\n          currentID = id;\n          ids.set(value, currentID);\n          id += 1;\n        }\n        return `${ownerID}__${kind}-${currentID}`;\n      },\n    },\n    get children() {\n      return createDynamic(\n        () => props.as ?? ('div' as T),\n        mergeProps(\n          omitProps(props, [\n            'as',\n            'children',\n            'value',\n            'disabled',\n            'onChange',\n            'ref',\n          ]),\n          TAB_GROUP_TAG,\n          createDisabled(() => props.disabled),\n          createHeadlessSelectRootSingleControlledProps(props),\n        ) as DynamicProps<T>,\n      );\n    },\n  });\n}\n", "import {\n  JSX,\n  mergeProps,\n  createComponent,\n  createUniqueId,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  createHeadlessSelectRootSingleUncontrolledProps,\n  HeadlessSelectRootChildren,\n  HeadlessSelectSingleUncontrolledOptions,\n} from '../../headless/select';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  DynamicProps,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  createDisabled,\n} from '../../utils/state-props';\nimport {\n  TabGroupContext,\n} from './TabGroupContext';\nimport { TAB_GROUP_TAG } from './tags';\n\ninterface TabGroupUncontrolledBaseProps<V>\n  extends HeadlessSelectSingleUncontrolledOptions<V>, HeadlessSelectRootChildren<V> {\n    horizontal: boolean;\n  }\n\nexport type TabGroupUncontrolledProps<V, T extends ValidConstructor = 'div'> =\n  HeadlessPropsWithRef<T, TabGroupUncontrolledBaseProps<V>>;\n\nexport function TabGroupUncontrolled<V, T extends ValidConstructor = 'div'>(\n  props: TabGroupUncontrolledProps<V, T>,\n): JSX.Element {\n  const ownerID = createUniqueId();\n\n  let id = 0;\n  const ids = new Map<V, number>();\n\n  return createComponent(TabGroupContext.Provider, {\n    value: {\n      get horizontal() {\n        return props.horizontal ?? true;\n      },\n      getId(kind: string, value: V): string {\n        let currentID = ids.get(value);\n        if (!currentID) {\n          currentID = id;\n          ids.set(value, currentID);\n          id += 1;\n        }\n        return `${ownerID}__${kind}-${currentID}`;\n      },\n    },\n    get children() {\n      return createDynamic(\n        () => props.as ?? ('div' as T),\n        mergeProps(\n          omitProps(props, [\n            'as',\n            'children',\n            'defaultValue',\n            'disabled',\n            'onChange',\n            'ref',\n          ]),\n          TAB_GROUP_TAG,\n          createDisabled(() => props.disabled),\n          createHeadlessSelectRootSingleUncontrolledProps(props),\n        ) as DynamicProps<T>,\n      );\n    },\n  });\n}\n", "import {\n  createComponent,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  HeadlessSelectChildProps,\n  createHeadlessSelectChild,\n} from '../../headless/select';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  createRef,\n  DynamicProps,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport { useTabGroupContext } from './TabGroupContext';\nimport {\n  createTabFocusNavigator,\n  TabListContext,\n} from './TabListContext';\nimport { TAB_LIST_TAG } from './tags';\n\nexport type TabListProps<V, T extends ValidConstructor = 'div'> =\n  HeadlessPropsWithRef<T, HeadlessSelectChildProps<V>>;\n\nexport function TabList<V, T extends ValidConstructor = 'div'>(\n  props: TabListProps<V, T>,\n): JSX.Element {\n  const rootContext = useTabGroupContext('TabList');\n  const controller = createTabFocusNavigator();\n\n  return createComponent(TabListContext.Provider, {\n    value: controller,\n    get children() {\n      return createDynamic(\n        () => props.as ?? ('div' as T),\n        mergeProps(\n          omitProps(props, ['as', 'ref', 'children']),\n          TAB_LIST_TAG,\n          {\n            role: 'tablist',\n            get 'aria-orientation'() {\n              return rootContext.horizontal ? 'horizontal' : 'vertical';\n            },\n            ref: createRef(props, (e) => {\n              controller.setRef(e);\n            }),\n          },\n          createHeadlessSelectChild(props),\n        ) as DynamicProps<T>,\n      );\n    },\n  });\n}\n", "import {\n  JSX, mergeProps,\n} from 'solid-js';\nimport { omitProps } from 'solid-use';\nimport {\n  createHeadlessSelectOptionProps,\n  HeadlessSelectOptionProps, useHeadlessSelectProperties,\n} from '../../headless/select';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  ValidConstructor,\n  DynamicProps,\n  HeadlessProps,\n} from '../../utils/dynamic-prop';\nimport { createUnmountable } from '../../utils/Unmountable';\nimport {\n  useTabGroupContext,\n} from './TabGroupContext';\nimport { TAB_PANEL_TAG } from './tags';\n\ninterface TabPanelBaseProps<V> extends Exclude<HeadlessSelectOptionProps<V>, 'disabled'> {\n  unmount?: boolean;\n}\n\nexport type TabPanelProps<V, T extends ValidConstructor = 'div'> =\n  HeadlessProps<T, TabPanelBaseProps<V>>;\n\nexport function TabPanel<V, T extends ValidConstructor = 'div'>(\n  props: TabPanelProps<V, T>,\n): JSX.Element {\n  const rootContext = useTabGroupContext('TabPanel');\n  const properties = useHeadlessSelectProperties<V>();\n\n  return createUnmountable(\n    props,\n    () => properties.isSelected(props.value),\n    () => createDynamic(\n      () => props.as ?? ('div' as T),\n      mergeProps(\n        omitProps(props, ['as', 'children', 'disabled', 'unmount', 'value']),\n        TAB_PANEL_TAG,\n        {\n          role: 'tabpanel',\n          get tabindex() {\n            return properties.isSelected(props.value) ? 0 : -1;\n          },\n          get id() {\n            return rootContext.getId('tab-panel', props.value);\n          },\n          get 'aria-labelledby'() {\n            return rootContext.getId('tab', props.value);\n          },\n        },\n        createHeadlessSelectOptionProps(props),\n      ) as DynamicProps<T>,\n    ),\n  );\n}\n", "import {\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  DynamicProps,\n  HeadlessProps,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport { TOAST_TAG } from './tags';\nimport {\n  useToastContext,\n} from './ToastContext';\n\nexport type ToastProps<T extends ValidConstructor = 'div'> =\n  HeadlessProps<T>;\n\nexport function Toast<T extends ValidConstructor = 'div'>(\n  props: ToastProps<T>,\n): JSX.Element {\n  useToastContext('Toast');\n\n  return createDynamic(\n    () => props.as ?? ('div' as T),\n    mergeProps(\n      omitProps(props, [\n        'as',\n      ]),\n      TOAST_TAG,\n      {\n        role: 'status',\n        'aria-live': 'polite',\n      },\n    ) as DynamicProps<T>,\n  );\n}\n", "import { createTag } from '../../utils/namespace';\n\nexport const TOAST_TAG = createTag('toast');\nexport const TOASTER_TAG = createTag('toaster');\n", "import {\n  createContext,\n  useContext,\n} from 'solid-js';\n\ninterface ToastContext {\n  ownerID: string;\n}\n\nexport const ToastContext = createContext<ToastContext>();\n\nexport function useToastContext(componentName: string): ToastContext {\n  const context = useContext(ToastContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <Toaster>`);\n}\n", "import {\n  createComponent,\n  createUniqueId,\n  JSX,\n  mergeProps,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  ValidConstructor,\n  HeadlessProps,\n  DynamicProps,\n} from '../../utils/dynamic-prop';\nimport { TOASTER_TAG } from './tags';\nimport {\n  ToastContext,\n} from './ToastContext';\n\nexport type ToasterProps<T extends ValidConstructor = 'div'> =\n  HeadlessProps<T>;\n\nexport function Toaster<T extends ValidConstructor = 'div'>(\n  props: ToasterProps<T>,\n): JSX.Element {\n  const ownerID = createUniqueId();\n\n  return createComponent(ToastContext.Provider, {\n    value: {\n      ownerID,\n    },\n    get children() {\n      return createDynamic(\n        () => props.as ?? ('div' as T),\n        mergeProps(\n          omitProps(props, [\n            'as',\n          ]),\n          TOASTER_TAG,\n        ) as DynamicProps<T>,\n      );\n    },\n  });\n}\n", "export interface ToastData<T> {\n  id: string;\n  data: T;\n}\n\nexport type ToasterListener<T> = (queue: ToastData<T>[]) => void;\n\nexport class ToasterStore<T> {\n  private static toasterID = 0;\n\n  private id: number;\n\n  private queue: ToastData<T>[] = [];\n\n  private listeners = new Set<ToasterListener<T>>();\n\n  private toastID = 0;\n\n  constructor() {\n    this.id = ToasterStore.toasterID;\n    ToasterStore.toasterID += 1;\n  }\n\n  subscribe(callback: ToasterListener<T>): () => void {\n    this.listeners.add(callback);\n    return () => {\n      this.listeners.delete(callback);\n    };\n  }\n\n  private notify(): void {\n    const clone = [...this.queue];\n    for (const listener of this.listeners.keys()) {\n      listener(clone);\n    }\n  }\n\n  create(data: T): string {\n    const id = `toast-${this.id}-[${this.toastID}`;\n    this.toastID += 1;\n    this.queue.push({\n      id,\n      data,\n    });\n    this.notify();\n    return id;\n  }\n\n  remove(id: string): void {\n    this.queue = this.queue.filter((item) => item.id !== id);\n    this.notify();\n  }\n\n  clear(): void {\n    this.queue = [];\n    this.notify();\n  }\n\n  getQueue(): ToastData<T>[] {\n    return this.queue;\n  }\n}\n", "import {\n  createSignal,\n  createEffect,\n  onCleanup,\n} from 'solid-js';\nimport {\n  ToasterStore,\n  ToastData,\n} from './ToasterStore';\n\nexport default function useToaster<T>(toaster: ToasterStore<T>): () => ToastData<T>[] {\n  const [signal, setSignal] = createSignal(toaster.getQueue());\n\n  createEffect(() => {\n    onCleanup(toaster.subscribe(setSignal));\n  });\n\n  return signal;\n}\n", "import {\n  createComponent,\n  JSX,\n} from 'solid-js';\nimport {\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  ToggleControlled,\n  ToggleControlledProps,\n} from './ToggleControlled';\nimport {\n  ToggleUncontrolled,\n  ToggleUncontrolledProps,\n} from './ToggleUncontrolled';\n\nexport {\n  ToggleUncontrolledProps,\n  ToggleControlledProps,\n};\n\nexport type ToggleProps<T extends ValidConstructor = 'button'> =\n  | ToggleControlledProps<T>\n  | ToggleUncontrolledProps<T>;\n\nfunction isToggleUncontrolled<T extends ValidConstructor = 'button'>(\n  props: ToggleProps<T>,\n): props is ToggleUncontrolledProps<T> {\n  return 'defaultPressed' in props;\n}\n\nexport function Toggle<T extends ValidConstructor = 'button'>(\n  props: ToggleProps<T>,\n): JSX.Element {\n  if (isToggleUncontrolled(props)) {\n    return createComponent(ToggleUncontrolled, props);\n  }\n  return createComponent(ToggleControlled, props);\n}\n", "import {\n  createSignal,\n  createEffect,\n  onCleanup,\n  createComponent,\n  mergeProps,\n  JSX,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  createRef,\n  DynamicNode,\n  DynamicProps,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport { OmitAndMerge } from '../../utils/types';\nimport {\n  Button,\n  ButtonProps,\n} from '../button';\nimport { TOGGLE_TAG } from './tags';\n\ninterface ToggleControlledBaseProps {\n  pressed: boolean;\n  onChange?: (value: boolean) => void;\n}\n\nexport type ToggleControlledProps<T extends ValidConstructor = 'button'> =\n  HeadlessPropsWithRef<T, OmitAndMerge<ToggleControlledBaseProps, ButtonProps<T>>>;\n\nexport function ToggleControlled<T extends ValidConstructor = 'button'>(\n  props: ToggleControlledProps<T>,\n): JSX.Element {\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      const onClick = () => {\n        props.onChange?.(!props.pressed);\n      };\n\n      ref.addEventListener('click', onClick);\n      onCleanup(() => {\n        ref.removeEventListener('click', onClick);\n      });\n    }\n  });\n\n  return createComponent(Button, mergeProps(\n    omitProps(props, [\n      'onChange',\n      'pressed',\n      'ref',\n    ]),\n    TOGGLE_TAG,\n    {\n      get 'aria-pressed'() {\n        return props.pressed;\n      },\n      get 'data-sh-pressed'() {\n        return props.pressed;\n      },\n      ref: createRef(props, (e) => {\n        setInternalRef(() => e);\n      }),\n    },\n  ) as DynamicProps<T>);\n}\n", "import { createTag } from '../../utils/namespace';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const TOGGLE_TAG = createTag('toggle');\n", "import {\n  createSignal,\n  createEffect,\n  onCleanup,\n  createComponent,\n  mergeProps,\n  JSX,\n  untrack,\n  batch,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport {\n  createRef,\n  DynamicNode,\n  DynamicProps,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport { OmitAndMerge } from '../../utils/types';\nimport {\n  Button,\n  ButtonProps,\n} from '../button';\nimport { TOGGLE_TAG } from './tags';\n\ninterface ToggleUncontrolledBaseProps {\n  defaultPressed: boolean;\n  onChange?: (value: boolean) => void;\n}\n\nexport type ToggleUncontrolledProps<T extends ValidConstructor = 'button'> =\n  HeadlessPropsWithRef<T, OmitAndMerge<ToggleUncontrolledBaseProps, ButtonProps<T>>>;\n\nexport function ToggleUncontrolled<T extends ValidConstructor = 'button'>(\n  props: ToggleUncontrolledProps<T>,\n): JSX.Element {\n  const [state, setState] = createSignal(!!props.defaultPressed);\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      const onClick = () => {\n        const current = !untrack(state);\n        batch(() => {\n          setState(current);\n          props.onChange?.(current);\n        });\n      };\n\n      ref.addEventListener('click', onClick);\n      onCleanup(() => {\n        ref.removeEventListener('click', onClick);\n      });\n    }\n  });\n\n  return createComponent(Button, mergeProps(\n    omitProps(props, [\n      'onChange',\n      'defaultPressed',\n      'ref',\n    ]),\n    TOGGLE_TAG,\n    {\n      get 'aria-pressed'() {\n        return state();\n      },\n      get 'data-sh-pressed'() {\n        return state();\n      },\n      ref: createRef(props, (e) => {\n        setInternalRef(() => e);\n      }),\n    },\n  ) as DynamicProps<T>);\n}\n", "import {\n  createEffect,\n  createSignal,\n  JSX,\n  mergeProps,\n  onCleanup,\n} from 'solid-js';\nimport { omitProps } from 'solid-use';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  createRef,\n  DynamicNode,\n  DynamicProps,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport {\n  focusFirst,\n  focusLast,\n  focusNext,\n  focusPrev,\n} from '../../utils/focus-navigation';\nimport getFocusableElements from '../../utils/focus-query';\nimport { createTag } from '../../utils/namespace';\n\nconst TOOLBAR_TAG = createTag('toolbar');\n\nexport type ToolbarProps<T extends ValidConstructor = 'div'> =\n  HeadlessPropsWithRef<T, { horizontal?: boolean; }>;\n\nexport function Toolbar<T extends ValidConstructor = 'div'>(\n  props: ToolbarProps<T>,\n): JSX.Element {\n  const isHorizontal = () => (props.horizontal ?? true);\n\n  const [internalRef, setInternalRef] = createSignal<DynamicNode<T>>();\n  let focusedElement: HTMLElement | undefined;\n\n  function getNextFocusable(): void {\n    const ref = internalRef();\n    if (\n      ref instanceof HTMLElement\n      && document.activeElement\n      && ref.contains(document.activeElement)\n    ) {\n      focusNext(getFocusableElements(ref), document.activeElement);\n    }\n  }\n\n  function getPrevFocusable(): void {\n    const ref = internalRef();\n    if (\n      ref instanceof HTMLElement\n      && document.activeElement\n      && ref.contains(document.activeElement)\n    ) {\n      focusPrev(getFocusableElements(ref), document.activeElement);\n    }\n  }\n\n  createEffect(() => {\n    const ref = internalRef();\n    if (ref instanceof HTMLElement) {\n      const onKeyDown = (e: KeyboardEvent) => {\n        switch (e.key) {\n          case 'ArrowLeft':\n            if (isHorizontal()) {\n              e.preventDefault();\n              getPrevFocusable();\n            }\n            break;\n          case 'ArrowUp':\n            if (!isHorizontal()) {\n              e.preventDefault();\n              getPrevFocusable();\n            }\n            break;\n          case 'ArrowRight':\n            if (isHorizontal()) {\n              e.preventDefault();\n              getNextFocusable();\n            }\n            break;\n          case 'ArrowDown':\n            if (!isHorizontal()) {\n              e.preventDefault();\n              getNextFocusable();\n            }\n            break;\n          case 'Home':\n            if (focusFirst(getFocusableElements(ref))) {\n              e.preventDefault();\n            }\n            break;\n          case 'End':\n            if (focusLast(getFocusableElements(ref))) {\n              e.preventDefault();\n            }\n            break;\n          default:\n            break;\n        }\n      };\n\n      const onFocus = () => {\n        if (focusedElement) {\n          focusedElement.focus();\n        } else {\n          focusFirst(getFocusableElements(ref));\n        }\n      };\n\n      const onFocusIn = (e: FocusEvent) => {\n        if (e.target && e.target !== ref) {\n          focusedElement = e.target as HTMLElement;\n        }\n      };\n\n      ref.addEventListener('keydown', onKeyDown);\n      ref.addEventListener('focus', onFocus);\n      ref.addEventListener('focusin', onFocusIn);\n      onCleanup(() => {\n        ref.removeEventListener('keydown', onKeyDown);\n        ref.removeEventListener('focus', onFocus);\n        ref.removeEventListener('focusin', onFocusIn);\n      });\n    }\n  });\n\n  return createDynamic(\n    () => props.as ?? ('div' as T),\n    mergeProps(\n      omitProps(props, [\n        'as',\n        'horizontal',\n        'ref',\n      ]),\n      TOOLBAR_TAG,\n      {\n        role: 'toolbar',\n        tabindex: 0,\n        ref: createRef(props, (e) => {\n          setInternalRef(() => e);\n        }),\n        get 'aria-orientation'() {\n          return isHorizontal() ? 'horizontal' : 'vertical';\n        },\n      },\n    ) as DynamicProps<T>,\n  );\n}\n", "import {\n  createComponent,\n  createContext,\n  createEffect,\n  createSignal,\n  JSX,\n  mergeProps,\n  splitProps,\n  useContext,\n} from 'solid-js';\nimport {\n  omitProps,\n} from 'solid-use';\nimport createDynamic from '../../utils/create-dynamic';\nimport {\n  createRef,\n  DynamicNode,\n  DynamicProps,\n  HeadlessPropsWithRef,\n  ValidConstructor,\n} from '../../utils/dynamic-prop';\nimport { createUnmountable } from '../../utils/Unmountable';\n\ninterface TransitionRootContext {\n  show: boolean;\n}\n\nconst TransitionRootContext = createContext<TransitionRootContext>();\n\nfunction useTransitionRootContext(componentName: string): TransitionRootContext {\n  const context = useContext(TransitionRootContext);\n\n  if (context) {\n    return context;\n  }\n  throw new Error(`<${componentName}> must be used inside a <Transition>`);\n}\n\ninterface TransitionBaseChildProps {\n  unmount?: boolean;\n  appear?: boolean;\n  enter?: string;\n  enterFrom?: string;\n  enterTo?: string;\n  entered?: string;\n  leave?: string;\n  leaveFrom?: string;\n  leaveTo?: string;\n  beforeEnter?: () => void;\n  afterEnter?: () => void;\n  beforeLeave?: () => void;\n  afterLeave?: () => void;\n}\n\nfunction getClassList(classes?: string): string[] {\n  return classes ? classes.split(' ') : [];\n}\n\nfunction addClassList(ref: HTMLElement, classes: string[]) {\n  const filtered = classes.filter((value) => value);\n  if (filtered.length) {\n    ref.classList.add(...filtered);\n  }\n}\nfunction removeClassList(ref: HTMLElement, classes: string[]) {\n  const filtered = classes.filter((value) => value);\n  if (filtered.length) {\n    ref.classList.remove(...filtered);\n  }\n}\n\nexport type TransitionChildProps<T extends ValidConstructor = 'div'> =\n  HeadlessPropsWithRef<T, TransitionBaseChildProps>;\n\nexport function TransitionChild<T extends ValidConstructor = 'div'>(\n  props: TransitionChildProps<T>,\n): JSX.Element {\n  const values = useTransitionRootContext('TransitionChild');\n\n  const [visible, setVisible] = createSignal(values.show);\n  const [ref, setRef] = createSignal<DynamicNode<T>>();\n\n  let initial = true;\n\n  function transition(element: HTMLElement, shouldEnter: boolean): void {\n    if (shouldEnter) {\n      if (initial) {\n        const enter = getClassList(props.enter);\n        const enterFrom = getClassList(props.enterFrom);\n        const enterTo = getClassList(props.enterTo);\n        const entered = getClassList(props.entered);\n\n        const endTransition = () => {\n          removeClassList(element, enter);\n          removeClassList(element, enterTo);\n          addClassList(element, entered);\n          props.afterEnter?.();\n        };\n\n        props.beforeEnter?.();\n        addClassList(element, enter);\n        addClassList(element, enterFrom);\n\n        requestAnimationFrame(() => {\n          removeClassList(element, enterFrom);\n          addClassList(element, enterTo);\n          element.addEventListener('transitionend', endTransition, { once: true });\n          element.addEventListener('animationend', endTransition, { once: true });\n        });\n      }\n    } else {\n      const leave = getClassList(props.leave);\n      const leaveFrom = getClassList(props.leaveFrom);\n      const leaveTo = getClassList(props.leaveTo);\n      const entered = getClassList(props.entered);\n      props.beforeLeave?.();\n      removeClassList(element, entered);\n      addClassList(element, leave);\n      addClassList(element, leaveFrom);\n      requestAnimationFrame(() => {\n        removeClassList(element, leaveFrom);\n        addClassList(element, leaveTo);\n      });\n      const endTransition = () => {\n        removeClassList(element, leave);\n        removeClassList(element, leaveTo);\n        setVisible(false);\n        props.afterLeave?.();\n      };\n      element.addEventListener('transitionend', endTransition, { once: true });\n      element.addEventListener('animationend', endTransition, { once: true });\n    }\n  }\n\n  createEffect(() => {\n    const shouldShow = values.show;\n\n    if (shouldShow) {\n      setVisible(true);\n    }\n\n    const internalRef = ref();\n    if (internalRef instanceof HTMLElement) {\n      transition(internalRef, shouldShow);\n    } else {\n      // Ref is missing, reset initial\n      initial = true;\n    }\n  });\n\n  return createUnmountable(\n    props,\n    visible,\n    () => createDynamic(\n      () => props.as ?? ('div' as T),\n      mergeProps(\n        omitProps(props, [\n          'as',\n          'enter',\n          'enterFrom',\n          'enterTo',\n          'leave',\n          'leaveFrom',\n          'leaveTo',\n          'unmount',\n          'afterEnter',\n          'afterLeave',\n          'appear',\n          'beforeEnter',\n          'beforeLeave',\n          'entered',\n          'ref',\n        ]),\n        {\n          ref: createRef(props, (e) => {\n            setRef(() => e);\n          }),\n        },\n      ) as DynamicProps<T>,\n    ),\n  );\n}\n\nexport type TransitionProps<T extends ValidConstructor = 'div'> =\n  TransitionRootContext & TransitionChildProps<T>;\n\nexport function Transition<T extends ValidConstructor = 'div'>(\n  props: TransitionProps<T>,\n): JSX.Element {\n  const [local, others] = splitProps(props, [\n    'show',\n  ]);\n  return createComponent(TransitionRootContext.Provider, {\n    value: local,\n    get children() {\n      return createComponent(TransitionChild, others);\n    },\n  });\n}\n"],
  "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",
  "names": ["import_solid_js", "import_solid_js", "import_solid_js", "import_solid_js", "import_solid_js", "import_solid_js", "import_solid_js", "import_solid_js", "import_solid_js", "import_solid_js", "import_solid_js", "import_solid_js", "import_solid_js", "import_solid_js", "import_solid_js", "import_solid_js", "import_solid_js", "import_solid_js", "import_solid_js", "import_solid_js", "import_solid_js", "import_solid_js", "import_solid_js", "import_solid_js", "import_solid_js", "import_solid_js", "import_solid_js", "import_solid_js", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_js", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_js", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_js", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_js", "import_solid_use", "import_solid_js", "import_web", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_js", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_js", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_js", "import_web", "import_solid_use", "import_solid_js", "import_solid_js", "import_solid_js", "import_web", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_js", "import_solid_js", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_js", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "import_solid_js", "import_solid_use", "getNextFocusable", "import_solid_js", "import_solid_use", "_a"]
}
